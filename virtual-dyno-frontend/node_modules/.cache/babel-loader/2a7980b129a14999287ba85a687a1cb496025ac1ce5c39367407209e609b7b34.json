{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\VirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './VirtualDyno.css';\n\n// Virtual Dyno Room that processes REAL user CSV files\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RealCSVVirtualDyno = () => {\n  _s();\n  var _dynoResults$peaks, _dynoResults$peaks2, _dynoResults$peaks3, _dynoResults$peaks4, _dynoTypes$dynoResult, _dynoResults$settings, _dynoResults$settings2, _dynoResults$settings3, _dynoResults$settings4, _dynoResults$peaks5, _dynoResults$peaks6, _dynoResults$peaks7;\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [selectedCar, setSelectedCar] = useState('mazdaspeed3');\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\n    dynoType: 'mustang_md250',\n    temperature: 75,\n    humidity: 45,\n    altitude: 500,\n    runs: 1\n  });\n  const fileInputRef = useRef(null);\n\n  // Dyno characteristics\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250 (Load Bearing)\",\n      correction: 1.0,\n      variance: 0.02,\n      heatSoak: 0.98\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C (Inertial)\",\n      correction: 1.15,\n      variance: 0.03,\n      heatSoak: 0.96\n    },\n    awd_dyno: {\n      name: \"AWD Dyno (All-Wheel)\",\n      correction: 0.95,\n      variance: 0.04,\n      heatSoak: 0.97\n    }\n  };\n\n  // Parse uploaded CSV file\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setCsvFile(file);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csv = e.target.result;\n      const lines = csv.split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n        const values = line.split(',');\n        const row = {};\n        headers.forEach((header, index) => {\n          var _values$index;\n          row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n        });\n        return row;\n      }).filter(row => {\n        // Filter for valid dyno data (like your C# backend does)\n        const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\n        const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\n        const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\n        return rpm > 2000 && maf > 5 && load > 0.15;\n      });\n      setCsvData(data);\n      console.log(`Loaded ${data.length} valid data points from CSV`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Run virtual dyno using YOUR C# backend for calculations\n  const runVirtualDyno = async () => {\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n    try {\n      var _processedData$find, _processedData$find2, _backendResults$peaks, _backendResults$peaks2, _backendResults$peaks3, _backendResults$peaks4;\n      // 1. Send real CSV to YOUR C# backend for processing\n      const backendResults = await sendToBackend();\n      if (!backendResults) {\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\n        setIsRunning(false);\n        return;\n      }\n      console.log('Backend response structure:', backendResults);\n\n      // 2. Get the official datapoints from YOUR backend\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\n      if (!detailResponse.ok) {\n        console.error('Failed to get detailed run data:', detailResponse.status);\n        setIsRunning(false);\n        return;\n      }\n      const detailData = await detailResponse.json();\n      console.log('Detail data structure:', detailData);\n\n      // 3. Apply virtual dyno characteristics to YOUR calculated results\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\n        // Use YOUR backend's calculations as base, apply dyno characteristics\n        const dyno = dynoTypes[virtualDynoSettings.dynoType];\n\n        // Environmental effects\n        const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\n        const humidityCorrection = 1 - virtualDynoSettings.humidity / 100 * 0.047;\n        const altitudeCorrection = 1 - virtualDynoSettings.altitude * 0.000035;\n        const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\n\n        // Heat soak\n        const heatSoak = Math.pow(dyno.heatSoak, virtualDynoSettings.runs - 1);\n\n        // Dyno type correction and variance\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n        return {\n          rpm: point.rpm || 0,\n          hp: (point.horsepower || 0) * envCorrection * heatSoak * dyno.correction * variance,\n          torque: (point.torque || 0) * envCorrection * heatSoak * variance,\n          boost: point.boost || 0,\n          maf: point.massAirflow || 0,\n          load: point.load || 0,\n          backendHP: point.horsepower || 0,\n          // Original backend calculation\n          backendTorque: point.torque || 0 // Original backend calculation\n        };\n      });\n\n      // 4. Animate the virtual dyno run\n      for (let i = 0; i < processedData.length; i++) {\n        setCurrentDataPoint(i);\n        // Show current point during animation\n        if (i < processedData.length) {\n          setDynoResults(prev => ({\n            ...prev,\n            currentPoint: processedData[i]\n          }));\n        }\n        await new Promise(resolve => setTimeout(resolve, 150));\n      }\n\n      // 5. Calculate final peaks from virtual dyno\n      const peaks = {\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\n        maxHPRpm: ((_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm) || 0,\n        maxTorqueRpm: ((_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm) || 0,\n        // Also include YOUR backend's original peaks for comparison\n        backendMaxHP: ((_backendResults$peaks = backendResults.peaks) === null || _backendResults$peaks === void 0 ? void 0 : _backendResults$peaks.maxHorsepower) || 0,\n        backendMaxTorque: ((_backendResults$peaks2 = backendResults.peaks) === null || _backendResults$peaks2 === void 0 ? void 0 : _backendResults$peaks2.maxTorque) || 0,\n        backendMaxHPRpm: ((_backendResults$peaks3 = backendResults.peaks) === null || _backendResults$peaks3 === void 0 ? void 0 : _backendResults$peaks3.maxHorsepowerRpm) || 0,\n        backendMaxTorqueRpm: ((_backendResults$peaks4 = backendResults.peaks) === null || _backendResults$peaks4 === void 0 ? void 0 : _backendResults$peaks4.maxTorqueRpm) || 0\n      };\n      setDynoResults({\n        processedData,\n        peaks,\n        settings: virtualDynoSettings,\n        fileName: csvFile.name,\n        backendResults // Store original backend results\n      });\n    } catch (error) {\n      console.error('Error running virtual dyno:', error);\n      alert('Error connecting to backend API. Make sure your C# API is running.');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Send to your C# backend and return results\n  const sendToBackend = async () => {\n    if (!csvFile) return null;\n    try {\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', selectedCar);\n      formData.append('Weight', '3200');\n      formData.append('Gear', '4');\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}`);\n      formData.append('IsPublic', 'false');\n      console.log('Sending CSV to C# backend...');\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const backendResults = await response.json();\n        console.log('✅ C# Backend Results:', backendResults);\n        console.log('Backend peaks:', backendResults.peaks);\n        console.log('Backend dataPointCount:', backendResults.dataPointCount);\n        return backendResults;\n      } else {\n        console.error('Backend API error:', response.status, response.statusText);\n        const errorText = await response.text();\n        console.error('Error response:', errorText);\n        return null;\n      }\n    } catch (error) {\n      console.error('Failed to connect to C# backend:', error);\n      return null;\n    }\n  };\n  const resetDyno = () => {\n    setDynoResults(null);\n    setCurrentDataPoint(0);\n    setVirtualDynoSettings(prev => ({\n      ...prev,\n      runs: 1\n    }));\n  };\n  const runAgain = () => {\n    if (dynoResults !== null && dynoResults !== void 0 && dynoResults.settings) {\n      setVirtualDynoSettings(prev => ({\n        ...prev,\n        runs: prev.runs + 1\n      }));\n      runVirtualDyno();\n    }\n  };\n  const currentData = (dynoResults === null || dynoResults === void 0 ? void 0 : dynoResults.currentPoint) || (dynoResults === null || dynoResults === void 0 ? void 0 : dynoResults.processedData) && dynoResults.processedData[currentDataPoint];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFC1 Virtual Dyno Experience - Powered by Your C# Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#d4edda',\n        border: '1px solid #c3e6cb',\n        padding: '10px',\n        borderRadius: '5px',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u2699\\uFE0F Make sure your C# backend is running:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"cd VirtualDyno.API && dotnet run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gap: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px dashed #007bff',\n          padding: '20px',\n          borderRadius: '8px',\n          textAlign: 'center',\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC1 Upload Your Datalog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fileInputRef.current.click(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: csvFile ? '✅ Change File' : '📂 Select CSV File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 18\n            }, this), \" \", csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 18\n            }, this), \" \", csvData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD27 Virtual Dyno Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dyno Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: virtualDynoSettings.dynoType,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            dynoType: e.target.value\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 10px 0',\n            padding: '5px'\n          },\n          children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: dyno.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Temperature: \", virtualDynoSettings.temperature, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"50\",\n          max: \"110\",\n          value: virtualDynoSettings.temperature,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            temperature: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Humidity: \", virtualDynoSettings.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"90\",\n          value: virtualDynoSettings.humidity,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            humidity: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Run #:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 14\n          }, this), \" \", virtualDynoSettings.runs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Heat Soak:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 14\n          }, this), \" \", (Math.pow(dynoTypes[virtualDynoSettings.dynoType].heatSoak, virtualDynoSettings.runs - 1) * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #28a745',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: isRunning ? '#fff3cd' : '#f8fff8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83D\\uDCCA \", isRunning ? 'DYNO RUNNING...' : 'Virtual Dyno']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), isRunning && currentData && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#ffeb3b',\n            padding: '10px',\n            borderRadius: '5px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px',\n              fontWeight: 'bold'\n            },\n            children: [currentData.rpm || 0, \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '18px'\n            },\n            children: [(currentData.hp || 0).toFixed(1), \" HP | \", (currentData.torque || 0).toFixed(1), \" lb-ft\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px'\n            },\n            children: [\"Boost: \", (currentData.boost || 0).toFixed(1), \" PSI | MAF: \", (currentData.maf || 0).toFixed(1), \" g/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '10px',\n              backgroundColor: '#ddd',\n              borderRadius: '5px',\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: `${csvData.length > 0 ? currentDataPoint / csvData.length * 100 : 0}%`,\n                height: '100%',\n                backgroundColor: '#28a745',\n                borderRadius: '5px',\n                transition: 'width 0.1s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83C\\uDFC6 Virtual Dyno Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#e8f5e8',\n              padding: '10px',\n              borderRadius: '5px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [(((_dynoResults$peaks = dynoResults.peaks) === null || _dynoResults$peaks === void 0 ? void 0 : _dynoResults$peaks.maxHP) || 0).toFixed(1), \" HP\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 20\n              }, this), \" @ \", ((_dynoResults$peaks2 = dynoResults.peaks) === null || _dynoResults$peaks2 === void 0 ? void 0 : _dynoResults$peaks2.maxHPRpm) || 'N/A', \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [(((_dynoResults$peaks3 = dynoResults.peaks) === null || _dynoResults$peaks3 === void 0 ? void 0 : _dynoResults$peaks3.maxTorque) || 0).toFixed(1), \" lb-ft\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 20\n              }, this), \" @ \", ((_dynoResults$peaks4 = dynoResults.peaks) === null || _dynoResults$peaks4 === void 0 ? void 0 : _dynoResults$peaks4.maxTorqueRpm) || 'N/A', \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [\"Dyno: \", ((_dynoTypes$dynoResult = dynoTypes[(_dynoResults$settings = dynoResults.settings) === null || _dynoResults$settings === void 0 ? void 0 : _dynoResults$settings.dynoType]) === null || _dynoTypes$dynoResult === void 0 ? void 0 : _dynoTypes$dynoResult.name) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 87\n              }, this), \"Temp: \", ((_dynoResults$settings2 = dynoResults.settings) === null || _dynoResults$settings2 === void 0 ? void 0 : _dynoResults$settings2.temperature) || 'N/A', \"\\xB0F, Humidity: \", ((_dynoResults$settings3 = dynoResults.settings) === null || _dynoResults$settings3 === void 0 ? void 0 : _dynoResults$settings3.humidity) || 'N/A', \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 125\n              }, this), \"Run #\", ((_dynoResults$settings4 = dynoResults.settings) === null || _dynoResults$settings4 === void 0 ? void 0 : _dynoResults$settings4.runs) || 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), ((_dynoResults$peaks5 = dynoResults.peaks) === null || _dynoResults$peaks5 === void 0 ? void 0 : _dynoResults$peaks5.backendMaxHP) && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#e3f2fd',\n              padding: '8px',\n              borderRadius: '5px',\n              fontSize: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uD83E\\uDDEE Your C# Backend Results:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 63\n            }, this), (dynoResults.peaks.backendMaxHP || 0).toFixed(1), \" HP @ \", ((_dynoResults$peaks6 = dynoResults.peaks) === null || _dynoResults$peaks6 === void 0 ? void 0 : _dynoResults$peaks6.backendMaxHPRpm) || 'N/A', \" RPM\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 124\n            }, this), (dynoResults.peaks.backendMaxTorque || 0).toFixed(1), \" lb-ft @ \", ((_dynoResults$peaks7 = dynoResults.peaks) === null || _dynoResults$peaks7 === void 0 ? void 0 : _dynoResults$peaks7.backendMaxTorqueRpm) || 'N/A', \" RPM\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 135\n            }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"(Before virtual dyno effects)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), !isRunning && !dynoResults && csvData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f8f9fa',\n            padding: '10px',\n            borderRadius: '5px',\n            textAlign: 'center',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ready to Run!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"CSV loaded with \", csvData.length, \" data points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click \\\"START VIRTUAL DYNO\\\" to process with your C# backend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), !isRunning && !dynoResults && csvData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '15px',\n            borderRadius: '5px',\n            textAlign: 'center',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload a CSV file to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runVirtualDyno,\n        disabled: !csvData.length || isRunning,\n        style: {\n          padding: '15px 30px',\n          backgroundColor: isRunning ? '#ccc' : '#dc3545',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '18px',\n          fontWeight: 'bold',\n          marginRight: '10px',\n          cursor: isRunning ? 'not-allowed' : 'pointer'\n        },\n        children: isRunning ? '🏃 DYNO RUNNING...' : '🚀 START VIRTUAL DYNO'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runAgain,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#ffc107',\n            color: 'black',\n            border: 'none',\n            borderRadius: '5px',\n            marginRight: '10px',\n            cursor: 'pointer'\n          },\n          children: \"\\uD83D\\uDD04 Run Again (Heat Soak)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetDyno,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"\\uD83D\\uDD04 Reset Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDFAE How to Use Your Virtual Dyno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Upload your real CSV datalog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this), \" (AccessPort, Cobb, MHD, etc.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Choose dyno type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), \" - Different dynos read differently\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Set environmental conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), \" - Hot weather = less power\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Watch your car \\\"run\\\" on the virtual dyno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 15\n          }, this), \" - Real-time simulation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Run multiple pulls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this), \" - See heat soak effects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFAF This uses YOUR C# backend calculations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 12\n        }, this), \" with virtual dyno simulation!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#fff3cd',\n          padding: '10px',\n          borderRadius: '5px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83D\\uDD27 Technical Flow:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 46\n        }, this), \"1. Upload real CSV \\u2192 2. Send to C# backend \\u2192 3. Get your calculations \\u2192 4. Apply virtual dyno effects \\u2192 5. Immersive experience\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(RealCSVVirtualDyno, \"P3PCt3+PNFXn6zQU6lCtk/JxxZM=\");\n_c = RealCSVVirtualDyno;\nexport default VirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"RealCSVVirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","RealCSVVirtualDyno","_s","_dynoResults$peaks","_dynoResults$peaks2","_dynoResults$peaks3","_dynoResults$peaks4","_dynoTypes$dynoResult","_dynoResults$settings","_dynoResults$settings2","_dynoResults$settings3","_dynoResults$settings4","_dynoResults$peaks5","_dynoResults$peaks6","_dynoResults$peaks7","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","selectedCar","setSelectedCar","virtualDynoSettings","setVirtualDynoSettings","dynoType","temperature","humidity","altitude","runs","fileInputRef","dynoTypes","mustang_md250","name","correction","variance","heatSoak","dynojet_248c","awd_dyno","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csv","result","lines","split","headers","map","h","trim","data","slice","filter","line","length","values","row","forEach","header","index","_values$index","rpm","parseInt","maf","parseFloat","load","console","log","readAsText","runVirtualDyno","alert","_processedData$find","_processedData$find2","_backendResults$peaks","_backendResults$peaks2","_backendResults$peaks3","_backendResults$peaks4","backendResults","sendToBackend","detailResponse","fetch","id","ok","error","status","detailData","json","processedData","dataPoints","point","dyno","tempCorrection","Math","sqrt","humidityCorrection","altitudeCorrection","envCorrection","pow","random","hp","horsepower","torque","boost","massAirflow","backendHP","backendTorque","i","prev","currentPoint","Promise","resolve","setTimeout","peaks","maxHP","max","d","maxTorque","maxHPRpm","find","p","maxTorqueRpm","backendMaxHP","maxHorsepower","backendMaxTorque","backendMaxHPRpm","maxHorsepowerRpm","backendMaxTorqueRpm","settings","fileName","formData","FormData","append","response","method","body","dataPointCount","statusText","errorText","text","resetDyno","runAgain","currentData","style","padding","maxWidth","margin","children","_jsxFileName","lineNumber","columnNumber","backgroundColor","border","borderRadius","marginBottom","textAlign","display","gridTemplateColumns","gap","type","accept","onChange","ref","onClick","current","click","color","cursor","fontSize","marginTop","value","width","Object","entries","key","min","toFixed","fontWeight","height","transition","disabled","marginRight","_c","VirtualDyno","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/VirtualDyno.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './VirtualDyno.css';\r\n\r\n// Virtual Dyno Room that processes REAL user CSV files\r\nconst RealCSVVirtualDyno = () => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [selectedCar, setSelectedCar] = useState('mazdaspeed3');\r\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\r\n    dynoType: 'mustang_md250',\r\n    temperature: 75,\r\n    humidity: 45,\r\n    altitude: 500,\r\n    runs: 1\r\n  });\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Dyno characteristics\r\n  const dynoTypes = {\r\n    mustang_md250: {\r\n      name: \"Mustang MD250 (Load Bearing)\",\r\n      correction: 1.0,\r\n      variance: 0.02,\r\n      heatSoak: 0.98\r\n    },\r\n    dynojet_248c: {\r\n      name: \"DynoJet 248C (Inertial)\", \r\n      correction: 1.15,\r\n      variance: 0.03,\r\n      heatSoak: 0.96\r\n    },\r\n    awd_dyno: {\r\n      name: \"AWD Dyno (All-Wheel)\",\r\n      correction: 0.95,\r\n      variance: 0.04,\r\n      heatSoak: 0.97\r\n    }\r\n  };\r\n\r\n  // Parse uploaded CSV file\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setCsvFile(file);\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csv = e.target.result;\r\n      const lines = csv.split('\\n');\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      \r\n      const data = lines.slice(1)\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => {\r\n          const values = line.split(',');\r\n          const row = {};\r\n          headers.forEach((header, index) => {\r\n            row[header] = values[index]?.trim();\r\n          });\r\n          return row;\r\n        })\r\n        .filter(row => {\r\n          // Filter for valid dyno data (like your C# backend does)\r\n          const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\r\n          const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\r\n          const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\r\n          \r\n          return rpm > 2000 && maf > 5 && load > 0.15;\r\n        });\r\n      \r\n      setCsvData(data);\r\n      console.log(`Loaded ${data.length} valid data points from CSV`);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Run virtual dyno using YOUR C# backend for calculations\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    \r\n    try {\r\n      // 1. Send real CSV to YOUR C# backend for processing\r\n      const backendResults = await sendToBackend();\r\n      \r\n      if (!backendResults) {\r\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      console.log('Backend response structure:', backendResults);\r\n      \r\n      // 2. Get the official datapoints from YOUR backend\r\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\r\n      \r\n      if (!detailResponse.ok) {\r\n        console.error('Failed to get detailed run data:', detailResponse.status);\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      const detailData = await detailResponse.json();\r\n      console.log('Detail data structure:', detailData);\r\n      \r\n      // 3. Apply virtual dyno characteristics to YOUR calculated results\r\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\r\n        // Use YOUR backend's calculations as base, apply dyno characteristics\r\n        const dyno = dynoTypes[virtualDynoSettings.dynoType];\r\n        \r\n        // Environmental effects\r\n        const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\r\n        const humidityCorrection = 1 - (virtualDynoSettings.humidity / 100 * 0.047);\r\n        const altitudeCorrection = 1 - (virtualDynoSettings.altitude * 0.000035);\r\n        const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\r\n        \r\n        // Heat soak\r\n        const heatSoak = Math.pow(dyno.heatSoak, virtualDynoSettings.runs - 1);\r\n        \r\n        // Dyno type correction and variance\r\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n        \r\n        return {\r\n          rpm: point.rpm || 0,\r\n          hp: (point.horsepower || 0) * envCorrection * heatSoak * dyno.correction * variance,\r\n          torque: (point.torque || 0) * envCorrection * heatSoak * variance,\r\n          boost: point.boost || 0,\r\n          maf: point.massAirflow || 0,\r\n          load: point.load || 0,\r\n          backendHP: point.horsepower || 0, // Original backend calculation\r\n          backendTorque: point.torque || 0   // Original backend calculation\r\n        };\r\n      });\r\n      \r\n      // 4. Animate the virtual dyno run\r\n      for (let i = 0; i < processedData.length; i++) {\r\n        setCurrentDataPoint(i);\r\n        // Show current point during animation\r\n        if (i < processedData.length) {\r\n          setDynoResults(prev => ({\r\n            ...prev,\r\n            currentPoint: processedData[i]\r\n          }));\r\n        }\r\n        await new Promise(resolve => setTimeout(resolve, 150));\r\n      }\r\n      \r\n      // 5. Calculate final peaks from virtual dyno\r\n      const peaks = {\r\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\r\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\r\n        maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))?.rpm || 0,\r\n        maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))?.rpm || 0,\r\n        // Also include YOUR backend's original peaks for comparison\r\n        backendMaxHP: backendResults.peaks?.maxHorsepower || 0,\r\n        backendMaxTorque: backendResults.peaks?.maxTorque || 0,\r\n        backendMaxHPRpm: backendResults.peaks?.maxHorsepowerRpm || 0,\r\n        backendMaxTorqueRpm: backendResults.peaks?.maxTorqueRpm || 0\r\n      };\r\n      \r\n      setDynoResults({\r\n        processedData,\r\n        peaks,\r\n        settings: virtualDynoSettings,\r\n        fileName: csvFile.name,\r\n        backendResults // Store original backend results\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error running virtual dyno:', error);\r\n      alert('Error connecting to backend API. Make sure your C# API is running.');\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Send to your C# backend and return results\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) return null;\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', selectedCar);\r\n      formData.append('Weight', '3200');\r\n      formData.append('Gear', '4');\r\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      console.log('Sending CSV to C# backend...');\r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const backendResults = await response.json();\r\n        console.log('✅ C# Backend Results:', backendResults);\r\n        console.log('Backend peaks:', backendResults.peaks);\r\n        console.log('Backend dataPointCount:', backendResults.dataPointCount);\r\n        return backendResults;\r\n      } else {\r\n        console.error('Backend API error:', response.status, response.statusText);\r\n        const errorText = await response.text();\r\n        console.error('Error response:', errorText);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to connect to C# backend:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const resetDyno = () => {\r\n    setDynoResults(null);\r\n    setCurrentDataPoint(0);\r\n    setVirtualDynoSettings(prev => ({ ...prev, runs: 1 }));\r\n  };\r\n\r\n  const runAgain = () => {\r\n    if (dynoResults?.settings) {\r\n      setVirtualDynoSettings(prev => ({ ...prev, runs: prev.runs + 1 }));\r\n      runVirtualDyno();\r\n    }\r\n  };\r\n\r\n  const currentData = dynoResults?.currentPoint || (dynoResults?.processedData && dynoResults.processedData[currentDataPoint]);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1400px', margin: '0 auto' }}>\r\n      <h1>🏁 Virtual Dyno Experience - Powered by Your C# Backend</h1>\r\n      \r\n      <div style={{ \r\n        backgroundColor: '#d4edda', \r\n        border: '1px solid #c3e6cb',\r\n        padding: '10px', \r\n        borderRadius: '5px',\r\n        marginBottom: '20px',\r\n        textAlign: 'center'\r\n      }}>\r\n        <strong>⚙️ Make sure your C# backend is running:</strong> <code>cd VirtualDyno.API && dotnet run</code>\r\n      </div>\r\n      \r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: '1fr 1fr 1fr', \r\n        gap: '20px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        \r\n        {/* File Upload */}\r\n        <div style={{ \r\n          border: '2px dashed #007bff', \r\n          padding: '20px', \r\n          borderRadius: '8px',\r\n          textAlign: 'center',\r\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\r\n        }}>\r\n          <h3>📁 Upload Your Datalog</h3>\r\n          <input \r\n            type=\"file\" \r\n            accept=\".csv\"\r\n            onChange={handleFileUpload}\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <button \r\n            onClick={() => fileInputRef.current.click()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#007bff',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            {csvFile ? '✅ Change File' : '📂 Select CSV File'}\r\n          </button>\r\n          \r\n          {csvFile && (\r\n            <div style={{ marginTop: '10px', fontSize: '14px' }}>\r\n              <p><strong>File:</strong> {csvFile.name}</p>\r\n              <p><strong>Data Points:</strong> {csvData.length}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Virtual Dyno Settings */}\r\n        <div style={{ \r\n          border: '1px solid #ddd', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          backgroundColor: '#f9f9f9'\r\n        }}>\r\n          <h3>🔧 Virtual Dyno Setup</h3>\r\n          \r\n          <label>Dyno Type:</label>\r\n          <select \r\n            value={virtualDynoSettings.dynoType}\r\n            onChange={(e) => setVirtualDynoSettings(prev => ({\r\n              ...prev, dynoType: e.target.value\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 10px 0', padding: '5px' }}\r\n          >\r\n            {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n              <option key={key} value={key}>{dyno.name}</option>\r\n            ))}\r\n          </select>\r\n          \r\n          <label>Temperature: {virtualDynoSettings.temperature}°F</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"50\" \r\n            max=\"110\" \r\n            value={virtualDynoSettings.temperature}\r\n            onChange={(e) => setVirtualDynoSettings(prev => ({\r\n              ...prev, temperature: parseInt(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 10px 0' }}\r\n          />\r\n          \r\n          <label>Humidity: {virtualDynoSettings.humidity}%</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"10\" \r\n            max=\"90\" \r\n            value={virtualDynoSettings.humidity}\r\n            onChange={(e) => setVirtualDynoSettings(prev => ({\r\n              ...prev, humidity: parseInt(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 10px 0' }}\r\n          />\r\n          \r\n          <p><strong>Run #:</strong> {virtualDynoSettings.runs}</p>\r\n          <p><strong>Heat Soak:</strong> {(Math.pow(dynoTypes[virtualDynoSettings.dynoType].heatSoak, virtualDynoSettings.runs - 1) * 100).toFixed(1)}%</p>\r\n        </div>\r\n\r\n        {/* Live Dyno Display */}\r\n        <div style={{ \r\n          border: '2px solid #28a745', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          backgroundColor: isRunning ? '#fff3cd' : '#f8fff8'\r\n        }}>\r\n          <h3>📊 {isRunning ? 'DYNO RUNNING...' : 'Virtual Dyno'}</h3>\r\n          \r\n          {isRunning && currentData && (\r\n            <div style={{ \r\n              backgroundColor: '#ffeb3b', \r\n              padding: '10px', \r\n              borderRadius: '5px',\r\n              textAlign: 'center'\r\n            }}>\r\n              <div style={{ fontSize: '24px', fontWeight: 'bold' }}>\r\n                {currentData.rpm || 0} RPM\r\n              </div>\r\n              <div style={{ fontSize: '18px' }}>\r\n                {(currentData.hp || 0).toFixed(1)} HP | {(currentData.torque || 0).toFixed(1)} lb-ft\r\n              </div>\r\n              <div style={{ fontSize: '14px' }}>\r\n                Boost: {(currentData.boost || 0).toFixed(1)} PSI | MAF: {(currentData.maf || 0).toFixed(1)} g/s\r\n              </div>\r\n              <div style={{ \r\n                width: '100%', \r\n                height: '10px', \r\n                backgroundColor: '#ddd', \r\n                borderRadius: '5px',\r\n                marginTop: '10px'\r\n              }}>\r\n                <div style={{ \r\n                  width: `${csvData.length > 0 ? (currentDataPoint / csvData.length) * 100 : 0}%`,\r\n                  height: '100%',\r\n                  backgroundColor: '#28a745',\r\n                  borderRadius: '5px',\r\n                  transition: 'width 0.1s'\r\n                }}></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {dynoResults && !isRunning && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h4>🏆 Virtual Dyno Results</h4>\r\n              <div style={{ backgroundColor: '#e8f5e8', padding: '10px', borderRadius: '5px', marginBottom: '10px' }}>\r\n                <p><strong>{(dynoResults.peaks?.maxHP || 0).toFixed(1)} HP</strong> @ {dynoResults.peaks?.maxHPRpm || 'N/A'} RPM</p>\r\n                <p><strong>{(dynoResults.peaks?.maxTorque || 0).toFixed(1)} lb-ft</strong> @ {dynoResults.peaks?.maxTorqueRpm || 'N/A'} RPM</p>\r\n                <p style={{ fontSize: '12px', color: '#666' }}>\r\n                  Dyno: {dynoTypes[dynoResults.settings?.dynoType]?.name || 'Unknown'}<br/>\r\n                  Temp: {dynoResults.settings?.temperature || 'N/A'}°F, Humidity: {dynoResults.settings?.humidity || 'N/A'}%<br/>\r\n                  Run #{dynoResults.settings?.runs || 1}\r\n                </p>\r\n              </div>\r\n              \r\n              {dynoResults.peaks?.backendMaxHP && (\r\n                <div style={{ backgroundColor: '#e3f2fd', padding: '8px', borderRadius: '5px', fontSize: '12px' }}>\r\n                  <strong>🧮 Your C# Backend Results:</strong><br/>\r\n                  {(dynoResults.peaks.backendMaxHP || 0).toFixed(1)} HP @ {dynoResults.peaks?.backendMaxHPRpm || 'N/A'} RPM<br/>\r\n                  {(dynoResults.peaks.backendMaxTorque || 0).toFixed(1)} lb-ft @ {dynoResults.peaks?.backendMaxTorqueRpm || 'N/A'} RPM<br/>\r\n                  <em>(Before virtual dyno effects)</em>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {!isRunning && !dynoResults && csvData.length > 0 && (\r\n            <div style={{ \r\n              backgroundColor: '#f8f9fa', \r\n              padding: '10px', \r\n              borderRadius: '5px',\r\n              textAlign: 'center',\r\n              fontSize: '14px'\r\n            }}>\r\n              <p><strong>Ready to Run!</strong></p>\r\n              <p>CSV loaded with {csvData.length} data points</p>\r\n              <p>Click \"START VIRTUAL DYNO\" to process with your C# backend</p>\r\n            </div>\r\n          )}\r\n          \r\n          {!isRunning && !dynoResults && csvData.length === 0 && (\r\n            <div style={{ \r\n              backgroundColor: '#f5f5f5', \r\n              padding: '15px', \r\n              borderRadius: '5px',\r\n              textAlign: 'center',\r\n              color: '#666'\r\n            }}>\r\n              <p>Upload a CSV file to get started</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Control Buttons */}\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button \r\n          onClick={runVirtualDyno}\r\n          disabled={!csvData.length || isRunning}\r\n          style={{\r\n            padding: '15px 30px',\r\n            backgroundColor: isRunning ? '#ccc' : '#dc3545',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            marginRight: '10px',\r\n            cursor: isRunning ? 'not-allowed' : 'pointer'\r\n          }}\r\n        >\r\n          {isRunning ? '🏃 DYNO RUNNING...' : '🚀 START VIRTUAL DYNO'}\r\n        </button>\r\n        \r\n        {dynoResults && !isRunning && (\r\n          <>\r\n            <button \r\n              onClick={runAgain}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#ffc107',\r\n                color: 'black',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                marginRight: '10px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              🔄 Run Again (Heat Soak)\r\n            </button>\r\n            \r\n            <button \r\n              onClick={resetDyno}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#6c757d',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              🔄 Reset Session\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      <div style={{ \r\n        padding: '20px', \r\n        backgroundColor: '#e3f2fd', \r\n        borderRadius: '8px',\r\n        marginTop: '20px'\r\n      }}>\r\n        <h4>🎮 How to Use Your Virtual Dyno:</h4>\r\n        <ol>\r\n          <li><strong>Upload your real CSV datalog</strong> (AccessPort, Cobb, MHD, etc.)</li>\r\n          <li><strong>Choose dyno type</strong> - Different dynos read differently</li>\r\n          <li><strong>Set environmental conditions</strong> - Hot weather = less power</li>\r\n          <li><strong>Watch your car \"run\" on the virtual dyno</strong> - Real-time simulation</li>\r\n          <li><strong>Run multiple pulls</strong> - See heat soak effects</li>\r\n        </ol>\r\n        \r\n        <p><strong>🎯 This uses YOUR C# backend calculations</strong> with virtual dyno simulation!</p>\r\n        \r\n        <div style={{ \r\n          backgroundColor: '#fff3cd', \r\n          padding: '10px', \r\n          borderRadius: '5px',\r\n          marginTop: '10px'\r\n        }}>\r\n          <strong>🔧 Technical Flow:</strong><br/>\r\n          1. Upload real CSV → 2. Send to C# backend → 3. Get your calculations → 4. Apply virtual dyno effects → 5. Immersive experience\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualDyno;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}