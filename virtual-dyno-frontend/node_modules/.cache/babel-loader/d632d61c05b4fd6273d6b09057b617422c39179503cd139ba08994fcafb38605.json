{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\DynoPhysicsDemo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\n\n// Dyno Training Data (converted from YAML)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DYNO_DATA = {\n  dyno_types: {\n    mustang_md250: {\n      type: \"load_bearing\",\n      correction_factor: 1.0,\n      inertia: \"low\",\n      typical_variance: 0.02,\n      heat_soak_factor: 0.98\n    },\n    dynojet_248c: {\n      type: \"inertial\",\n      correction_factor: 1.15,\n      inertia: \"high\",\n      typical_variance: 0.03,\n      heat_soak_factor: 0.96\n    }\n  },\n  training_data: {\n    mazdaspeed3_2007: {\n      manufacturer: \"Mazda\",\n      model: \"Mazdaspeed3\",\n      engine: \"2.3L Turbo I4\",\n      weight: 3200,\n      power_curve: [{\n        rpm: 2500,\n        hp: 145,\n        torque: 306\n      }, {\n        rpm: 3000,\n        hp: 180,\n        torque: 315\n      }, {\n        rpm: 3500,\n        hp: 210,\n        torque: 315\n      }, {\n        rpm: 4000,\n        hp: 225,\n        torque: 295\n      }, {\n        rpm: 4500,\n        hp: 235,\n        torque: 275\n      }, {\n        rpm: 5000,\n        hp: 238,\n        torque: 250\n      }, {\n        rpm: 5500,\n        hp: 238,\n        torque: 227\n      }, {\n        rpm: 6000,\n        hp: 232,\n        torque: 203\n      }, {\n        rpm: 6500,\n        hp: 220,\n        torque: 178\n      }]\n    }\n  }\n};\n\n// Physics Engine Class\nclass DynoPhysicsEngine {\n  constructor(dynoType = 'mustang_md250') {\n    this.dynoType = DYNO_DATA.dyno_types[dynoType];\n    this.runNumber = 1;\n    this.conditions = {\n      temperature_f: 75,\n      humidity: 0.45,\n      barometric_pressure: 29.92,\n      altitude: 500\n    };\n  }\n\n  // Calculate environmental correction factor\n  calculateEnvironmentalCorrection() {\n    const {\n      temperature_f,\n      humidity,\n      barometric_pressure,\n      altitude\n    } = this.conditions;\n\n    // SAE J1349 correction formula (simplified)\n    const tempCorrection = Math.sqrt(537.67 / (temperature_f + 459.67));\n    const pressureCorrection = barometric_pressure / 29.23;\n    const humidityCorrection = 1 - 0.047 * humidity;\n    const altitudeCorrection = 1 - altitude * 0.000035; // 3.5% per 1000ft\n\n    return tempCorrection * pressureCorrection * humidityCorrection * altitudeCorrection;\n  }\n\n  // Add realistic dyno noise/variance\n  addDynoVariance(value) {\n    const variance = this.dynoType.typical_variance;\n    const randomFactor = 1 + (Math.random() - 0.5) * 2 * variance;\n    return value * randomFactor;\n  }\n\n  // Apply heat soak effect\n  getHeatSoakFactor() {\n    const baseFactor = this.dynoType.heat_soak_factor;\n    return Math.pow(baseFactor, this.runNumber - 1);\n  }\n\n  // Main simulation function\n  simulateRun(targetCurve) {\n    const envCorrection = this.calculateEnvironmentalCorrection();\n    const heatSoak = this.getHeatSoakFactor();\n    const dynoCorrection = this.dynoType.correction_factor;\n    return targetCurve.map(point => ({\n      rpm: point.rpm,\n      hp: this.addDynoVariance(point.hp * envCorrection * heatSoak * dynoCorrection),\n      torque: this.addDynoVariance(point.torque * envCorrection * heatSoak),\n      timestamp: Date.now() + (point.rpm - targetCurve[0].rpm) * 50 // 50ms per RPM increment\n    }));\n  }\n\n  // Update conditions\n  setConditions(newConditions) {\n    this.conditions = {\n      ...this.conditions,\n      ...newConditions\n    };\n  }\n\n  // Increment run number for heat soak\n  nextRun() {\n    this.runNumber++;\n  }\n\n  // Reset for new session\n  reset() {\n    this.runNumber = 1;\n  }\n}\n\n// React Component for Testing the Physics Engine\nconst DynoPhysicsDemo = () => {\n  _s();\n  var _simulatedData$find, _simulatedData$find2;\n  const [engine] = useState(() => new DynoPhysicsEngine('mustang_md250'));\n  const [simulatedData, setSimulatedData] = useState([]);\n  const [conditions, setConditions] = useState({\n    temperature_f: 75,\n    humidity: 0.45,\n    barometric_pressure: 29.92,\n    altitude: 500\n  });\n  const [dynoType, setDynoType] = useState('mustang_md250');\n  const [runNumber, setRunNumber] = useState(1);\n  const [isRunning, setIsRunning] = useState(false);\n\n  // Simulate a dyno run\n  const runSimulation = () => {\n    setIsRunning(true);\n    engine.setConditions(conditions);\n\n    // Get the target curve (Mazdaspeed3 in this example)\n    const targetCurve = DYNO_DATA.training_data.mazdaspeed3_2007.power_curve;\n\n    // Simulate the run\n    const results = engine.simulateRun(targetCurve);\n\n    // Animate the results coming in (like a real dyno)\n    let currentIndex = 0;\n    const animateResults = () => {\n      if (currentIndex < results.length) {\n        setSimulatedData(prev => [...prev, results[currentIndex]]);\n        currentIndex++;\n        setTimeout(animateResults, 200); // 200ms delay between points\n      } else {\n        setIsRunning(false);\n        engine.nextRun();\n        setRunNumber(engine.runNumber);\n      }\n    };\n\n    // Clear previous data and start animation\n    setSimulatedData([]);\n    setTimeout(animateResults, 500);\n  };\n  const resetSession = () => {\n    engine.reset();\n    setRunNumber(1);\n    setSimulatedData([]);\n  };\n\n  // Calculate peak values\n  const peaks = simulatedData.length > 0 ? {\n    maxHp: Math.max(...simulatedData.map(d => d.hp)),\n    maxTorque: Math.max(...simulatedData.map(d => d.torque)),\n    maxHpRpm: (_simulatedData$find = simulatedData.find(d => d.hp === Math.max(...simulatedData.map(p => p.hp)))) === null || _simulatedData$find === void 0 ? void 0 : _simulatedData$find.rpm,\n    maxTqRpm: (_simulatedData$find2 = simulatedData.find(d => d.torque === Math.max(...simulatedData.map(p => p.torque)))) === null || _simulatedData$find2 === void 0 ? void 0 : _simulatedData$find2.rpm\n  } : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFC1 Virtual Dyno Physics Engine Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n        gap: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83C\\uDF21\\uFE0F Environmental Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Temperature (\\xB0F): \", conditions.temperature_f]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"50\",\n          max: \"110\",\n          value: conditions.temperature_f,\n          onChange: e => setConditions(prev => ({\n            ...prev,\n            temperature_f: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Humidity: \", (conditions.humidity * 100).toFixed(0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"1\",\n          step: \"0.01\",\n          value: conditions.humidity,\n          onChange: e => setConditions(prev => ({\n            ...prev,\n            humidity: parseFloat(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Altitude (ft): \", conditions.altitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"5000\",\n          step: \"100\",\n          value: conditions.altitude,\n          onChange: e => setConditions(prev => ({\n            ...prev,\n            altitude: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD27 Dyno Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dyno Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: dynoType,\n          onChange: e => {\n            setDynoType(e.target.value);\n            engine.dynoType = DYNO_DATA.dyno_types[e.target.value];\n          },\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0',\n            padding: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mustang_md250\",\n            children: \"Mustang MD250 (Load Bearing)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dynojet_248c\",\n            children: \"DynoJet 248C (Inertial)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Run Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 14\n          }, this), \" \", runNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Heat Soak Factor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 14\n          }, this), \" \", (engine.getHeatSoakFactor() * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runSimulation,\n          disabled: isRunning,\n          style: {\n            width: '100%',\n            padding: '10px',\n            backgroundColor: isRunning ? '#ccc' : '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            fontSize: '16px',\n            marginBottom: '10px',\n            cursor: isRunning ? 'not-allowed' : 'pointer'\n          },\n          children: isRunning ? '🏃 Running Dyno Pull...' : '🚀 Start Dyno Run'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetSession,\n          style: {\n            width: '100%',\n            padding: '8px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"\\uD83D\\uDD04 Reset Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), peaks && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#e8f5e8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Peak Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Max HP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 16\n          }, this), \" \", peaks.maxHp.toFixed(1), \" @ \", peaks.maxHpRpm, \" RPM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Max Torque:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 16\n          }, this), \" \", peaks.maxTorque.toFixed(1), \" @ \", peaks.maxTqRpm, \" RPM\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Correction Factor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 16\n          }, this), \" \", engine.dynoType.correction_factor, \"x\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Environmental Loss:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 16\n          }, this), \" \", ((1 - engine.calculateEnvironmentalCorrection()) * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), simulatedData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ddd',\n        padding: '20px',\n        borderRadius: '8px',\n        backgroundColor: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC8 Dyno Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))',\n          gap: '10px',\n          fontSize: '12px'\n        },\n        children: simulatedData.map((point, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            padding: '5px',\n            backgroundColor: index === simulatedData.length - 1 ? '#ffeb3b' : '#f5f5f5',\n            borderRadius: '3px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [point.rpm, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [point.hp.toFixed(1), \" HP\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [point.torque.toFixed(1), \" lb-ft\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '15px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDFAE How to Use:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adjust environmental conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), \" - See how temperature/humidity affects power\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Choose dyno type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), \" - Mustang reads lower, DynoJet reads ~15% higher\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Run multiple pulls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), \" - Watch heat soak reduce power on consecutive runs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Compare results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), \" - See realistic variance between runs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"This simulates a 2007 Mazdaspeed3 on different dyno types with real physics!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n_s(DynoPhysicsDemo, \"/EXmKz3fFRiDNA725A0a3HUbEb4=\");\n_c = DynoPhysicsDemo;\nexport default DynoPhysicsDemo;\nvar _c;\n$RefreshReg$(_c, \"DynoPhysicsDemo\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","DYNO_DATA","dyno_types","mustang_md250","type","correction_factor","inertia","typical_variance","heat_soak_factor","dynojet_248c","training_data","mazdaspeed3_2007","manufacturer","model","engine","weight","power_curve","rpm","hp","torque","DynoPhysicsEngine","constructor","dynoType","runNumber","conditions","temperature_f","humidity","barometric_pressure","altitude","calculateEnvironmentalCorrection","tempCorrection","Math","sqrt","pressureCorrection","humidityCorrection","altitudeCorrection","addDynoVariance","value","variance","randomFactor","random","getHeatSoakFactor","baseFactor","pow","simulateRun","targetCurve","envCorrection","heatSoak","dynoCorrection","map","point","timestamp","Date","now","setConditions","newConditions","nextRun","reset","DynoPhysicsDemo","_s","_simulatedData$find","_simulatedData$find2","simulatedData","setSimulatedData","setDynoType","setRunNumber","isRunning","setIsRunning","runSimulation","results","currentIndex","animateResults","length","prev","setTimeout","resetSession","peaks","maxHp","max","d","maxTorque","maxHpRpm","find","p","maxTqRpm","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginBottom","border","borderRadius","backgroundColor","min","onChange","e","parseInt","target","width","toFixed","step","parseFloat","onClick","disabled","color","fontSize","cursor","index","textAlign","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/DynoPhysicsDemo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n// Dyno Training Data (converted from YAML)\r\nconst DYNO_DATA = {\r\n  dyno_types: {\r\n    mustang_md250: {\r\n      type: \"load_bearing\",\r\n      correction_factor: 1.0,\r\n      inertia: \"low\",\r\n      typical_variance: 0.02,\r\n      heat_soak_factor: 0.98\r\n    },\r\n    dynojet_248c: {\r\n      type: \"inertial\", \r\n      correction_factor: 1.15,\r\n      inertia: \"high\",\r\n      typical_variance: 0.03,\r\n      heat_soak_factor: 0.96\r\n    }\r\n  },\r\n  \r\n  training_data: {\r\n    mazdaspeed3_2007: {\r\n      manufacturer: \"Mazda\",\r\n      model: \"Mazdaspeed3\", \r\n      engine: \"2.3L Turbo I4\",\r\n      weight: 3200,\r\n      power_curve: [\r\n        {rpm: 2500, hp: 145, torque: 306},\r\n        {rpm: 3000, hp: 180, torque: 315},\r\n        {rpm: 3500, hp: 210, torque: 315},\r\n        {rpm: 4000, hp: 225, torque: 295},\r\n        {rpm: 4500, hp: 235, torque: 275},\r\n        {rpm: 5000, hp: 238, torque: 250},\r\n        {rpm: 5500, hp: 238, torque: 227},\r\n        {rpm: 6000, hp: 232, torque: 203},\r\n        {rpm: 6500, hp: 220, torque: 178}\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n// Physics Engine Class\r\nclass DynoPhysicsEngine {\r\n  constructor(dynoType = 'mustang_md250') {\r\n    this.dynoType = DYNO_DATA.dyno_types[dynoType];\r\n    this.runNumber = 1;\r\n    this.conditions = {\r\n      temperature_f: 75,\r\n      humidity: 0.45,\r\n      barometric_pressure: 29.92,\r\n      altitude: 500\r\n    };\r\n  }\r\n\r\n  // Calculate environmental correction factor\r\n  calculateEnvironmentalCorrection() {\r\n    const { temperature_f, humidity, barometric_pressure, altitude } = this.conditions;\r\n    \r\n    // SAE J1349 correction formula (simplified)\r\n    const tempCorrection = Math.sqrt(537.67 / (temperature_f + 459.67));\r\n    const pressureCorrection = barometric_pressure / 29.23;\r\n    const humidityCorrection = 1 - (0.047 * humidity);\r\n    const altitudeCorrection = 1 - (altitude * 0.000035); // 3.5% per 1000ft\r\n    \r\n    return tempCorrection * pressureCorrection * humidityCorrection * altitudeCorrection;\r\n  }\r\n\r\n  // Add realistic dyno noise/variance\r\n  addDynoVariance(value) {\r\n    const variance = this.dynoType.typical_variance;\r\n    const randomFactor = 1 + (Math.random() - 0.5) * 2 * variance;\r\n    return value * randomFactor;\r\n  }\r\n\r\n  // Apply heat soak effect\r\n  getHeatSoakFactor() {\r\n    const baseFactor = this.dynoType.heat_soak_factor;\r\n    return Math.pow(baseFactor, this.runNumber - 1);\r\n  }\r\n\r\n  // Main simulation function\r\n  simulateRun(targetCurve) {\r\n    const envCorrection = this.calculateEnvironmentalCorrection();\r\n    const heatSoak = this.getHeatSoakFactor();\r\n    const dynoCorrection = this.dynoType.correction_factor;\r\n    \r\n    return targetCurve.map(point => ({\r\n      rpm: point.rpm,\r\n      hp: this.addDynoVariance(point.hp * envCorrection * heatSoak * dynoCorrection),\r\n      torque: this.addDynoVariance(point.torque * envCorrection * heatSoak),\r\n      timestamp: Date.now() + (point.rpm - targetCurve[0].rpm) * 50 // 50ms per RPM increment\r\n    }));\r\n  }\r\n\r\n  // Update conditions\r\n  setConditions(newConditions) {\r\n    this.conditions = { ...this.conditions, ...newConditions };\r\n  }\r\n\r\n  // Increment run number for heat soak\r\n  nextRun() {\r\n    this.runNumber++;\r\n  }\r\n\r\n  // Reset for new session\r\n  reset() {\r\n    this.runNumber = 1;\r\n  }\r\n}\r\n\r\n// React Component for Testing the Physics Engine\r\nconst DynoPhysicsDemo = () => {\r\n  const [engine] = useState(() => new DynoPhysicsEngine('mustang_md250'));\r\n  const [simulatedData, setSimulatedData] = useState([]);\r\n  const [conditions, setConditions] = useState({\r\n    temperature_f: 75,\r\n    humidity: 0.45,\r\n    barometric_pressure: 29.92,\r\n    altitude: 500\r\n  });\r\n  const [dynoType, setDynoType] = useState('mustang_md250');\r\n  const [runNumber, setRunNumber] = useState(1);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  // Simulate a dyno run\r\n  const runSimulation = () => {\r\n    setIsRunning(true);\r\n    engine.setConditions(conditions);\r\n    \r\n    // Get the target curve (Mazdaspeed3 in this example)\r\n    const targetCurve = DYNO_DATA.training_data.mazdaspeed3_2007.power_curve;\r\n    \r\n    // Simulate the run\r\n    const results = engine.simulateRun(targetCurve);\r\n    \r\n    // Animate the results coming in (like a real dyno)\r\n    let currentIndex = 0;\r\n    const animateResults = () => {\r\n      if (currentIndex < results.length) {\r\n        setSimulatedData(prev => [...prev, results[currentIndex]]);\r\n        currentIndex++;\r\n        setTimeout(animateResults, 200); // 200ms delay between points\r\n      } else {\r\n        setIsRunning(false);\r\n        engine.nextRun();\r\n        setRunNumber(engine.runNumber);\r\n      }\r\n    };\r\n    \r\n    // Clear previous data and start animation\r\n    setSimulatedData([]);\r\n    setTimeout(animateResults, 500);\r\n  };\r\n\r\n  const resetSession = () => {\r\n    engine.reset();\r\n    setRunNumber(1);\r\n    setSimulatedData([]);\r\n  };\r\n\r\n  // Calculate peak values\r\n  const peaks = simulatedData.length > 0 ? {\r\n    maxHp: Math.max(...simulatedData.map(d => d.hp)),\r\n    maxTorque: Math.max(...simulatedData.map(d => d.torque)),\r\n    maxHpRpm: simulatedData.find(d => d.hp === Math.max(...simulatedData.map(p => p.hp)))?.rpm,\r\n    maxTqRpm: simulatedData.find(d => d.torque === Math.max(...simulatedData.map(p => p.torque)))?.rpm\r\n  } : null;\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\r\n      <h1>🏁 Virtual Dyno Physics Engine Demo</h1>\r\n      \r\n      {/* Control Panel */}\r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', \r\n        gap: '20px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        \r\n        {/* Environmental Controls */}\r\n        <div style={{ \r\n          border: '1px solid #ddd', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          backgroundColor: '#f9f9f9'\r\n        }}>\r\n          <h3>🌡️ Environmental Conditions</h3>\r\n          \r\n          <label>Temperature (°F): {conditions.temperature_f}</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"50\" \r\n            max=\"110\" \r\n            value={conditions.temperature_f}\r\n            onChange={(e) => setConditions(prev => ({\r\n              ...prev, \r\n              temperature_f: parseInt(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 15px 0' }}\r\n          />\r\n          \r\n          <label>Humidity: {(conditions.humidity * 100).toFixed(0)}%</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"0\" \r\n            max=\"1\" \r\n            step=\"0.01\"\r\n            value={conditions.humidity}\r\n            onChange={(e) => setConditions(prev => ({\r\n              ...prev, \r\n              humidity: parseFloat(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 15px 0' }}\r\n          />\r\n          \r\n          <label>Altitude (ft): {conditions.altitude}</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"0\" \r\n            max=\"5000\" \r\n            step=\"100\"\r\n            value={conditions.altitude}\r\n            onChange={(e) => setConditions(prev => ({\r\n              ...prev, \r\n              altitude: parseInt(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 15px 0' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Dyno Settings */}\r\n        <div style={{ \r\n          border: '1px solid #ddd', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          backgroundColor: '#f9f9f9'\r\n        }}>\r\n          <h3>🔧 Dyno Settings</h3>\r\n          \r\n          <label>Dyno Type:</label>\r\n          <select \r\n            value={dynoType}\r\n            onChange={(e) => {\r\n              setDynoType(e.target.value);\r\n              engine.dynoType = DYNO_DATA.dyno_types[e.target.value];\r\n            }}\r\n            style={{ width: '100%', margin: '5px 0 15px 0', padding: '5px' }}\r\n          >\r\n            <option value=\"mustang_md250\">Mustang MD250 (Load Bearing)</option>\r\n            <option value=\"dynojet_248c\">DynoJet 248C (Inertial)</option>\r\n          </select>\r\n          \r\n          <p><strong>Run Number:</strong> {runNumber}</p>\r\n          <p><strong>Heat Soak Factor:</strong> {(engine.getHeatSoakFactor() * 100).toFixed(1)}%</p>\r\n          \r\n          <button \r\n            onClick={runSimulation}\r\n            disabled={isRunning}\r\n            style={{\r\n              width: '100%',\r\n              padding: '10px',\r\n              backgroundColor: isRunning ? '#ccc' : '#007bff',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              fontSize: '16px',\r\n              marginBottom: '10px',\r\n              cursor: isRunning ? 'not-allowed' : 'pointer'\r\n            }}\r\n          >\r\n            {isRunning ? '🏃 Running Dyno Pull...' : '🚀 Start Dyno Run'}\r\n          </button>\r\n          \r\n          <button \r\n            onClick={resetSession}\r\n            style={{\r\n              width: '100%',\r\n              padding: '8px',\r\n              backgroundColor: '#6c757d',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            🔄 Reset Session\r\n          </button>\r\n        </div>\r\n\r\n        {/* Results */}\r\n        {peaks && (\r\n          <div style={{ \r\n            border: '1px solid #ddd', \r\n            padding: '15px', \r\n            borderRadius: '8px',\r\n            backgroundColor: '#e8f5e8'\r\n          }}>\r\n            <h3>📊 Peak Results</h3>\r\n            <p><strong>Max HP:</strong> {peaks.maxHp.toFixed(1)} @ {peaks.maxHpRpm} RPM</p>\r\n            <p><strong>Max Torque:</strong> {peaks.maxTorque.toFixed(1)} @ {peaks.maxTqRpm} RPM</p>\r\n            <p><strong>Correction Factor:</strong> {engine.dynoType.correction_factor}x</p>\r\n            <p><strong>Environmental Loss:</strong> {((1 - engine.calculateEnvironmentalCorrection()) * 100).toFixed(1)}%</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Simple Graph Display */}\r\n      {simulatedData.length > 0 && (\r\n        <div style={{ \r\n          border: '1px solid #ddd', \r\n          padding: '20px', \r\n          borderRadius: '8px',\r\n          backgroundColor: 'white'\r\n        }}>\r\n          <h3>📈 Dyno Graph</h3>\r\n          <div style={{ \r\n            display: 'grid', \r\n            gridTemplateColumns: 'repeat(auto-fit, minmax(150px, 1fr))', \r\n            gap: '10px',\r\n            fontSize: '12px'\r\n          }}>\r\n            {simulatedData.map((point, index) => (\r\n              <div key={index} style={{ \r\n                textAlign: 'center', \r\n                padding: '5px',\r\n                backgroundColor: index === simulatedData.length - 1 ? '#ffeb3b' : '#f5f5f5',\r\n                borderRadius: '3px'\r\n              }}>\r\n                <div><strong>{point.rpm} RPM</strong></div>\r\n                <div>{point.hp.toFixed(1)} HP</div>\r\n                <div>{point.torque.toFixed(1)} lb-ft</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div style={{ \r\n        marginTop: '20px', \r\n        padding: '15px', \r\n        backgroundColor: '#e3f2fd', \r\n        borderRadius: '8px'\r\n      }}>\r\n        <h4>🎮 How to Use:</h4>\r\n        <ol>\r\n          <li><strong>Adjust environmental conditions</strong> - See how temperature/humidity affects power</li>\r\n          <li><strong>Choose dyno type</strong> - Mustang reads lower, DynoJet reads ~15% higher</li>\r\n          <li><strong>Run multiple pulls</strong> - Watch heat soak reduce power on consecutive runs</li>\r\n          <li><strong>Compare results</strong> - See realistic variance between runs</li>\r\n        </ol>\r\n        <p><em>This simulates a 2007 Mazdaspeed3 on different dyno types with real physics!</em></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynoPhysicsDemo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}