{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\VirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualDyno = () => {\n  _s();\n  var _dynoResults$peaks, _dynoResults$peaks2, _dynoResults$peaks3, _dynoResults$peaks4;\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [liveGraphData, setLiveGraphData] = useState([]);\n  const [currentPeaks, setCurrentPeaks] = useState({\n    maxHP: 0,\n    maxTorque: 0,\n    maxBoost: 0,\n    currentHP: 0,\n    currentTorque: 0,\n    currentBoost: 0\n  });\n\n  // Dyno Settings State\n  const [dynoSettings, setDynoSettings] = useState({\n    selectedCar: 'mazdaspeed3',\n    gear: 4,\n    dynoType: 'mustang_md250',\n    weight: 3200,\n    temperature: 75,\n    humidity: 45\n  });\n\n  // Post-run smoothing control\n  const [smoothingLevel, setSmoothingLevel] = useState(0);\n  const [smoothedData, setSmoothedData] = useState([]);\n  const [smoothedPeaks, setSmoothedPeaks] = useState(null);\n  const fileInputRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Car options\n  const carOptions = [{\n    value: 'mazdaspeed3',\n    label: 'Mazdaspeed3'\n  }, {\n    value: 'wrx',\n    label: 'Subaru WRX'\n  }, {\n    value: 'sti',\n    label: 'Subaru STI'\n  }, {\n    value: 'evo',\n    label: 'Mitsubishi Evo'\n  }, {\n    value: 'gti',\n    label: 'VW Golf GTI'\n  }, {\n    value: 'focus_st',\n    label: 'Ford Focus ST'\n  }];\n\n  // Dyno types\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250\",\n      correction: 1.0,\n      variance: 0.02\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C\",\n      correction: 1.15,\n      variance: 0.03\n    },\n    awd_dyno: {\n      name: \"AWD Dyno\",\n      correction: 0.95,\n      variance: 0.04\n    }\n  };\n\n  // Smoothing options\n  const smoothingOptions = [{\n    value: 0,\n    label: 'Raw Data (0)'\n  }, {\n    value: 1,\n    label: 'Light (1)'\n  }, {\n    value: 2,\n    label: 'Moderate (2)'\n  }, {\n    value: 3,\n    label: 'Smooth (3)'\n  }, {\n    value: 4,\n    label: 'Heavy (4)'\n  }, {\n    value: 5,\n    label: 'Maximum (5)'\n  }];\n\n  // Draw graph on canvas with improved sizing\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const dataToDisplay = smoothedData.length > 0 ? smoothedData : liveGraphData;\n    if (dataToDisplay.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Get the actual display size\n    const rect = canvas.getBoundingClientRect();\n    const displayWidth = rect.width;\n    const displayHeight = rect.height;\n\n    // Set the internal size to match the display size for crisp rendering\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = displayWidth * devicePixelRatio;\n    canvas.height = displayHeight * devicePixelRatio;\n\n    // Scale the drawing context so everything draws at the correct size\n    ctx.scale(devicePixelRatio, devicePixelRatio);\n\n    // Use display size for calculations\n    const width = displayWidth;\n    const height = displayHeight;\n\n    // Clear canvas\n    ctx.fillStyle = '#1a1a1a';\n    ctx.fillRect(0, 0, width, height);\n\n    // Setup graph dimensions with much better proportions\n    const leftPadding = 70; // Fixed larger left padding for Y-axis label\n    const rightPadding = 40; // Smaller right padding\n    const topPadding = 40; // Smaller top padding\n    const bottomPadding = 60; // Fixed bottom padding for X-axis label\n    const graphWidth = width - leftPadding - rightPadding;\n    const graphHeight = height - topPadding - bottomPadding;\n\n    // Find data ranges\n    const maxRpm = Math.max(...dataToDisplay.map(d => d.rpm), 7000);\n    const minRpm = Math.min(...dataToDisplay.map(d => d.rpm), 2000);\n    const maxHP = Math.max(...dataToDisplay.map(d => d.horsepower), 100);\n    const maxTorque = Math.max(...dataToDisplay.map(d => d.torque), 100);\n    const maxPower = Math.max(maxHP, maxTorque);\n\n    // Draw grid\n    ctx.strokeStyle = '#333';\n    ctx.lineWidth = 1;\n\n    // Vertical grid lines (RPM)\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\n      const x = leftPadding + (rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      ctx.beginPath();\n      ctx.moveTo(x, topPadding);\n      ctx.lineTo(x, height - bottomPadding);\n      ctx.stroke();\n\n      // RPM labels\n      ctx.fillStyle = '#666';\n      ctx.font = `${Math.max(12, width * 0.016)}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.fillText(rpm.toString(), x, height - bottomPadding + 20);\n    }\n\n    // Horizontal grid lines (Power)\n    for (let power = 0; power <= maxPower; power += 50) {\n      const y = height - bottomPadding - power / maxPower * graphHeight;\n      ctx.beginPath();\n      ctx.moveTo(leftPadding, y);\n      ctx.lineTo(width - rightPadding, y);\n      ctx.stroke();\n\n      // Power labels\n      ctx.fillStyle = '#666';\n      ctx.font = `${Math.max(12, width * 0.016)}px Arial`;\n      ctx.textAlign = 'right';\n      ctx.fillText(power.toString(), leftPadding - 10, y + 5);\n    }\n\n    // Draw axes\n    ctx.strokeStyle = '#666';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(leftPadding, topPadding);\n    ctx.lineTo(leftPadding, height - bottomPadding);\n    ctx.lineTo(width - rightPadding, height - bottomPadding);\n    ctx.stroke();\n\n    // Draw HP line (red)\n    if (dataToDisplay.length > 1) {\n      ctx.strokeStyle = '#ff4444';\n      ctx.lineWidth = Math.max(3, width * 0.004);\n      ctx.beginPath();\n      dataToDisplay.forEach((point, index) => {\n        const x = leftPadding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - bottomPadding - point.horsepower / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw Torque line (green)\n    if (dataToDisplay.length > 1) {\n      ctx.strokeStyle = '#44ff44';\n      ctx.lineWidth = Math.max(3, width * 0.004);\n      ctx.beginPath();\n      dataToDisplay.forEach((point, index) => {\n        const x = leftPadding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - bottomPadding - point.torque / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw current point indicator (only during live run)\n    if (isRunning && liveGraphData.length > 0) {\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\n      const x = leftPadding + (currentPoint.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      const yHP = height - bottomPadding - currentPoint.horsepower / maxPower * graphHeight;\n      const yTQ = height - bottomPadding - currentPoint.torque / maxPower * graphHeight;\n      const indicatorSize = Math.max(4, width * 0.008);\n\n      // HP indicator\n      ctx.fillStyle = '#ff4444';\n      ctx.beginPath();\n      ctx.arc(x, yHP, indicatorSize, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Torque indicator\n      ctx.fillStyle = '#44ff44';\n      ctx.beginPath();\n      ctx.arc(x, yTQ, indicatorSize, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    // Draw legend with responsive sizing\n    const legendFontSize = Math.max(6, width * 0.010);\n    ctx.fillStyle = '#ff4444';\n    ctx.font = `bold ${legendFontSize}px Arial`;\n    ctx.textAlign = 'left';\n    ctx.fillText('■ Horsepower', width - 160, 25);\n    ctx.fillStyle = '#44ff44';\n    ctx.fillText('■ Torque', width - 160, 25 + legendFontSize + 6);\n\n    // Axis labels with responsive sizing and better positioning\n    const axisLabelSize = Math.max(12, width * 0.012);\n    ctx.fillStyle = '#ccc';\n    ctx.font = `bold ${axisLabelSize}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.fillText('RPM', width / 2, height - 15);\n\n    // Y-axis label with proper positioning\n    ctx.save();\n    ctx.translate(40, topPadding + 60);\n    //ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = 'center';\n    ctx.fillText('HP / TQ', 0, 0);\n    ctx.restore();\n  }, [liveGraphData, smoothedData, isRunning]);\n\n  // Handle smoothing change\n  const handleSmoothingChange = async newLevel => {\n    if (!dynoResults || !dynoResults.processedData) return;\n    setSmoothingLevel(newLevel);\n    let dataToProcess;\n    if (newLevel === 0) {\n      // Raw data\n      dataToProcess = dynoResults.processedData.map(d => ({\n        rpm: d.rpm,\n        horsepower: Math.round(d.hp),\n        torque: Math.round(d.torque),\n        boost: Math.round(d.boost * 10) / 10\n      }));\n      setSmoothedData(dataToProcess);\n    } else {\n      // Apply smoothing via backend\n      try {\n        const response = await fetch(`http://localhost:5038/api/dyno/runs/${dynoResults.backendResults.id}/smooth/${newLevel}`);\n        if (response.ok) {\n          const smoothed = await response.json();\n          dataToProcess = smoothed.map(d => ({\n            rpm: d.rpm,\n            horsepower: Math.round(d.horsepower),\n            torque: Math.round(d.torque),\n            boost: Math.round(d.boost * 10) / 10\n          }));\n          setSmoothedData(dataToProcess);\n        }\n      } catch (error) {\n        console.error('Error applying smoothing:', error);\n        return;\n      }\n    }\n\n    // Calculate new peaks from smoothed data\n    if (dataToProcess && dataToProcess.length > 0) {\n      const maxHP = Math.max(...dataToProcess.map(d => d.horsepower));\n      const maxTorque = Math.max(...dataToProcess.map(d => d.torque));\n      const maxBoost = Math.max(...dataToProcess.map(d => d.boost));\n      const maxHPPoint = dataToProcess.find(d => d.horsepower === maxHP);\n      const maxTorquePoint = dataToProcess.find(d => d.torque === maxTorque);\n      setSmoothedPeaks({\n        maxHP,\n        maxTorque,\n        maxBoost,\n        maxHPRpm: (maxHPPoint === null || maxHPPoint === void 0 ? void 0 : maxHPPoint.rpm) || 0,\n        maxTorqueRpm: (maxTorquePoint === null || maxTorquePoint === void 0 ? void 0 : maxTorquePoint.rpm) || 0\n      });\n    }\n  };\n\n  // Parse uploaded CSV file\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setCsvFile(file);\n    setDynoResults(null);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csv = e.target.result;\n      const lines = csv.split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n        const values = line.split(',');\n        const row = {};\n        headers.forEach((header, index) => {\n          var _values$index;\n          row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n        });\n        return row;\n      }).filter(row => {\n        const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\n        const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\n        const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\n        return rpm > 2000 && maf > 5 && load > 0.15;\n      });\n      setCsvData(data);\n      console.log(`Loaded ${data.length} valid data points from CSV`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Send to C# backend\n  const sendToBackend = async () => {\n    if (!csvFile) return null;\n    try {\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', dynoSettings.selectedCar);\n      formData.append('Weight', dynoSettings.weight.toString());\n      formData.append('Gear', dynoSettings.gear.toString());\n      formData.append('Notes', `${dynoSettings.dynoType}, ${dynoSettings.temperature}°F`);\n      formData.append('IsPublic', 'false');\n      console.log('Sending CSV to C# backend...');\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const backendResults = await response.json();\n        console.log('✅ C# Backend Results:', backendResults);\n        return backendResults;\n      } else {\n        console.error('Backend API error:', response.status, response.statusText);\n        return null;\n      }\n    } catch (error) {\n      console.error('Failed to connect to C# backend:', error);\n      return null;\n    }\n  };\n\n  // Run virtual dyno\n  const runVirtualDyno = async () => {\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n    try {\n      var _processedData$find, _processedData$find2, _backendResults$peaks, _backendResults$peaks2, _backendResults$peaks3, _backendResults$peaks4;\n      // Get backend results\n      const backendResults = await sendToBackend();\n      if (!backendResults) {\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\n        setIsRunning(false);\n        return;\n      }\n\n      // Get detailed data points\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\n      if (!detailResponse.ok) {\n        console.error('Failed to get detailed run data:', detailResponse.status);\n        setIsRunning(false);\n        return;\n      }\n      const detailData = await detailResponse.json();\n\n      // Process data with virtual dyno characteristics\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\n        const dyno = dynoTypes[dynoSettings.dynoType];\n\n        // Environmental effects\n        const tempCorrection = Math.sqrt(537.67 / (dynoSettings.temperature + 459.67));\n        const humidityCorrection = 1 - dynoSettings.humidity / 100 * 0.047;\n        const envCorrection = tempCorrection * humidityCorrection;\n\n        // Dyno type correction and variance\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n        return {\n          rpm: point.rpm || point.Rpm || 0,\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\n          boost: point.boost || point.Boost || 0,\n          maf: point.massAirflow || point.MassAirflow || 0,\n          load: point.load || point.Load || 0,\n          backendHP: point.horsepower || point.Horsepower || 0,\n          backendTorque: point.torque || point.Torque || 0\n        };\n      });\n\n      // Sort by RPM for proper graph progression\n      processedData.sort((a, b) => a.rpm - b.rpm);\n\n      // Animate the dyno run with live graph updates\n      for (let i = 0; i < processedData.length; i++) {\n        const currentPoint = processedData[i];\n\n        // Update live graph data (add current point)\n        setLiveGraphData(prev => {\n          const newData = [...prev, {\n            rpm: currentPoint.rpm,\n            horsepower: Math.round(currentPoint.hp),\n            torque: Math.round(currentPoint.torque),\n            boost: Math.round(currentPoint.boost * 10) / 10\n          }];\n          return newData.sort((a, b) => a.rpm - b.rpm);\n        });\n\n        // Update current peaks and live readings\n        setCurrentPeaks(prev => {\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\n          return {\n            maxHP: Math.round(maxHP),\n            maxTorque: Math.round(maxTorque),\n            maxBoost: Math.round(maxBoost * 10) / 10,\n            currentHP: Math.round(currentPoint.hp),\n            currentTorque: Math.round(currentPoint.torque),\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\n          };\n        });\n        setCurrentDataPoint(i);\n\n        // Vary the delay based on RPM\n        const delay = currentPoint.rpm < 3000 ? 200 : currentPoint.rpm < 4000 ? 150 : currentPoint.rpm < 5000 ? 120 : 100;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      // Calculate final peaks\n      const peaks = {\n        maxHP: processedData.length > 0 ? Math.round(Math.max(...processedData.map(d => d.hp || 0))) : 0,\n        maxTorque: processedData.length > 0 ? Math.round(Math.max(...processedData.map(d => d.torque || 0))) : 0,\n        maxHPRpm: ((_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm) || 0,\n        maxTorqueRpm: ((_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm) || 0,\n        backendMaxHP: Math.round(((_backendResults$peaks = backendResults.peaks) === null || _backendResults$peaks === void 0 ? void 0 : _backendResults$peaks.maxHorsepower) || 0),\n        backendMaxTorque: Math.round(((_backendResults$peaks2 = backendResults.peaks) === null || _backendResults$peaks2 === void 0 ? void 0 : _backendResults$peaks2.maxTorque) || 0),\n        backendMaxHPRpm: ((_backendResults$peaks3 = backendResults.peaks) === null || _backendResults$peaks3 === void 0 ? void 0 : _backendResults$peaks3.maxHorsepowerRpm) || 0,\n        backendMaxTorqueRpm: ((_backendResults$peaks4 = backendResults.peaks) === null || _backendResults$peaks4 === void 0 ? void 0 : _backendResults$peaks4.maxTorqueRpm) || 0\n      };\n      setDynoResults({\n        processedData,\n        peaks,\n        settings: dynoSettings,\n        fileName: csvFile.name,\n        backendResults\n      });\n\n      // Set initial smoothing level to 0 (raw data)\n      setSmoothingLevel(0);\n      handleSmoothingChange(0);\n    } catch (error) {\n      console.error('Error running virtual dyno:', error);\n      alert('Error connecting to backend API. Make sure your C# API is running.');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Reset dyno\n  const resetDyno = () => {\n    setDynoResults(null);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    setSmoothedPeaks(null);\n    setSmoothingLevel(0);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n  };\n  const inputStyle = {\n    width: '100%',\n    padding: '8px 12px',\n    border: '1px solid #4a5568',\n    borderRadius: '4px',\n    fontSize: '14px',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0'\n  };\n  const labelStyle = {\n    display: 'block',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: '#e2e8f0',\n    marginBottom: '6px'\n  };\n  const sectionStyle = {\n    marginBottom: '20px',\n    padding: '15px',\n    backgroundColor: '#2d3748',\n    borderRadius: '6px',\n    border: '1px solid #4a5568'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      backgroundColor: '#0f1419',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#1a2332',\n        color: 'white',\n        padding: '16px 0',\n        textAlign: 'center',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.3)',\n        borderBottom: '1px solid #2d3748'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          fontSize: '24px',\n          fontWeight: '700',\n          letterSpacing: '-0.5px',\n          background: 'linear-gradient(135deg, #ff4444, #44ff44, #4488ff)',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent',\n          backgroundClip: 'text'\n        },\n        children: \"\\uD83C\\uDFC1 Virtual Dyno Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '6px 0 0 0',\n          fontSize: '14px',\n          opacity: 0.8,\n          fontWeight: '400',\n          color: '#a0aec0'\n        },\n        children: \"Professional Dyno Analysis & Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '360px 1fr',\n        height: 'calc(100vh - 100px)',\n        // Increased available height\n        gap: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1a202c',\n          borderRight: '1px solid #2d3748',\n          padding: '20px',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              marginBottom: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                flex: 1\n              },\n              children: \"\\uD83D\\uDCC1 Upload Datalog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              style: {\n                padding: '8px 16px',\n                backgroundColor: csvFile ? '#38a169' : '#3182ce',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500',\n                transition: 'all 0.2s ease'\n              },\n              onMouseOver: e => e.target.style.backgroundColor = csvFile ? '#2f855a' : '#2c5282',\n              onMouseOut: e => e.target.style.backgroundColor = csvFile ? '#38a169' : '#3182ce',\n              children: csvFile ? '✅ Change' : '📂 Select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: handleFileUpload,\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#a0aec0',\n              backgroundColor: '#2d3748',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #4a5568',\n              wordBreak: 'break-all'\n            },\n            children: [\"\\uD83D\\uDCC4 \", csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 14px 0',\n              fontSize: '15px',\n              color: '#68d391'\n            },\n            children: \"\\uD83D\\uDE97 Vehicle Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                minWidth: '70px',\n                fontSize: '13px'\n              },\n              children: \"Car:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dynoSettings.selectedCar,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                selectedCar: e.target.value\n              })),\n              style: {\n                ...inputStyle,\n                flex: 1,\n                fontSize: '13px'\n              },\n              children: carOptions.map(car => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: car.value,\n                children: car.label\n              }, car.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: \"Gear Used:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '6px'\n              },\n              children: [3, 4, 5].map(gear => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setDynoSettings(prev => ({\n                  ...prev,\n                  gear\n                })),\n                style: {\n                  flex: 1,\n                  padding: '8px',\n                  border: dynoSettings.gear === gear ? '2px solid #3182ce' : '1px solid #4a5568',\n                  borderRadius: '4px',\n                  backgroundColor: dynoSettings.gear === gear ? '#2c5282' : '#2d3748',\n                  color: dynoSettings.gear === gear ? 'white' : '#a0aec0',\n                  cursor: 'pointer',\n                  fontSize: '13px',\n                  fontWeight: dynoSettings.gear === gear ? '600' : '400',\n                  transition: 'all 0.2s ease'\n                },\n                children: [gear, \"rd\"]\n              }, gear, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: \"Vehicle Weight (lbs):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: dynoSettings.weight,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                weight: parseInt(e.target.value) || 0\n              })),\n              style: {\n                ...inputStyle,\n                fontSize: '13px'\n              },\n              min: \"1000\",\n              max: \"10000\",\n              step: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 14px 0',\n              fontSize: '15px',\n              color: '#68d391'\n            },\n            children: \"\\u2699\\uFE0F Dyno Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                minWidth: '70px',\n                fontSize: '13px'\n              },\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dynoSettings.dynoType,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                dynoType: e.target.value\n              })),\n              style: {\n                ...inputStyle,\n                flex: 1,\n                fontSize: '13px'\n              },\n              children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: dyno.name\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 14px 0',\n              fontSize: '15px',\n              color: '#68d391'\n            },\n            children: \"\\uD83C\\uDF21\\uFE0F Environmental\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: [\"Temperature: \", dynoSettings.temperature, \"\\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"50\",\n              max: \"110\",\n              value: dynoSettings.temperature,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                temperature: parseInt(e.target.value)\n              })),\n              style: {\n                width: '100%',\n                margin: '4px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                fontSize: '11px',\n                color: '#718096'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"50\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"110\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: [\"Humidity: \", dynoSettings.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"10\",\n              max: \"90\",\n              value: dynoSettings.humidity,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                humidity: parseInt(e.target.value)\n              })),\n              style: {\n                width: '100%',\n                margin: '4px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                fontSize: '11px',\n                color: '#718096'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"10%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"90%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 765,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 755,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runVirtualDyno,\n          disabled: !csvData.length || isRunning,\n          style: {\n            width: '100%',\n            padding: '14px',\n            backgroundColor: isRunning ? '#4a5568' : '#e53e3e',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            fontSize: '15px',\n            fontWeight: '700',\n            cursor: isRunning ? 'not-allowed' : 'pointer',\n            transition: 'all 0.2s ease',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\n          },\n          children: isRunning ? '🏃 PROCESSING...' : '🚀 START VIRTUAL DYNO'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1a202c',\n          padding: '20px',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative'\n        },\n        children: isRunning || dynoResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '24px',\n              right: '24px',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              backgroundColor: '#2d3748',\n              padding: '6px 10px',\n              borderRadius: '6px',\n              border: '1px solid #4a5568',\n              zIndex: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: '11px',\n                color: '#a0aec0',\n                fontWeight: '500'\n              },\n              children: \"Smoothing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: smoothingLevel,\n              onChange: e => handleSmoothingChange(parseInt(e.target.value)),\n              style: {\n                padding: '3px 6px',\n                border: '1px solid #4a5568',\n                borderRadius: '4px',\n                fontSize: '11px',\n                backgroundColor: '#1a202c',\n                color: '#e2e8f0'\n              },\n              children: smoothingOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#1a1a1a',\n              color: 'white',\n              padding: '16px',\n              borderRadius: '8px',\n              marginBottom: '16px',\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr 1fr',\n              gap: '16px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  fontWeight: 'bold',\n                  color: '#ff4444'\n                },\n                children: isRunning ? currentPeaks.currentHP : smoothedPeaks ? smoothedPeaks.maxHP : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks = dynoResults.peaks) === null || _dynoResults$peaks === void 0 ? void 0 : _dynoResults$peaks.maxHP) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#ccc',\n                  marginBottom: '3px'\n                },\n                children: [isRunning ? 'CURRENT' : 'PEAK', \" HP\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 860,\n                columnNumber: 19\n              }, this), !isRunning && (dynoResults || smoothedPeaks) && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '9px',\n                  color: '#888'\n                },\n                children: [\"@ \", smoothedPeaks ? smoothedPeaks.maxHPRpm : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks2 = dynoResults.peaks) === null || _dynoResults$peaks2 === void 0 ? void 0 : _dynoResults$peaks2.maxHPRpm) || 0, \" RPM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  fontWeight: 'bold',\n                  color: '#44ff44'\n                },\n                children: isRunning ? currentPeaks.currentTorque : smoothedPeaks ? smoothedPeaks.maxTorque : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks3 = dynoResults.peaks) === null || _dynoResults$peaks3 === void 0 ? void 0 : _dynoResults$peaks3.maxTorque) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#ccc',\n                  marginBottom: '3px'\n                },\n                children: [isRunning ? 'CURRENT' : 'PEAK', \" LB-FT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 19\n              }, this), !isRunning && (dynoResults || smoothedPeaks) && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '9px',\n                  color: '#888'\n                },\n                children: [\"@ \", smoothedPeaks ? smoothedPeaks.maxTorqueRpm : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks4 = dynoResults.peaks) === null || _dynoResults$peaks4 === void 0 ? void 0 : _dynoResults$peaks4.maxTorqueRpm) || 0, \" RPM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 878,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  fontWeight: 'bold',\n                  color: '#4488ff'\n                },\n                children: isRunning ? currentPeaks.maxBoost : smoothedPeaks ? smoothedPeaks.maxBoost : Math.max(...(liveGraphData.map(d => d.boost) || [0])) || (smoothedData.length > 0 ? Math.max(...smoothedData.map(d => d.boost)) : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#ccc',\n                  marginBottom: '3px'\n                },\n                children: \"PEAK BOOST PSI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '9px',\n                  color: '#888'\n                },\n                children: isRunning ? 'LIVE' : 'RECORDED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              position: 'relative',\n              height: 'calc(100vh - 280px)',\n              // Much larger height\n              minHeight: '400px',\n              // Increased minimum\n              maxHeight: '600px' // Increased maximum\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: '100%',\n                height: '100%',\n                border: '1px solid #4a5568',\n                borderRadius: '6px',\n                backgroundColor: '#1a1a1a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                // TODO: Implement save functionality\n                alert('Save functionality will be implemented soon!');\n              },\n              style: {\n                position: 'absolute',\n                bottom: '16px',\n                right: '16px',\n                padding: '8px 14px',\n                backgroundColor: '#38a169',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                fontSize: '13px',\n                fontWeight: '600',\n                transition: 'all 0.2s ease',\n                boxShadow: '0 2px 8px rgba(56, 161, 105, 0.3)',\n                zIndex: 10\n              },\n              onMouseOver: e => e.target.style.backgroundColor = '#2f855a',\n              onMouseOut: e => e.target.style.backgroundColor = '#38a169',\n              children: \"\\uD83D\\uDCBE Save Dyno\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#2d3748',\n            borderRadius: '8px',\n            border: '2px dashed #4a5568',\n            minHeight: '400px' // Increased to match new canvas size\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              color: '#a0aec0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '48px',\n                marginBottom: '16px'\n              },\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: '0 0 8px 0',\n                fontSize: '18px',\n                color: '#68d391'\n              },\n              children: \"Ready for Dyno Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0,\n                fontSize: '14px'\n              },\n              children: \"Upload a datalog file and configure your settings to begin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 964,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualDyno, \"EHPwrjhdo4KInjOOrxhqs9j2qfM=\");\n_c = VirtualDyno;\nexport default VirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"VirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","VirtualDyno","_s","_dynoResults$peaks","_dynoResults$peaks2","_dynoResults$peaks3","_dynoResults$peaks4","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","liveGraphData","setLiveGraphData","currentPeaks","setCurrentPeaks","maxHP","maxTorque","maxBoost","currentHP","currentTorque","currentBoost","dynoSettings","setDynoSettings","selectedCar","gear","dynoType","weight","temperature","humidity","smoothingLevel","setSmoothingLevel","smoothedData","setSmoothedData","smoothedPeaks","setSmoothedPeaks","fileInputRef","canvasRef","carOptions","value","label","dynoTypes","mustang_md250","name","correction","variance","dynojet_248c","awd_dyno","smoothingOptions","current","dataToDisplay","length","canvas","ctx","getContext","rect","getBoundingClientRect","displayWidth","width","displayHeight","height","devicePixelRatio","window","scale","fillStyle","fillRect","leftPadding","rightPadding","topPadding","bottomPadding","graphWidth","graphHeight","maxRpm","Math","max","map","d","rpm","minRpm","min","horsepower","torque","maxPower","strokeStyle","lineWidth","ceil","x","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","toString","power","y","forEach","point","index","currentPoint","yHP","yTQ","indicatorSize","arc","PI","fill","legendFontSize","axisLabelSize","save","translate","restore","handleSmoothingChange","newLevel","processedData","dataToProcess","round","hp","boost","response","fetch","backendResults","id","ok","smoothed","json","error","console","maxHPPoint","find","maxTorquePoint","maxHPRpm","maxTorqueRpm","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csv","result","lines","split","headers","h","trim","data","slice","filter","line","values","row","header","_values$index","parseInt","maf","parseFloat","load","log","readAsText","sendToBackend","formData","FormData","append","method","body","status","statusText","runVirtualDyno","alert","_processedData$find","_processedData$find2","_backendResults$peaks","_backendResults$peaks2","_backendResults$peaks3","_backendResults$peaks4","detailResponse","detailData","dataPoints","dyno","tempCorrection","sqrt","humidityCorrection","envCorrection","random","Rpm","Horsepower","Torque","Boost","massAirflow","MassAirflow","Load","backendHP","backendTorque","sort","a","b","i","prev","newData","delay","Promise","resolve","setTimeout","peaks","p","backendMaxHP","maxHorsepower","backendMaxTorque","backendMaxHPRpm","maxHorsepowerRpm","backendMaxTorqueRpm","settings","fileName","resetDyno","inputStyle","padding","border","borderRadius","fontSize","backgroundColor","color","labelStyle","display","fontWeight","marginBottom","sectionStyle","style","minHeight","fontFamily","children","boxShadow","borderBottom","margin","letterSpacing","background","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","_jsxFileName","lineNumber","columnNumber","opacity","gridTemplateColumns","gap","borderRight","overflowY","alignItems","flex","onClick","_fileInputRef$current","click","cursor","transition","onMouseOver","onMouseOut","type","accept","onChange","ref","wordBreak","minWidth","car","step","Object","entries","key","justifyContent","disabled","flexDirection","position","top","right","zIndex","option","maxHeight","bottom","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/VirtualDyno.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst VirtualDyno = () => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [liveGraphData, setLiveGraphData] = useState([]);\r\n  const [currentPeaks, setCurrentPeaks] = useState({\r\n    maxHP: 0,\r\n    maxTorque: 0,\r\n    maxBoost: 0,\r\n    currentHP: 0,\r\n    currentTorque: 0,\r\n    currentBoost: 0\r\n  });\r\n  \r\n  // Dyno Settings State\r\n  const [dynoSettings, setDynoSettings] = useState({\r\n    selectedCar: 'mazdaspeed3',\r\n    gear: 4,\r\n    dynoType: 'mustang_md250',\r\n    weight: 3200,\r\n    temperature: 75,\r\n    humidity: 45\r\n  });\r\n\r\n  // Post-run smoothing control\r\n  const [smoothingLevel, setSmoothingLevel] = useState(0);\r\n  const [smoothedData, setSmoothedData] = useState([]);\r\n  const [smoothedPeaks, setSmoothedPeaks] = useState(null);\r\n\r\n  const fileInputRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Car options\r\n  const carOptions = [\r\n    { value: 'mazdaspeed3', label: 'Mazdaspeed3' },\r\n    { value: 'wrx', label: 'Subaru WRX' },\r\n    { value: 'sti', label: 'Subaru STI' },\r\n    { value: 'evo', label: 'Mitsubishi Evo' },\r\n    { value: 'gti', label: 'VW Golf GTI' },\r\n    { value: 'focus_st', label: 'Ford Focus ST' }\r\n  ];\r\n\r\n  // Dyno types\r\n  const dynoTypes = {\r\n    mustang_md250: { name: \"Mustang MD250\", correction: 1.0, variance: 0.02 },\r\n    dynojet_248c: { name: \"DynoJet 248C\", correction: 1.15, variance: 0.03 },\r\n    awd_dyno: { name: \"AWD Dyno\", correction: 0.95, variance: 0.04 }\r\n  };\r\n\r\n  // Smoothing options\r\n  const smoothingOptions = [\r\n    { value: 0, label: 'Raw Data (0)' },\r\n    { value: 1, label: 'Light (1)' },\r\n    { value: 2, label: 'Moderate (2)' },\r\n    { value: 3, label: 'Smooth (3)' },\r\n    { value: 4, label: 'Heavy (4)' },\r\n    { value: 5, label: 'Maximum (5)' }\r\n  ];\r\n\r\n  // Draw graph on canvas with improved sizing\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const dataToDisplay = smoothedData.length > 0 ? smoothedData : liveGraphData;\r\n    if (dataToDisplay.length === 0) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Get the actual display size\r\n    const rect = canvas.getBoundingClientRect();\r\n    const displayWidth = rect.width;\r\n    const displayHeight = rect.height;\r\n    \r\n    // Set the internal size to match the display size for crisp rendering\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    canvas.width = displayWidth * devicePixelRatio;\r\n    canvas.height = displayHeight * devicePixelRatio;\r\n    \r\n    // Scale the drawing context so everything draws at the correct size\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n    \r\n    // Use display size for calculations\r\n    const width = displayWidth;\r\n    const height = displayHeight;\r\n\r\n    // Clear canvas\r\n    ctx.fillStyle = '#1a1a1a';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Setup graph dimensions with much better proportions\r\n    const leftPadding = 70; // Fixed larger left padding for Y-axis label\r\n    const rightPadding = 40; // Smaller right padding\r\n    const topPadding = 40; // Smaller top padding\r\n    const bottomPadding = 60; // Fixed bottom padding for X-axis label\r\n    const graphWidth = width - leftPadding - rightPadding;\r\n    const graphHeight = height - topPadding - bottomPadding;\r\n\r\n    // Find data ranges\r\n    const maxRpm = Math.max(...dataToDisplay.map(d => d.rpm), 7000);\r\n    const minRpm = Math.min(...dataToDisplay.map(d => d.rpm), 2000);\r\n    const maxHP = Math.max(...dataToDisplay.map(d => d.horsepower), 100);\r\n    const maxTorque = Math.max(...dataToDisplay.map(d => d.torque), 100);\r\n    const maxPower = Math.max(maxHP, maxTorque);\r\n\r\n    // Draw grid\r\n    ctx.strokeStyle = '#333';\r\n    ctx.lineWidth = 1;\r\n    \r\n    // Vertical grid lines (RPM)\r\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\r\n      const x = leftPadding + ((rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, topPadding);\r\n      ctx.lineTo(x, height - bottomPadding);\r\n      ctx.stroke();\r\n      \r\n      // RPM labels\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = `${Math.max(12, width * 0.016)}px Arial`;\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(rpm.toString(), x, height - bottomPadding + 20);\r\n    }\r\n\r\n    // Horizontal grid lines (Power)\r\n    for (let power = 0; power <= maxPower; power += 50) {\r\n      const y = height - bottomPadding - (power / maxPower) * graphHeight;\r\n      ctx.beginPath();\r\n      ctx.moveTo(leftPadding, y);\r\n      ctx.lineTo(width - rightPadding, y);\r\n      ctx.stroke();\r\n      \r\n      // Power labels\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = `${Math.max(12, width * 0.016)}px Arial`;\r\n      ctx.textAlign = 'right';\r\n      ctx.fillText(power.toString(), leftPadding - 10, y + 5);\r\n    }\r\n\r\n    // Draw axes\r\n    ctx.strokeStyle = '#666';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftPadding, topPadding);\r\n    ctx.lineTo(leftPadding, height - bottomPadding);\r\n    ctx.lineTo(width - rightPadding, height - bottomPadding);\r\n    ctx.stroke();\r\n\r\n    // Draw HP line (red)\r\n    if (dataToDisplay.length > 1) {\r\n      ctx.strokeStyle = '#ff4444';\r\n      ctx.lineWidth = Math.max(3, width * 0.004);\r\n      ctx.beginPath();\r\n      \r\n      dataToDisplay.forEach((point, index) => {\r\n        const x = leftPadding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - bottomPadding - (point.horsepower / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw Torque line (green)\r\n    if (dataToDisplay.length > 1) {\r\n      ctx.strokeStyle = '#44ff44';\r\n      ctx.lineWidth = Math.max(3, width * 0.004);\r\n      ctx.beginPath();\r\n      \r\n      dataToDisplay.forEach((point, index) => {\r\n        const x = leftPadding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - bottomPadding - (point.torque / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw current point indicator (only during live run)\r\n    if (isRunning && liveGraphData.length > 0) {\r\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\r\n      const x = leftPadding + ((currentPoint.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      const yHP = height - bottomPadding - (currentPoint.horsepower / maxPower) * graphHeight;\r\n      const yTQ = height - bottomPadding - (currentPoint.torque / maxPower) * graphHeight;\r\n      \r\n      const indicatorSize = Math.max(4, width * 0.008);\r\n      \r\n      // HP indicator\r\n      ctx.fillStyle = '#ff4444';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yHP, indicatorSize, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      \r\n      // Torque indicator\r\n      ctx.fillStyle = '#44ff44';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yTQ, indicatorSize, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n\r\n    // Draw legend with responsive sizing\r\n    const legendFontSize = Math.max(6, width * 0.010);\r\n    ctx.fillStyle = '#ff4444';\r\n    ctx.font = `bold ${legendFontSize}px Arial`;\r\n    ctx.textAlign = 'left';\r\n    ctx.fillText('■ Horsepower', width - 160, 25);\r\n    \r\n    ctx.fillStyle = '#44ff44';\r\n    ctx.fillText('■ Torque', width - 160, 25 + legendFontSize + 6);\r\n\r\n    // Axis labels with responsive sizing and better positioning\r\n    const axisLabelSize = Math.max(12, width * 0.012);\r\n    ctx.fillStyle = '#ccc';\r\n    ctx.font = `bold ${axisLabelSize}px Arial`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('RPM', width / 2, height - 15);\r\n    \r\n    // Y-axis label with proper positioning\r\n    ctx.save();\r\n    ctx.translate(40, topPadding + 60);\r\n    //ctx.rotate(-Math.PI / 2);\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('HP / TQ', 0, 0);\r\n    ctx.restore();\r\n\r\n  }, [liveGraphData, smoothedData, isRunning]);\r\n\r\n  // Handle smoothing change\r\n  const handleSmoothingChange = async (newLevel) => {\r\n    if (!dynoResults || !dynoResults.processedData) return;\r\n    \r\n    setSmoothingLevel(newLevel);\r\n    \r\n    let dataToProcess;\r\n    \r\n    if (newLevel === 0) {\r\n      // Raw data\r\n      dataToProcess = dynoResults.processedData.map(d => ({\r\n        rpm: d.rpm,\r\n        horsepower: Math.round(d.hp),\r\n        torque: Math.round(d.torque),\r\n        boost: Math.round(d.boost * 10) / 10\r\n      }));\r\n      setSmoothedData(dataToProcess);\r\n    } else {\r\n      // Apply smoothing via backend\r\n      try {\r\n        const response = await fetch(`http://localhost:5038/api/dyno/runs/${dynoResults.backendResults.id}/smooth/${newLevel}`);\r\n        if (response.ok) {\r\n          const smoothed = await response.json();\r\n          dataToProcess = smoothed.map(d => ({\r\n            rpm: d.rpm,\r\n            horsepower: Math.round(d.horsepower),\r\n            torque: Math.round(d.torque),\r\n            boost: Math.round(d.boost * 10) / 10\r\n          }));\r\n          setSmoothedData(dataToProcess);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error applying smoothing:', error);\r\n        return;\r\n      }\r\n    }\r\n    \r\n    // Calculate new peaks from smoothed data\r\n    if (dataToProcess && dataToProcess.length > 0) {\r\n      const maxHP = Math.max(...dataToProcess.map(d => d.horsepower));\r\n      const maxTorque = Math.max(...dataToProcess.map(d => d.torque));\r\n      const maxBoost = Math.max(...dataToProcess.map(d => d.boost));\r\n      const maxHPPoint = dataToProcess.find(d => d.horsepower === maxHP);\r\n      const maxTorquePoint = dataToProcess.find(d => d.torque === maxTorque);\r\n      \r\n      setSmoothedPeaks({\r\n        maxHP,\r\n        maxTorque,\r\n        maxBoost,\r\n        maxHPRpm: maxHPPoint?.rpm || 0,\r\n        maxTorqueRpm: maxTorquePoint?.rpm || 0\r\n      });\r\n    }\r\n  };\r\n\r\n  // Parse uploaded CSV file\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setCsvFile(file);\r\n    setDynoResults(null);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csv = e.target.result;\r\n      const lines = csv.split('\\n');\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      \r\n      const data = lines.slice(1)\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => {\r\n          const values = line.split(',');\r\n          const row = {};\r\n          headers.forEach((header, index) => {\r\n            row[header] = values[index]?.trim();\r\n          });\r\n          return row;\r\n        })\r\n        .filter(row => {\r\n          const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\r\n          const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\r\n          const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\r\n          \r\n          return rpm > 2000 && maf > 5 && load > 0.15;\r\n        });\r\n      \r\n      setCsvData(data);\r\n      console.log(`Loaded ${data.length} valid data points from CSV`);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Send to C# backend\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) return null;\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', dynoSettings.selectedCar);\r\n      formData.append('Weight', dynoSettings.weight.toString());\r\n      formData.append('Gear', dynoSettings.gear.toString());\r\n      formData.append('Notes', `${dynoSettings.dynoType}, ${dynoSettings.temperature}°F`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      console.log('Sending CSV to C# backend...');\r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const backendResults = await response.json();\r\n        console.log('✅ C# Backend Results:', backendResults);\r\n        return backendResults;\r\n      } else {\r\n        console.error('Backend API error:', response.status, response.statusText);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to connect to C# backend:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Run virtual dyno\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n    \r\n    try {\r\n      // Get backend results\r\n      const backendResults = await sendToBackend();\r\n      \r\n      if (!backendResults) {\r\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      // Get detailed data points\r\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\r\n      \r\n      if (!detailResponse.ok) {\r\n        console.error('Failed to get detailed run data:', detailResponse.status);\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      const detailData = await detailResponse.json();\r\n      \r\n      // Process data with virtual dyno characteristics\r\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\r\n        const dyno = dynoTypes[dynoSettings.dynoType];\r\n        \r\n        // Environmental effects\r\n        const tempCorrection = Math.sqrt(537.67 / (dynoSettings.temperature + 459.67));\r\n        const humidityCorrection = 1 - (dynoSettings.humidity / 100 * 0.047);\r\n        const envCorrection = tempCorrection * humidityCorrection;\r\n        \r\n        // Dyno type correction and variance\r\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n        \r\n        return {\r\n          rpm: point.rpm || point.Rpm || 0,\r\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\r\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\r\n          boost: point.boost || point.Boost || 0,\r\n          maf: point.massAirflow || point.MassAirflow || 0,\r\n          load: point.load || point.Load || 0,\r\n          backendHP: point.horsepower || point.Horsepower || 0,\r\n          backendTorque: point.torque || point.Torque || 0\r\n        };\r\n      });\r\n      \r\n      // Sort by RPM for proper graph progression\r\n      processedData.sort((a, b) => a.rpm - b.rpm);\r\n      \r\n      // Animate the dyno run with live graph updates\r\n      for (let i = 0; i < processedData.length; i++) {\r\n        const currentPoint = processedData[i];\r\n        \r\n        // Update live graph data (add current point)\r\n        setLiveGraphData(prev => {\r\n          const newData = [...prev, {\r\n            rpm: currentPoint.rpm,\r\n            horsepower: Math.round(currentPoint.hp),\r\n            torque: Math.round(currentPoint.torque),\r\n            boost: Math.round(currentPoint.boost * 10) / 10\r\n          }];\r\n          \r\n          return newData.sort((a, b) => a.rpm - b.rpm);\r\n        });\r\n        \r\n        // Update current peaks and live readings\r\n        setCurrentPeaks(prev => {\r\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\r\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\r\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\r\n          \r\n          return {\r\n            maxHP: Math.round(maxHP),\r\n            maxTorque: Math.round(maxTorque),\r\n            maxBoost: Math.round(maxBoost * 10) / 10,\r\n            currentHP: Math.round(currentPoint.hp),\r\n            currentTorque: Math.round(currentPoint.torque),\r\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\r\n          };\r\n        });\r\n        \r\n        setCurrentDataPoint(i);\r\n        \r\n        // Vary the delay based on RPM\r\n        const delay = currentPoint.rpm < 3000 ? 200 : \r\n                     currentPoint.rpm < 4000 ? 150 : \r\n                     currentPoint.rpm < 5000 ? 120 : 100;\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n      \r\n      // Calculate final peaks\r\n      const peaks = {\r\n        maxHP: processedData.length > 0 ? Math.round(Math.max(...processedData.map(d => d.hp || 0))) : 0,\r\n        maxTorque: processedData.length > 0 ? Math.round(Math.max(...processedData.map(d => d.torque || 0))) : 0,\r\n        maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))?.rpm || 0,\r\n        maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))?.rpm || 0,\r\n        backendMaxHP: Math.round(backendResults.peaks?.maxHorsepower || 0),\r\n        backendMaxTorque: Math.round(backendResults.peaks?.maxTorque || 0),\r\n        backendMaxHPRpm: backendResults.peaks?.maxHorsepowerRpm || 0,\r\n        backendMaxTorqueRpm: backendResults.peaks?.maxTorqueRpm || 0\r\n      };\r\n      \r\n      setDynoResults({\r\n        processedData,\r\n        peaks,\r\n        settings: dynoSettings,\r\n        fileName: csvFile.name,\r\n        backendResults\r\n      });\r\n      \r\n      // Set initial smoothing level to 0 (raw data)\r\n      setSmoothingLevel(0);\r\n      handleSmoothingChange(0);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running virtual dyno:', error);\r\n      alert('Error connecting to backend API. Make sure your C# API is running.');\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Reset dyno\r\n  const resetDyno = () => {\r\n    setDynoResults(null);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    setSmoothedPeaks(null);\r\n    setSmoothingLevel(0);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    padding: '8px 12px',\r\n    border: '1px solid #4a5568',\r\n    borderRadius: '4px',\r\n    fontSize: '14px',\r\n    backgroundColor: '#2d3748',\r\n    color: '#e2e8f0'\r\n  };\r\n\r\n  const labelStyle = {\r\n    display: 'block',\r\n    fontSize: '14px',\r\n    fontWeight: '600',\r\n    color: '#e2e8f0',\r\n    marginBottom: '6px'\r\n  };\r\n\r\n  const sectionStyle = {\r\n    marginBottom: '20px',\r\n    padding: '15px',\r\n    backgroundColor: '#2d3748',\r\n    borderRadius: '6px',\r\n    border: '1px solid #4a5568'\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      minHeight: '100vh',\r\n      backgroundColor: '#0f1419',\r\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{\r\n        backgroundColor: '#1a2332',\r\n        color: 'white',\r\n        padding: '16px 0',\r\n        textAlign: 'center',\r\n        boxShadow: '0 2px 10px rgba(0,0,0,0.3)',\r\n        borderBottom: '1px solid #2d3748'\r\n      }}>\r\n        <h1 style={{ \r\n          margin: 0, \r\n          fontSize: '24px', \r\n          fontWeight: '700',\r\n          letterSpacing: '-0.5px',\r\n          background: 'linear-gradient(135deg, #ff4444, #44ff44, #4488ff)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          backgroundClip: 'text'\r\n        }}>\r\n          🏁 Virtual Dyno Pro\r\n        </h1>\r\n        <p style={{ \r\n          margin: '6px 0 0 0', \r\n          fontSize: '14px', \r\n          opacity: 0.8,\r\n          fontWeight: '400',\r\n          color: '#a0aec0'\r\n        }}>\r\n          Professional Dyno Analysis & Simulation\r\n        </p>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '360px 1fr',\r\n        height: 'calc(100vh - 100px)', // Increased available height\r\n        gap: '0'\r\n      }}>\r\n        \r\n        {/* Left Panel - Settings */}\r\n        <div style={{\r\n          backgroundColor: '#1a202c',\r\n          borderRight: '1px solid #2d3748',\r\n          padding: '20px',\r\n          overflowY: 'auto'\r\n        }}>\r\n          \r\n          {/* File Upload Section */}\r\n          <div style={sectionStyle}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '12px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, flex: 1 }}>📁 Upload Datalog</label>\r\n              <button \r\n                onClick={() => fileInputRef.current?.click()}\r\n                style={{\r\n                  padding: '8px 16px',\r\n                  backgroundColor: csvFile ? '#38a169' : '#3182ce',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '14px',\r\n                  fontWeight: '500',\r\n                  transition: 'all 0.2s ease'\r\n                }}\r\n                onMouseOver={(e) => e.target.style.backgroundColor = csvFile ? '#2f855a' : '#2c5282'}\r\n                onMouseOut={(e) => e.target.style.backgroundColor = csvFile ? '#38a169' : '#3182ce'}\r\n              >\r\n                {csvFile ? '✅ Change' : '📂 Select'}\r\n              </button>\r\n              <input \r\n                type=\"file\" \r\n                accept=\".csv\"\r\n                onChange={handleFileUpload}\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </div>\r\n            \r\n            {csvFile && (\r\n              <div style={{\r\n                fontSize: '12px',\r\n                color: '#a0aec0',\r\n                backgroundColor: '#2d3748',\r\n                padding: '8px',\r\n                borderRadius: '4px',\r\n                border: '1px solid #4a5568',\r\n                wordBreak: 'break-all'\r\n              }}>\r\n                📄 {csvFile.name}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Vehicle Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 14px 0', fontSize: '15px', color: '#68d391' }}>🚗 Vehicle Setup</h3>\r\n            \r\n            {/* Car Selection */}\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, minWidth: '70px', fontSize: '13px' }}>Car:</label>\r\n              <select \r\n                value={dynoSettings.selectedCar}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, selectedCar: e.target.value }))}\r\n                style={{ ...inputStyle, flex: 1, fontSize: '13px' }}\r\n              >\r\n                {carOptions.map(car => (\r\n                  <option key={car.value} value={car.value}>{car.label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Gear Selection */}\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Gear Used:</label>\r\n              <div style={{ display: 'flex', gap: '6px' }}>\r\n                {[3, 4, 5].map(gear => (\r\n                  <button\r\n                    key={gear}\r\n                    onClick={() => setDynoSettings(prev => ({ ...prev, gear }))}\r\n                    style={{\r\n                      flex: 1,\r\n                      padding: '8px',\r\n                      border: dynoSettings.gear === gear ? '2px solid #3182ce' : '1px solid #4a5568',\r\n                      borderRadius: '4px',\r\n                      backgroundColor: dynoSettings.gear === gear ? '#2c5282' : '#2d3748',\r\n                      color: dynoSettings.gear === gear ? 'white' : '#a0aec0',\r\n                      cursor: 'pointer',\r\n                      fontSize: '13px',\r\n                      fontWeight: dynoSettings.gear === gear ? '600' : '400',\r\n                      transition: 'all 0.2s ease'\r\n                    }}\r\n                  >\r\n                    {gear}rd\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Weight */}\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Vehicle Weight (lbs):</label>\r\n              <input\r\n                type=\"number\"\r\n                value={dynoSettings.weight}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, weight: parseInt(e.target.value) || 0 }))}\r\n                style={{ ...inputStyle, fontSize: '13px' }}\r\n                min=\"1000\"\r\n                max=\"10000\"\r\n                step=\"50\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dyno Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 14px 0', fontSize: '15px', color: '#68d391' }}>⚙️ Dyno Configuration</h3>\r\n            \r\n            {/* Dyno Type */}\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, minWidth: '70px', fontSize: '13px' }}>Type:</label>\r\n              <select \r\n                value={dynoSettings.dynoType}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, dynoType: e.target.value }))}\r\n                style={{ ...inputStyle, flex: 1, fontSize: '13px' }}\r\n              >\r\n                {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n                  <option key={key} value={key}>{dyno.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Environmental Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 14px 0', fontSize: '15px', color: '#68d391' }}>🌡️ Environmental</h3>\r\n            \r\n            {/* Temperature */}\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Temperature: {dynoSettings.temperature}°F</label>\r\n              <input \r\n                type=\"range\" \r\n                min=\"50\" \r\n                max=\"110\" \r\n                value={dynoSettings.temperature}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, temperature: parseInt(e.target.value) }))}\r\n                style={{ width: '100%', margin: '4px 0' }}\r\n              />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '11px', color: '#718096' }}>\r\n                <span>50°F</span><span>110°F</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Humidity */}\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Humidity: {dynoSettings.humidity}%</label>\r\n              <input \r\n                type=\"range\" \r\n                min=\"10\" \r\n                max=\"90\" \r\n                value={dynoSettings.humidity}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, humidity: parseInt(e.target.value) }))}\r\n                style={{ width: '100%', margin: '4px 0' }}\r\n              />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '11px', color: '#718096' }}>\r\n                <span>10%</span><span>90%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Run Button */}\r\n          <button \r\n            onClick={runVirtualDyno}\r\n            disabled={!csvData.length || isRunning}\r\n            style={{\r\n              width: '100%',\r\n              padding: '14px',\r\n              backgroundColor: isRunning ? '#4a5568' : '#e53e3e',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              fontSize: '15px',\r\n              fontWeight: '700',\r\n              cursor: isRunning ? 'not-allowed' : 'pointer',\r\n              transition: 'all 0.2s ease',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.3)'\r\n            }}\r\n          >\r\n            {isRunning ? '🏃 PROCESSING...' : '🚀 START VIRTUAL DYNO'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Right Panel - Graph */}\r\n        <div style={{\r\n          backgroundColor: '#1a202c',\r\n          padding: '20px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          position: 'relative'\r\n        }}>\r\n          \r\n          {/* Stats Cards or Placeholder */}\r\n          {(isRunning || dynoResults) ? (\r\n            <div>\r\n              {/* Smoothing Control - Only show after run */}\r\n              {dynoResults && !isRunning && (\r\n                <div style={{\r\n                  position: 'absolute',\r\n                  top: '24px',\r\n                  right: '24px',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: '8px',\r\n                  backgroundColor: '#2d3748',\r\n                  padding: '6px 10px',\r\n                  borderRadius: '6px',\r\n                  border: '1px solid #4a5568',\r\n                  zIndex: 10\r\n                }}>\r\n                  <label style={{ fontSize: '11px', color: '#a0aec0', fontWeight: '500' }}>\r\n                    Smoothing:\r\n                  </label>\r\n                  <select\r\n                    value={smoothingLevel}\r\n                    onChange={(e) => handleSmoothingChange(parseInt(e.target.value))}\r\n                    style={{\r\n                      padding: '3px 6px',\r\n                      border: '1px solid #4a5568',\r\n                      borderRadius: '4px',\r\n                      fontSize: '11px',\r\n                      backgroundColor: '#1a202c',\r\n                      color: '#e2e8f0'\r\n                    }}\r\n                  >\r\n                    {smoothingOptions.map(option => (\r\n                      <option key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              )}\r\n\r\n              {/* Peak Stats Card */}\r\n              <div style={{\r\n                backgroundColor: '#1a1a1a',\r\n                color: 'white',\r\n                padding: '16px',\r\n                borderRadius: '8px',\r\n                marginBottom: '16px',\r\n                display: 'grid',\r\n                gridTemplateColumns: '1fr 1fr 1fr',\r\n                gap: '16px',\r\n                textAlign: 'center'\r\n              }}>\r\n                <div>\r\n                  <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#ff4444' }}>\r\n                    {isRunning ? currentPeaks.currentHP : (smoothedPeaks ? smoothedPeaks.maxHP : (dynoResults?.peaks?.maxHP || 0))}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#ccc', marginBottom: '3px' }}>\r\n                    {isRunning ? 'CURRENT' : 'PEAK'} HP\r\n                  </div>\r\n                  {!isRunning && (dynoResults || smoothedPeaks) && (\r\n                    <div style={{ fontSize: '9px', color: '#888' }}>\r\n                      @ {smoothedPeaks ? smoothedPeaks.maxHPRpm : (dynoResults?.peaks?.maxHPRpm || 0)} RPM\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div>\r\n                  <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#44ff44' }}>\r\n                    {isRunning ? currentPeaks.currentTorque : (smoothedPeaks ? smoothedPeaks.maxTorque : (dynoResults?.peaks?.maxTorque || 0))}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#ccc', marginBottom: '3px' }}>\r\n                    {isRunning ? 'CURRENT' : 'PEAK'} LB-FT\r\n                  </div>\r\n                  {!isRunning && (dynoResults || smoothedPeaks) && (\r\n                    <div style={{ fontSize: '9px', color: '#888' }}>\r\n                      @ {smoothedPeaks ? smoothedPeaks.maxTorqueRpm : (dynoResults?.peaks?.maxTorqueRpm || 0)} RPM\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div>\r\n                  <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#4488ff' }}>\r\n                    {isRunning ? currentPeaks.maxBoost : (smoothedPeaks ? smoothedPeaks.maxBoost : (Math.max(...(liveGraphData.map(d => d.boost) || [0])) || (smoothedData.length > 0 ? Math.max(...smoothedData.map(d => d.boost)) : 0)))}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#ccc', marginBottom: '3px' }}>\r\n                    PEAK BOOST PSI\r\n                  </div>\r\n                  <div style={{ fontSize: '9px', color: '#888' }}>\r\n                    {isRunning ? 'LIVE' : 'RECORDED'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Canvas Graph with much improved sizing */}\r\n              <div style={{ \r\n                flex: 1, \r\n                position: 'relative',\r\n                height: 'calc(100vh - 280px)', // Much larger height\r\n                minHeight: '400px', // Increased minimum\r\n                maxHeight: '600px' // Increased maximum\r\n              }}>\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    border: '1px solid #4a5568',\r\n                    borderRadius: '6px',\r\n                    backgroundColor: '#1a1a1a'\r\n                  }}\r\n                />\r\n                \r\n                {/* Save Dyno Button - Only show after completion */}\r\n                {dynoResults && !isRunning && (\r\n                  <button \r\n                    onClick={() => {\r\n                      // TODO: Implement save functionality\r\n                      alert('Save functionality will be implemented soon!');\r\n                    }}\r\n                    style={{\r\n                      position: 'absolute',\r\n                      bottom: '16px',\r\n                      right: '16px',\r\n                      padding: '8px 14px',\r\n                      backgroundColor: '#38a169',\r\n                      color: 'white',\r\n                      border: 'none',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      fontSize: '13px',\r\n                      fontWeight: '600',\r\n                      transition: 'all 0.2s ease',\r\n                      boxShadow: '0 2px 8px rgba(56, 161, 105, 0.3)',\r\n                      zIndex: 10\r\n                    }}\r\n                    onMouseOver={(e) => e.target.style.backgroundColor = '#2f855a'}\r\n                    onMouseOut={(e) => e.target.style.backgroundColor = '#38a169'}\r\n                  >\r\n                    💾 Save Dyno\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div style={{\r\n              flex: 1,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: '#2d3748',\r\n              borderRadius: '8px',\r\n              border: '2px dashed #4a5568',\r\n              minHeight: '400px' // Increased to match new canvas size\r\n            }}>\r\n              <div style={{\r\n                textAlign: 'center',\r\n                color: '#a0aec0'\r\n              }}>\r\n                <div style={{ fontSize: '48px', marginBottom: '16px' }}>📊</div>\r\n                <h3 style={{ margin: '0 0 8px 0', fontSize: '18px', color: '#68d391' }}>Ready for Dyno Run</h3>\r\n                <p style={{ margin: 0, fontSize: '14px' }}>\r\n                  Upload a datalog file and configure your settings to begin\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualDyno;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}