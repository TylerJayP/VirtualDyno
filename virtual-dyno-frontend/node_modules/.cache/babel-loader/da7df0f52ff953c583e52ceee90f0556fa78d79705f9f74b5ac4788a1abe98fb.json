{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\RealCSVVirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\n\n// Virtual Dyno Room that processes REAL user CSV files\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RealCSVVirtualDyno = () => {\n  _s();\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\n    dynoType: 'mustang_md250',\n    temperature: 75,\n    humidity: 45,\n    altitude: 500,\n    runs: 1\n  });\n  const fileInputRef = useRef(null);\n\n  // Dyno characteristics\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250 (Load Bearing)\",\n      correction: 1.0,\n      variance: 0.02,\n      heatSoak: 0.98\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C (Inertial)\",\n      correction: 1.15,\n      variance: 0.03,\n      heatSoak: 0.96\n    },\n    awd_dyno: {\n      name: \"AWD Dyno (All-Wheel)\",\n      correction: 0.95,\n      variance: 0.04,\n      heatSoak: 0.97\n    }\n  };\n\n  // Parse uploaded CSV file\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setCsvFile(file);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csv = e.target.result;\n      const lines = csv.split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n        const values = line.split(',');\n        const row = {};\n        headers.forEach((header, index) => {\n          var _values$index;\n          row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n        });\n        return row;\n      }).filter(row => {\n        // Filter for valid dyno data (like your C# backend does)\n        const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\n        const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\n        const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\n        return rpm > 2000 && maf > 5 && load > 0.15;\n      });\n      setCsvData(data);\n      console.log(`Loaded ${data.length} valid data points from CSV`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Apply virtual dyno physics to real data\n  const applyVirtualDynoPhysics = (dataPoint, index) => {\n    const dyno = dynoTypes[virtualDynoSettings.dynoType];\n\n    // Environmental correction (SAE J1349 simplified)\n    const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\n    const humidityCorrection = 1 - virtualDynoSettings.humidity / 100 * 0.047;\n    const altitudeCorrection = 1 - virtualDynoSettings.altitude * 0.000035;\n    const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\n\n    // Heat soak effect\n    const heatSoak = Math.pow(dyno.heatSoak, virtualDynoSettings.runs - 1);\n\n    // Dyno variance (realistic noise)\n    const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n\n    // Calculate base HP from MAF (like your backend algorithm)\n    const rpm = parseInt(dataPoint['RPM (RPM)'] || dataPoint['RPM'] || dataPoint['Engine Speed']);\n    const maf = parseFloat(dataPoint['Mass Airflow (g/s)'] || dataPoint['MAF'] || dataPoint['Mass Airflow']);\n    const load = parseFloat(dataPoint['Calculated Load (Load)'] || dataPoint['Load'] || dataPoint['Engine Load']);\n    const boost = parseFloat(dataPoint['Boost (psi)'] || dataPoint['Boost'] || dataPoint['Manifold Pressure']) || 0;\n\n    // Base calculation (simplified version of your C# algorithm)\n    let baseHP = maf * 1.1;\n    baseHP *= Math.min(load * 1.2, 1.0);\n\n    // Apply all corrections\n    const finalHP = baseHP * envCorrection * heatSoak * dyno.correction * variance;\n    const finalTorque = rpm > 0 ? finalHP * 5252 / rpm : 0;\n    return {\n      rpm,\n      hp: Math.max(finalHP, 0),\n      torque: Math.max(finalTorque, 0),\n      boost,\n      maf,\n      load,\n      originalData: dataPoint\n    };\n  };\n\n  // Run virtual dyno with real CSV data\n  const runVirtualDyno = async () => {\n    var _processedData$find, _processedData$find2;\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n\n    // Process each data point with virtual dyno physics\n    const processedData = csvData.map((dataPoint, index) => applyVirtualDynoPhysics(dataPoint, index));\n\n    // Simulate real-time dyno run\n    for (let i = 0; i < processedData.length; i++) {\n      setCurrentDataPoint(i);\n      await new Promise(resolve => setTimeout(resolve, 150)); // 150ms per point\n    }\n\n    // Calculate peaks\n    const peaks = {\n      maxHP: Math.max(...processedData.map(d => d.hp)),\n      maxTorque: Math.max(...processedData.map(d => d.torque)),\n      maxHPRpm: (_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm,\n      maxTorqueRpm: (_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm,\n      maxBoost: Math.max(...processedData.map(d => d.boost))\n    };\n    setDynoResults({\n      processedData,\n      peaks,\n      settings: virtualDynoSettings,\n      fileName: csvFile.name\n    });\n    setIsRunning(false);\n\n    // Optionally send to C# backend for comparison\n    await sendToBackend();\n  };\n\n  // Send to your C# backend for official results\n  const sendToBackend = async () => {\n    if (!csvFile) return;\n    try {\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', 'mazdaspeed3'); // Could be user-selectable\n      formData.append('Weight', '3200');\n      formData.append('Gear', '4');\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}`);\n      formData.append('IsPublic', 'false');\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const backendResults = await response.json();\n        console.log('C# Backend Results:', backendResults);\n        // Could compare virtual vs backend results here\n      }\n    } catch (error) {\n      console.log('Backend not available, using virtual results only');\n    }\n  };\n  const resetDyno = () => {\n    setDynoResults(null);\n    setCurrentDataPoint(0);\n    setVirtualDynoSettings(prev => ({\n      ...prev,\n      runs: 1\n    }));\n  };\n  const runAgain = () => {\n    setVirtualDynoSettings(prev => ({\n      ...prev,\n      runs: prev.runs + 1\n    }));\n    runVirtualDyno();\n  };\n  const currentData = dynoResults === null || dynoResults === void 0 ? void 0 : dynoResults.processedData[currentDataPoint];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83C\\uDFC1 Virtual Dyno Experience - Real CSV Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr 1fr',\n        gap: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px dashed #007bff',\n          padding: '20px',\n          borderRadius: '8px',\n          textAlign: 'center',\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCC1 Upload Your Datalog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fileInputRef.current.click(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: csvFile ? '✅ Change File' : '📂 Select CSV File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 18\n            }, this), \" \", csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 18\n            }, this), \" \", csvData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDD27 Virtual Dyno Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dyno Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: virtualDynoSettings.dynoType,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            dynoType: e.target.value\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 10px 0',\n            padding: '5px'\n          },\n          children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: dyno.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Temperature: \", virtualDynoSettings.temperature, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"50\",\n          max: \"110\",\n          value: virtualDynoSettings.temperature,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            temperature: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Humidity: \", virtualDynoSettings.humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"10\",\n          max: \"90\",\n          value: virtualDynoSettings.humidity,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            humidity: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 10px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Run #:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 14\n          }, this), \" \", virtualDynoSettings.runs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Heat Soak:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 14\n          }, this), \" \", (Math.pow(dynoTypes[virtualDynoSettings.dynoType].heatSoak, virtualDynoSettings.runs - 1) * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #28a745',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: isRunning ? '#fff3cd' : '#f8fff8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"\\uD83D\\uDCCA \", isRunning ? 'DYNO RUNNING...' : 'Virtual Dyno']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), isRunning && currentData && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#ffeb3b',\n            padding: '10px',\n            borderRadius: '5px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px',\n              fontWeight: 'bold'\n            },\n            children: [currentData.rpm, \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '18px'\n            },\n            children: [currentData.hp.toFixed(1), \" HP | \", currentData.torque.toFixed(1), \" lb-ft\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '14px'\n            },\n            children: [\"Boost: \", currentData.boost.toFixed(1), \" PSI | MAF: \", currentData.maf.toFixed(1), \" g/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '10px',\n              backgroundColor: '#ddd',\n              borderRadius: '5px',\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: `${currentDataPoint / csvData.length * 100}%`,\n                height: '100%',\n                backgroundColor: '#28a745',\n                borderRadius: '5px',\n                transition: 'width 0.1s'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uD83C\\uDFC6 Peak Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [dynoResults.peaks.maxHP.toFixed(1), \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 18\n            }, this), \" @ \", dynoResults.peaks.maxHPRpm, \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [dynoResults.peaks.maxTorque.toFixed(1), \" lb-ft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 18\n            }, this), \" @ \", dynoResults.peaks.maxTorqueRpm, \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Max Boost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 18\n            }, this), \" \", dynoResults.peaks.maxBoost.toFixed(1), \" PSI\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px'\n            },\n            children: [\"Dyno: \", dynoTypes[dynoResults.settings.dynoType].name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 70\n            }, this), \"Correction: \", dynoTypes[dynoResults.settings.dynoType].correction, \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runVirtualDyno,\n        disabled: !csvData.length || isRunning,\n        style: {\n          padding: '15px 30px',\n          backgroundColor: isRunning ? '#ccc' : '#dc3545',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '18px',\n          fontWeight: 'bold',\n          marginRight: '10px',\n          cursor: isRunning ? 'not-allowed' : 'pointer'\n        },\n        children: isRunning ? '🏃 DYNO RUNNING...' : '🚀 START VIRTUAL DYNO'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runAgain,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#ffc107',\n            color: 'black',\n            border: 'none',\n            borderRadius: '5px',\n            marginRight: '10px',\n            cursor: 'pointer'\n          },\n          children: \"\\uD83D\\uDD04 Run Again (Heat Soak)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetDyno,\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"\\uD83D\\uDD04 Reset Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDFAE How to Use Your Virtual Dyno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Upload your real CSV datalog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this), \" (AccessPort, Cobb, MHD, etc.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Choose dyno type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), \" - Different dynos read differently\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Set environmental conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), \" - Hot weather = less power\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Watch your car \\\"run\\\" on the virtual dyno\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), \" - Real-time simulation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Run multiple pulls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), \" - See heat soak effects\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFAF This uses YOUR real data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 12\n        }, this), \" but simulates different dyno types and conditions!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#fff3cd',\n          padding: '10px',\n          borderRadius: '5px',\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Expected CSV Columns:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), \" RPM, Mass Airflow (g/s), Boost (psi), Calculated Load, plus optional AFR, Intake Temp, Knock Retard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(RealCSVVirtualDyno, \"qLMZIaD/+m5tKCli1VWA4igZlOQ=\");\n_c = RealCSVVirtualDyno;\nexport default RealCSVVirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"RealCSVVirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","RealCSVVirtualDyno","_s","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","virtualDynoSettings","setVirtualDynoSettings","dynoType","temperature","humidity","altitude","runs","fileInputRef","dynoTypes","mustang_md250","name","correction","variance","heatSoak","dynojet_248c","awd_dyno","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csv","result","lines","split","headers","map","h","trim","data","slice","filter","line","length","values","row","forEach","header","index","_values$index","rpm","parseInt","maf","parseFloat","load","console","log","readAsText","applyVirtualDynoPhysics","dataPoint","dyno","tempCorrection","Math","sqrt","humidityCorrection","altitudeCorrection","envCorrection","pow","random","boost","baseHP","min","finalHP","finalTorque","hp","max","torque","originalData","runVirtualDyno","_processedData$find","_processedData$find2","alert","processedData","i","Promise","resolve","setTimeout","peaks","maxHP","d","maxTorque","maxHPRpm","find","p","maxTorqueRpm","maxBoost","settings","fileName","sendToBackend","formData","FormData","append","response","fetch","method","body","ok","backendResults","json","error","resetDyno","prev","runAgain","currentData","style","padding","maxWidth","margin","children","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginBottom","border","borderRadius","textAlign","backgroundColor","type","accept","onChange","ref","onClick","current","click","color","cursor","fontSize","marginTop","value","width","Object","entries","key","toFixed","fontWeight","height","transition","disabled","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/RealCSVVirtualDyno.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\n// Virtual Dyno Room that processes REAL user CSV files\r\nconst RealCSVVirtualDyno = () => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\r\n    dynoType: 'mustang_md250',\r\n    temperature: 75,\r\n    humidity: 45,\r\n    altitude: 500,\r\n    runs: 1\r\n  });\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Dyno characteristics\r\n  const dynoTypes = {\r\n    mustang_md250: {\r\n      name: \"Mustang MD250 (Load Bearing)\",\r\n      correction: 1.0,\r\n      variance: 0.02,\r\n      heatSoak: 0.98\r\n    },\r\n    dynojet_248c: {\r\n      name: \"DynoJet 248C (Inertial)\", \r\n      correction: 1.15,\r\n      variance: 0.03,\r\n      heatSoak: 0.96\r\n    },\r\n    awd_dyno: {\r\n      name: \"AWD Dyno (All-Wheel)\",\r\n      correction: 0.95,\r\n      variance: 0.04,\r\n      heatSoak: 0.97\r\n    }\r\n  };\r\n\r\n  // Parse uploaded CSV file\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setCsvFile(file);\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csv = e.target.result;\r\n      const lines = csv.split('\\n');\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      \r\n      const data = lines.slice(1)\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => {\r\n          const values = line.split(',');\r\n          const row = {};\r\n          headers.forEach((header, index) => {\r\n            row[header] = values[index]?.trim();\r\n          });\r\n          return row;\r\n        })\r\n        .filter(row => {\r\n          // Filter for valid dyno data (like your C# backend does)\r\n          const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\r\n          const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\r\n          const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\r\n          \r\n          return rpm > 2000 && maf > 5 && load > 0.15;\r\n        });\r\n      \r\n      setCsvData(data);\r\n      console.log(`Loaded ${data.length} valid data points from CSV`);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Apply virtual dyno physics to real data\r\n  const applyVirtualDynoPhysics = (dataPoint, index) => {\r\n    const dyno = dynoTypes[virtualDynoSettings.dynoType];\r\n    \r\n    // Environmental correction (SAE J1349 simplified)\r\n    const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\r\n    const humidityCorrection = 1 - (virtualDynoSettings.humidity / 100 * 0.047);\r\n    const altitudeCorrection = 1 - (virtualDynoSettings.altitude * 0.000035);\r\n    const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\r\n    \r\n    // Heat soak effect\r\n    const heatSoak = Math.pow(dyno.heatSoak, virtualDynoSettings.runs - 1);\r\n    \r\n    // Dyno variance (realistic noise)\r\n    const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n    \r\n    // Calculate base HP from MAF (like your backend algorithm)\r\n    const rpm = parseInt(dataPoint['RPM (RPM)'] || dataPoint['RPM'] || dataPoint['Engine Speed']);\r\n    const maf = parseFloat(dataPoint['Mass Airflow (g/s)'] || dataPoint['MAF'] || dataPoint['Mass Airflow']);\r\n    const load = parseFloat(dataPoint['Calculated Load (Load)'] || dataPoint['Load'] || dataPoint['Engine Load']);\r\n    const boost = parseFloat(dataPoint['Boost (psi)'] || dataPoint['Boost'] || dataPoint['Manifold Pressure']) || 0;\r\n    \r\n    // Base calculation (simplified version of your C# algorithm)\r\n    let baseHP = maf * 1.1;\r\n    baseHP *= Math.min(load * 1.2, 1.0);\r\n    \r\n    // Apply all corrections\r\n    const finalHP = baseHP * envCorrection * heatSoak * dyno.correction * variance;\r\n    const finalTorque = rpm > 0 ? (finalHP * 5252) / rpm : 0;\r\n    \r\n    return {\r\n      rpm,\r\n      hp: Math.max(finalHP, 0),\r\n      torque: Math.max(finalTorque, 0),\r\n      boost,\r\n      maf,\r\n      load,\r\n      originalData: dataPoint\r\n    };\r\n  };\r\n\r\n  // Run virtual dyno with real CSV data\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    \r\n    // Process each data point with virtual dyno physics\r\n    const processedData = csvData.map((dataPoint, index) => \r\n      applyVirtualDynoPhysics(dataPoint, index)\r\n    );\r\n    \r\n    // Simulate real-time dyno run\r\n    for (let i = 0; i < processedData.length; i++) {\r\n      setCurrentDataPoint(i);\r\n      await new Promise(resolve => setTimeout(resolve, 150)); // 150ms per point\r\n    }\r\n    \r\n    // Calculate peaks\r\n    const peaks = {\r\n      maxHP: Math.max(...processedData.map(d => d.hp)),\r\n      maxTorque: Math.max(...processedData.map(d => d.torque)),\r\n      maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp)))?.rpm,\r\n      maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque)))?.rpm,\r\n      maxBoost: Math.max(...processedData.map(d => d.boost))\r\n    };\r\n    \r\n    setDynoResults({\r\n      processedData,\r\n      peaks,\r\n      settings: virtualDynoSettings,\r\n      fileName: csvFile.name\r\n    });\r\n    \r\n    setIsRunning(false);\r\n    \r\n    // Optionally send to C# backend for comparison\r\n    await sendToBackend();\r\n  };\r\n\r\n  // Send to your C# backend for official results\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) return;\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', 'mazdaspeed3'); // Could be user-selectable\r\n      formData.append('Weight', '3200');\r\n      formData.append('Gear', '4');\r\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const backendResults = await response.json();\r\n        console.log('C# Backend Results:', backendResults);\r\n        // Could compare virtual vs backend results here\r\n      }\r\n    } catch (error) {\r\n      console.log('Backend not available, using virtual results only');\r\n    }\r\n  };\r\n\r\n  const resetDyno = () => {\r\n    setDynoResults(null);\r\n    setCurrentDataPoint(0);\r\n    setVirtualDynoSettings(prev => ({ ...prev, runs: 1 }));\r\n  };\r\n\r\n  const runAgain = () => {\r\n    setVirtualDynoSettings(prev => ({ ...prev, runs: prev.runs + 1 }));\r\n    runVirtualDyno();\r\n  };\r\n\r\n  const currentData = dynoResults?.processedData[currentDataPoint];\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1400px', margin: '0 auto' }}>\r\n      <h1>🏁 Virtual Dyno Experience - Real CSV Data</h1>\r\n      \r\n      <div style={{ \r\n        display: 'grid', \r\n        gridTemplateColumns: '1fr 1fr 1fr', \r\n        gap: '20px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        \r\n        {/* File Upload */}\r\n        <div style={{ \r\n          border: '2px dashed #007bff', \r\n          padding: '20px', \r\n          borderRadius: '8px',\r\n          textAlign: 'center',\r\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\r\n        }}>\r\n          <h3>📁 Upload Your Datalog</h3>\r\n          <input \r\n            type=\"file\" \r\n            accept=\".csv\"\r\n            onChange={handleFileUpload}\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <button \r\n            onClick={() => fileInputRef.current.click()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#007bff',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            {csvFile ? '✅ Change File' : '📂 Select CSV File'}\r\n          </button>\r\n          \r\n          {csvFile && (\r\n            <div style={{ marginTop: '10px', fontSize: '14px' }}>\r\n              <p><strong>File:</strong> {csvFile.name}</p>\r\n              <p><strong>Data Points:</strong> {csvData.length}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Virtual Dyno Settings */}\r\n        <div style={{ \r\n          border: '1px solid #ddd', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          backgroundColor: '#f9f9f9'\r\n        }}>\r\n          <h3>🔧 Virtual Dyno Setup</h3>\r\n          \r\n          <label>Dyno Type:</label>\r\n          <select \r\n            value={virtualDynoSettings.dynoType}\r\n            onChange={(e) => setVirtualDynoSettings(prev => ({\r\n              ...prev, dynoType: e.target.value\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 10px 0', padding: '5px' }}\r\n          >\r\n            {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n              <option key={key} value={key}>{dyno.name}</option>\r\n            ))}\r\n          </select>\r\n          \r\n          <label>Temperature: {virtualDynoSettings.temperature}°F</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"50\" \r\n            max=\"110\" \r\n            value={virtualDynoSettings.temperature}\r\n            onChange={(e) => setVirtualDynoSettings(prev => ({\r\n              ...prev, temperature: parseInt(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 10px 0' }}\r\n          />\r\n          \r\n          <label>Humidity: {virtualDynoSettings.humidity}%</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"10\" \r\n            max=\"90\" \r\n            value={virtualDynoSettings.humidity}\r\n            onChange={(e) => setVirtualDynoSettings(prev => ({\r\n              ...prev, humidity: parseInt(e.target.value)\r\n            }))}\r\n            style={{ width: '100%', margin: '5px 0 10px 0' }}\r\n          />\r\n          \r\n          <p><strong>Run #:</strong> {virtualDynoSettings.runs}</p>\r\n          <p><strong>Heat Soak:</strong> {(Math.pow(dynoTypes[virtualDynoSettings.dynoType].heatSoak, virtualDynoSettings.runs - 1) * 100).toFixed(1)}%</p>\r\n        </div>\r\n\r\n        {/* Live Dyno Display */}\r\n        <div style={{ \r\n          border: '2px solid #28a745', \r\n          padding: '15px', \r\n          borderRadius: '8px',\r\n          backgroundColor: isRunning ? '#fff3cd' : '#f8fff8'\r\n        }}>\r\n          <h3>📊 {isRunning ? 'DYNO RUNNING...' : 'Virtual Dyno'}</h3>\r\n          \r\n          {isRunning && currentData && (\r\n            <div style={{ \r\n              backgroundColor: '#ffeb3b', \r\n              padding: '10px', \r\n              borderRadius: '5px',\r\n              textAlign: 'center'\r\n            }}>\r\n              <div style={{ fontSize: '24px', fontWeight: 'bold' }}>\r\n                {currentData.rpm} RPM\r\n              </div>\r\n              <div style={{ fontSize: '18px' }}>\r\n                {currentData.hp.toFixed(1)} HP | {currentData.torque.toFixed(1)} lb-ft\r\n              </div>\r\n              <div style={{ fontSize: '14px' }}>\r\n                Boost: {currentData.boost.toFixed(1)} PSI | MAF: {currentData.maf.toFixed(1)} g/s\r\n              </div>\r\n              <div style={{ \r\n                width: '100%', \r\n                height: '10px', \r\n                backgroundColor: '#ddd', \r\n                borderRadius: '5px',\r\n                marginTop: '10px'\r\n              }}>\r\n                <div style={{ \r\n                  width: `${(currentDataPoint / csvData.length) * 100}%`,\r\n                  height: '100%',\r\n                  backgroundColor: '#28a745',\r\n                  borderRadius: '5px',\r\n                  transition: 'width 0.1s'\r\n                }}></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {dynoResults && !isRunning && (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <h4>🏆 Peak Results</h4>\r\n              <p><strong>{dynoResults.peaks.maxHP.toFixed(1)} HP</strong> @ {dynoResults.peaks.maxHPRpm} RPM</p>\r\n              <p><strong>{dynoResults.peaks.maxTorque.toFixed(1)} lb-ft</strong> @ {dynoResults.peaks.maxTorqueRpm} RPM</p>\r\n              <p><strong>Max Boost:</strong> {dynoResults.peaks.maxBoost.toFixed(1)} PSI</p>\r\n              <p style={{ fontSize: '12px' }}>\r\n                Dyno: {dynoTypes[dynoResults.settings.dynoType].name}<br/>\r\n                Correction: {dynoTypes[dynoResults.settings.dynoType].correction}x\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Control Buttons */}\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button \r\n          onClick={runVirtualDyno}\r\n          disabled={!csvData.length || isRunning}\r\n          style={{\r\n            padding: '15px 30px',\r\n            backgroundColor: isRunning ? '#ccc' : '#dc3545',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            marginRight: '10px',\r\n            cursor: isRunning ? 'not-allowed' : 'pointer'\r\n          }}\r\n        >\r\n          {isRunning ? '🏃 DYNO RUNNING...' : '🚀 START VIRTUAL DYNO'}\r\n        </button>\r\n        \r\n        {dynoResults && !isRunning && (\r\n          <>\r\n            <button \r\n              onClick={runAgain}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#ffc107',\r\n                color: 'black',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                marginRight: '10px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              🔄 Run Again (Heat Soak)\r\n            </button>\r\n            \r\n            <button \r\n              onClick={resetDyno}\r\n              style={{\r\n                padding: '10px 20px',\r\n                backgroundColor: '#6c757d',\r\n                color: 'white',\r\n                border: 'none',\r\n                borderRadius: '5px',\r\n                cursor: 'pointer'\r\n              }}\r\n            >\r\n              🔄 Reset Session\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Instructions */}\r\n      <div style={{ \r\n        padding: '20px', \r\n        backgroundColor: '#e3f2fd', \r\n        borderRadius: '8px',\r\n        marginTop: '20px'\r\n      }}>\r\n        <h4>🎮 How to Use Your Virtual Dyno:</h4>\r\n        <ol>\r\n          <li><strong>Upload your real CSV datalog</strong> (AccessPort, Cobb, MHD, etc.)</li>\r\n          <li><strong>Choose dyno type</strong> - Different dynos read differently</li>\r\n          <li><strong>Set environmental conditions</strong> - Hot weather = less power</li>\r\n          <li><strong>Watch your car \"run\" on the virtual dyno</strong> - Real-time simulation</li>\r\n          <li><strong>Run multiple pulls</strong> - See heat soak effects</li>\r\n        </ol>\r\n        \r\n        <p><strong>🎯 This uses YOUR real data</strong> but simulates different dyno types and conditions!</p>\r\n        \r\n        <div style={{ \r\n          backgroundColor: '#fff3cd', \r\n          padding: '10px', \r\n          borderRadius: '5px',\r\n          marginTop: '10px'\r\n        }}>\r\n          <strong>Expected CSV Columns:</strong> RPM, Mass Airflow (g/s), Boost (psi), Calculated Load, \r\n          plus optional AFR, Intake Temp, Knock Retard\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealCSVVirtualDyno;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}