{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\VirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Enhanced Virtual Dyno with Live Graphing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualDyno = () => {\n  _s();\n  var _dynoResults$peaks, _dynoResults$peaks2, _dynoResults$peaks3, _dynoResults$peaks4, _liveGraphData$curren, _dynoResults$peaks5, _dynoResults$peaks6, _dynoResults$peaks7, _dynoResults$peaks8, _dynoTypes$dynoResult, _dynoResults$settings, _dynoResults$settings2, _dynoResults$settings3, _dynoResults$peaks9, _dynoResults$peaks0, _dynoResults$peaks1, _dynoResults$peaks10;\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [liveGraphData, setLiveGraphData] = useState([]);\n  const [currentPeaks, setCurrentPeaks] = useState({\n    maxHP: 0,\n    maxTorque: 0,\n    maxBoost: 0,\n    currentHP: 0,\n    currentTorque: 0,\n    currentBoost: 0\n  });\n  const [selectedCar, setSelectedCar] = useState('mazdaspeed3');\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\n    dynoType: 'mustang_md250',\n    temperature: 75,\n    humidity: 45,\n    altitude: 500\n  });\n  const fileInputRef = useRef(null);\n\n  // Dyno characteristics\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250 (Load Bearing)\",\n      correction: 1.0,\n      variance: 0.02\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C (Inertial)\",\n      correction: 1.15,\n      variance: 0.03\n    },\n    awd_dyno: {\n      name: \"AWD Dyno (All-Wheel)\",\n      correction: 0.95,\n      variance: 0.04\n    }\n  };\n\n  // Parse uploaded CSV file\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setCsvFile(file);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csv = e.target.result;\n      const lines = csv.split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n        const values = line.split(',');\n        const row = {};\n        headers.forEach((header, index) => {\n          var _values$index;\n          row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n        });\n        return row;\n      }).filter(row => {\n        const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\n        const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\n        const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\n        return rpm > 2000 && maf > 5 && load > 0.15;\n      });\n      setCsvData(data);\n      console.log(`Loaded ${data.length} valid data points from CSV`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Send to C# backend\n  const sendToBackend = async () => {\n    if (!csvFile) return null;\n    try {\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', selectedCar);\n      formData.append('Weight', '3200');\n      formData.append('Gear', '4');\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}, ${virtualDynoSettings.temperature}°F`);\n      formData.append('IsPublic', 'false');\n      console.log('Sending CSV to C# backend...');\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const backendResults = await response.json();\n        console.log('✅ C# Backend Results:', backendResults);\n        return backendResults;\n      } else {\n        console.error('Backend API error:', response.status, response.statusText);\n        return null;\n      }\n    } catch (error) {\n      console.error('Failed to connect to C# backend:', error);\n      return null;\n    }\n  };\n\n  // Enhanced dyno run with live graphing\n  const runVirtualDyno = async () => {\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n    try {\n      var _processedData$find, _processedData$find2, _backendResults$peaks, _backendResults$peaks2, _backendResults$peaks3, _backendResults$peaks4;\n      // Get backend results\n      const backendResults = await sendToBackend();\n      if (!backendResults) {\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\n        setIsRunning(false);\n        return;\n      }\n\n      // Get detailed data points\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\n      if (!detailResponse.ok) {\n        console.error('Failed to get detailed run data:', detailResponse.status);\n        setIsRunning(false);\n        return;\n      }\n      const detailData = await detailResponse.json();\n\n      // Process data with virtual dyno characteristics\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\n        const dyno = dynoTypes[virtualDynoSettings.dynoType];\n\n        // Environmental effects\n        const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\n        const humidityCorrection = 1 - virtualDynoSettings.humidity / 100 * 0.047;\n        const altitudeCorrection = 1 - virtualDynoSettings.altitude * 0.000035;\n        const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\n\n        // Dyno type correction and variance\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n        return {\n          rpm: point.rpm || point.Rpm || 0,\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\n          boost: point.boost || point.Boost || 0,\n          maf: point.massAirflow || point.MassAirflow || 0,\n          load: point.load || point.Load || 0,\n          backendHP: point.horsepower || point.Horsepower || 0,\n          backendTorque: point.torque || point.Torque || 0\n        };\n      });\n\n      // Sort by RPM for proper graph progression\n      processedData.sort((a, b) => a.rpm - b.rpm);\n\n      // Animate the dyno run with live graph updates\n      for (let i = 0; i < processedData.length; i++) {\n        const currentPoint = processedData[i];\n\n        // Update live graph data (add current point)\n        setLiveGraphData(prev => {\n          const newData = [...prev, {\n            rpm: currentPoint.rpm,\n            horsepower: Math.round(currentPoint.hp * 10) / 10,\n            torque: Math.round(currentPoint.torque * 10) / 10,\n            boost: Math.round(currentPoint.boost * 10) / 10\n          }];\n\n          // Sort by RPM to ensure proper line drawing\n          return newData.sort((a, b) => a.rpm - b.rpm);\n        });\n\n        // Update current peaks and live readings\n        setCurrentPeaks(prev => {\n          const graphData = liveGraphData.concat([{\n            rpm: currentPoint.rpm,\n            horsepower: currentPoint.hp,\n            torque: currentPoint.torque,\n            boost: currentPoint.boost\n          }]);\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\n          return {\n            maxHP: Math.round(maxHP * 10) / 10,\n            maxTorque: Math.round(maxTorque * 10) / 10,\n            maxBoost: Math.round(maxBoost * 10) / 10,\n            currentHP: Math.round(currentPoint.hp * 10) / 10,\n            currentTorque: Math.round(currentPoint.torque * 10) / 10,\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\n          };\n        });\n        setCurrentDataPoint(i);\n\n        // Vary the delay based on RPM (faster at higher RPMs like a real dyno)\n        const delay = currentPoint.rpm < 3000 ? 200 : currentPoint.rpm < 4000 ? 150 : currentPoint.rpm < 5000 ? 120 : 100;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      // Calculate final peaks\n      const peaks = {\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\n        maxHPRpm: ((_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm) || 0,\n        maxTorqueRpm: ((_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm) || 0,\n        backendMaxHP: ((_backendResults$peaks = backendResults.peaks) === null || _backendResults$peaks === void 0 ? void 0 : _backendResults$peaks.maxHorsepower) || 0,\n        backendMaxTorque: ((_backendResults$peaks2 = backendResults.peaks) === null || _backendResults$peaks2 === void 0 ? void 0 : _backendResults$peaks2.maxTorque) || 0,\n        backendMaxHPRpm: ((_backendResults$peaks3 = backendResults.peaks) === null || _backendResults$peaks3 === void 0 ? void 0 : _backendResults$peaks3.maxHorsepowerRpm) || 0,\n        backendMaxTorqueRpm: ((_backendResults$peaks4 = backendResults.peaks) === null || _backendResults$peaks4 === void 0 ? void 0 : _backendResults$peaks4.maxTorqueRpm) || 0\n      };\n      setDynoResults({\n        processedData,\n        peaks,\n        settings: virtualDynoSettings,\n        fileName: csvFile.name,\n        backendResults\n      });\n    } catch (error) {\n      console.error('Error running virtual dyno:', error);\n      alert('Error connecting to backend API. Make sure your C# API is running.');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Reset dyno\n  const resetDyno = () => {\n    setDynoResults(null);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n  };\n\n  // Custom tooltip for the graph\n  const CustomTooltip = ({\n    active,\n    payload,\n    label\n  }) => {\n    if (active && payload && payload.length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1a1a1a',\n          border: '1px solid #333',\n          borderRadius: '5px',\n          padding: '10px',\n          color: 'white'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontWeight: 'bold'\n          },\n          children: `${label} RPM`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), payload.map((entry, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '2px 0',\n            color: entry.color\n          },\n          children: `${entry.name}: ${entry.value} ${entry.name === 'Horsepower' ? 'HP' : entry.name === 'Torque' ? 'lb-ft' : 'PSI'}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333',\n        marginBottom: '10px'\n      },\n      children: \"\\uD83C\\uDFC1 Virtual Dyno Experience - Live Graphing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#d4edda',\n        border: '1px solid #c3e6cb',\n        padding: '10px',\n        borderRadius: '5px',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u2699\\uFE0F Make sure your C# backend is running:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"cd VirtualDyno.API && dotnet run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: isRunning || dynoResults ? '1fr 2fr' : '1fr 1fr 1fr',\n        gap: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: csvFile ? '2px solid #28a745' : '2px dashed #007bff',\n          padding: '20px',\n          borderRadius: '8px',\n          textAlign: 'center',\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '15px',\n            color: '#333'\n          },\n          children: \"\\uD83D\\uDCC1 Upload Your Datalog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => fileInputRef.current.click(),\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: csvFile ? '✅ Change File' : '📂 Select CSV File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '14px',\n            color: '#666'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 18\n            }, this), \" \", csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 18\n            }, this), \" \", csvData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), !isRunning && !dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '15px',\n            color: '#333',\n            borderBottom: '1px solid #ddd',\n            paddingBottom: '5px'\n          },\n          children: \"\\uD83D\\uDE97 Vehicle & Dyno Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: '500',\n            color: '#555'\n          },\n          children: \"Select Car:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCar,\n          onChange: e => {\n            setSelectedCar(e.target.value);\n            resetDyno();\n          },\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0',\n            padding: '5px',\n            border: '1px solid #ddd',\n            borderRadius: '3px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mazdaspeed3\",\n            children: \"Mazdaspeed3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"wrx\",\n            children: \"Subaru WRX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gti\",\n            children: \"VW GTI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"focus_st\",\n            children: \"Ford Focus ST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: '500',\n            color: '#555'\n          },\n          children: \"Dyno Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: virtualDynoSettings.dynoType,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            dynoType: e.target.value\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0',\n            padding: '5px',\n            border: '1px solid #ddd',\n            borderRadius: '3px'\n          },\n          children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: dyno.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: '500',\n            color: '#555'\n          },\n          children: [\"Temperature: \", virtualDynoSettings.temperature, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"50\",\n          max: \"110\",\n          value: virtualDynoSettings.temperature,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            temperature: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), (isRunning || dynoResults) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #28a745',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f8fff8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#1a1a1a',\n            color: 'white',\n            padding: '15px',\n            borderRadius: '8px',\n            marginBottom: '15px',\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr 1fr',\n            gap: '15px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                fontWeight: 'bold',\n                color: '#ff4444'\n              },\n              children: isRunning ? currentPeaks.currentHP : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks = dynoResults.peaks) === null || _dynoResults$peaks === void 0 ? void 0 : _dynoResults$peaks.maxHP) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#ccc'\n              },\n              children: [isRunning ? 'CURRENT' : 'PEAK', \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), !isRunning && dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '10px',\n                color: '#888'\n              },\n              children: [\"@ \", ((_dynoResults$peaks2 = dynoResults.peaks) === null || _dynoResults$peaks2 === void 0 ? void 0 : _dynoResults$peaks2.maxHPRpm) || 0, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                fontWeight: 'bold',\n                color: '#44ff44'\n              },\n              children: isRunning ? currentPeaks.currentTorque : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks3 = dynoResults.peaks) === null || _dynoResults$peaks3 === void 0 ? void 0 : _dynoResults$peaks3.maxTorque) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#ccc'\n              },\n              children: [isRunning ? 'CURRENT' : 'PEAK', \" LB-FT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 17\n            }, this), !isRunning && dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '10px',\n                color: '#888'\n              },\n              children: [\"@ \", ((_dynoResults$peaks4 = dynoResults.peaks) === null || _dynoResults$peaks4 === void 0 ? void 0 : _dynoResults$peaks4.maxTorqueRpm) || 0, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                fontWeight: 'bold',\n                color: '#4444ff'\n              },\n              children: isRunning ? currentPeaks.maxBoost : Math.max(...(liveGraphData.map(d => d.boost) || [0]))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#ccc'\n              },\n              children: \"PEAK BOOST PSI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '10px',\n                color: '#888'\n              },\n              children: isRunning ? 'LIVE' : 'RECORDED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '400px',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n            width: \"100%\",\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(LineChart, {\n              data: liveGraphData,\n              margin: {\n                top: 20,\n                right: 30,\n                left: 20,\n                bottom: 20\n              },\n              children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                strokeDasharray: \"3 3\",\n                stroke: \"#333\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                dataKey: \"rpm\",\n                stroke: \"#666\",\n                label: {\n                  value: 'RPM',\n                  position: 'insideBottom',\n                  offset: -10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n                stroke: \"#666\",\n                label: {\n                  value: 'HP / TQ',\n                  angle: -90,\n                  position: 'insideLeft'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                content: /*#__PURE__*/_jsxDEV(CustomTooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"horsepower\",\n                stroke: \"#ff4444\",\n                strokeWidth: 3,\n                name: \"Horsepower\",\n                dot: false,\n                connectNulls: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                type: \"monotone\",\n                dataKey: \"torque\",\n                stroke: \"#44ff44\",\n                strokeWidth: 3,\n                name: \"Torque\",\n                dot: false,\n                connectNulls: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this), isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#ffeb3b',\n              padding: '10px',\n              borderRadius: '5px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '18px',\n                fontWeight: 'bold'\n              },\n              children: [((_liveGraphData$curren = liveGraphData[currentDataPoint]) === null || _liveGraphData$curren === void 0 ? void 0 : _liveGraphData$curren.rpm) || 0, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: [currentPeaks.currentHP, \" HP | \", currentPeaks.currentTorque, \" lb-ft | \", currentPeaks.currentBoost, \" PSI\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '10px',\n              backgroundColor: '#ddd',\n              borderRadius: '5px',\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '100%',\n                backgroundColor: '#28a745',\n                borderRadius: '5px',\n                width: `${csvData.length > 0 ? currentDataPoint / csvData.length * 100 : 0}%`,\n                transition: 'width 0.1s ease'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 11\n      }, this), !isRunning && !dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #28a745',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f8fff8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '15px',\n            color: '#333'\n          },\n          children: \"Virtual Dyno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), csvData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f8f9fa',\n            padding: '10px',\n            borderRadius: '5px',\n            textAlign: 'center',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ready to Run!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"CSV loaded with \", csvData.length, \" data points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click \\\"START VIRTUAL DYNO\\\" to process with your C# backend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '15px',\n            borderRadius: '5px',\n            textAlign: 'center',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload a CSV file to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runVirtualDyno,\n        disabled: !csvData.length || isRunning,\n        style: {\n          padding: '15px 30px',\n          backgroundColor: isRunning ? '#ccc' : '#dc3545',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '18px',\n          fontWeight: 'bold',\n          marginRight: '10px',\n          cursor: isRunning ? 'not-allowed' : 'pointer'\n        },\n        children: isRunning ? '🏃 PROCESSING...' : `🚀 START VIRTUAL DYNO`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 9\n      }, this), (dynoResults || liveGraphData.length > 0) && !isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetDyno,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"\\uD83D\\uDD04 Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#333',\n          marginBottom: '15px'\n        },\n        children: \"\\uD83C\\uDFC6 Final Dyno Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#e8f5e8',\n            padding: '15px',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Virtual Dyno Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks5 = dynoResults.peaks) === null || _dynoResults$peaks5 === void 0 ? void 0 : _dynoResults$peaks5.maxHP) || 0).toFixed(1), \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks6 = dynoResults.peaks) === null || _dynoResults$peaks6 === void 0 ? void 0 : _dynoResults$peaks6.maxHPRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks7 = dynoResults.peaks) === null || _dynoResults$peaks7 === void 0 ? void 0 : _dynoResults$peaks7.maxTorque) || 0).toFixed(1), \" lb-ft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks8 = dynoResults.peaks) === null || _dynoResults$peaks8 === void 0 ? void 0 : _dynoResults$peaks8.maxTorqueRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 674,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              color: '#666',\n              lineHeight: 1.4\n            },\n            children: [\"Dyno: \", ((_dynoTypes$dynoResult = dynoTypes[(_dynoResults$settings = dynoResults.settings) === null || _dynoResults$settings === void 0 ? void 0 : _dynoResults$settings.dynoType]) === null || _dynoTypes$dynoResult === void 0 ? void 0 : _dynoTypes$dynoResult.name) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 85\n            }, this), \"Conditions: \", ((_dynoResults$settings2 = dynoResults.settings) === null || _dynoResults$settings2 === void 0 ? void 0 : _dynoResults$settings2.temperature) || 'N/A', \"\\xB0F, \", ((_dynoResults$settings3 = dynoResults.settings) === null || _dynoResults$settings3 === void 0 ? void 0 : _dynoResults$settings3.humidity) || 'N/A', \"% humidity\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#e3f2fd',\n            padding: '15px',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"C# Backend Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks9 = dynoResults.peaks) === null || _dynoResults$peaks9 === void 0 ? void 0 : _dynoResults$peaks9.backendMaxHP) || 0).toFixed(1), \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks0 = dynoResults.peaks) === null || _dynoResults$peaks0 === void 0 ? void 0 : _dynoResults$peaks0.backendMaxHPRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks1 = dynoResults.peaks) === null || _dynoResults$peaks1 === void 0 ? void 0 : _dynoResults$peaks1.backendMaxTorque) || 0).toFixed(1), \" lb-ft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks10 = dynoResults.peaks) === null || _dynoResults$peaks10 === void 0 ? void 0 : _dynoResults$peaks10.backendMaxTorqueRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              color: '#666'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"(Raw calculations before virtual dyno effects)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#333',\n          marginBottom: '15px'\n        },\n        children: \"\\uD83C\\uDFAE How to Use Your Virtual Dyno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          marginBottom: '15px',\n          paddingLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Upload your real CSV datalog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 13\n          }, this), \" (AccessPort, Cobb, MHD, etc.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Choose your vehicle and dyno type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this), \" - Different dynos read differently\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Watch the live graph build your power curves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), \" - Just like a real dyno!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"See peak values update in real-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 13\n          }, this), \" - HP, Torque, and Boost\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Compare virtual vs. backend results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), \" - See how dyno conditions affect readings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFAF Features authentic dyno experience:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 12\n        }, this), \" Progressive graph building, live peak tracking, environmental corrections, and dyno-specific variance!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 698,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualDyno, \"jqvYuWeMOE0b1C+tLSVvOEH/BfU=\");\n_c = VirtualDyno;\nexport default VirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"VirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","VirtualDyno","_s","_dynoResults$peaks","_dynoResults$peaks2","_dynoResults$peaks3","_dynoResults$peaks4","_liveGraphData$curren","_dynoResults$peaks5","_dynoResults$peaks6","_dynoResults$peaks7","_dynoResults$peaks8","_dynoTypes$dynoResult","_dynoResults$settings","_dynoResults$settings2","_dynoResults$settings3","_dynoResults$peaks9","_dynoResults$peaks0","_dynoResults$peaks1","_dynoResults$peaks10","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","liveGraphData","setLiveGraphData","currentPeaks","setCurrentPeaks","maxHP","maxTorque","maxBoost","currentHP","currentTorque","currentBoost","selectedCar","setSelectedCar","virtualDynoSettings","setVirtualDynoSettings","dynoType","temperature","humidity","altitude","fileInputRef","dynoTypes","mustang_md250","name","correction","variance","dynojet_248c","awd_dyno","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csv","result","lines","split","headers","map","h","trim","data","slice","filter","line","length","values","row","forEach","header","index","_values$index","rpm","parseInt","maf","parseFloat","load","console","log","readAsText","sendToBackend","formData","FormData","append","response","fetch","method","body","ok","backendResults","json","error","status","statusText","runVirtualDyno","alert","_processedData$find","_processedData$find2","_backendResults$peaks","_backendResults$peaks2","_backendResults$peaks3","_backendResults$peaks4","detailResponse","id","detailData","processedData","dataPoints","point","dyno","tempCorrection","Math","sqrt","humidityCorrection","altitudeCorrection","envCorrection","random","Rpm","hp","horsepower","Horsepower","torque","Torque","boost","Boost","massAirflow","MassAirflow","Load","backendHP","backendTorque","sort","a","b","i","currentPoint","prev","newData","round","graphData","concat","max","delay","Promise","resolve","setTimeout","peaks","d","maxHPRpm","find","p","maxTorqueRpm","backendMaxHP","maxHorsepower","backendMaxTorque","backendMaxHPRpm","maxHorsepowerRpm","backendMaxTorqueRpm","settings","fileName","resetDyno","CustomTooltip","active","payload","label","style","backgroundColor","border","borderRadius","padding","color","children","margin","fontWeight","_jsxFileName","lineNumber","columnNumber","entry","value","maxWidth","fontFamily","textAlign","marginBottom","display","gridTemplateColumns","gap","type","accept","onChange","ref","onClick","current","click","cursor","fontSize","marginTop","borderBottom","paddingBottom","width","Object","entries","key","min","height","top","right","left","bottom","strokeDasharray","stroke","dataKey","position","offset","angle","content","strokeWidth","dot","connectNulls","overflow","transition","disabled","marginRight","toFixed","lineHeight","paddingLeft","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/VirtualDyno.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\n// Enhanced Virtual Dyno with Live Graphing\r\nconst VirtualDyno = () => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [liveGraphData, setLiveGraphData] = useState([]);\r\n  const [currentPeaks, setCurrentPeaks] = useState({\r\n    maxHP: 0,\r\n    maxTorque: 0,\r\n    maxBoost: 0,\r\n    currentHP: 0,\r\n    currentTorque: 0,\r\n    currentBoost: 0\r\n  });\r\n  const [selectedCar, setSelectedCar] = useState('mazdaspeed3');\r\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\r\n    dynoType: 'mustang_md250',\r\n    temperature: 75,\r\n    humidity: 45,\r\n    altitude: 500\r\n  });\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Dyno characteristics\r\n  const dynoTypes = {\r\n    mustang_md250: {\r\n      name: \"Mustang MD250 (Load Bearing)\",\r\n      correction: 1.0,\r\n      variance: 0.02\r\n    },\r\n    dynojet_248c: {\r\n      name: \"DynoJet 248C (Inertial)\", \r\n      correction: 1.15,\r\n      variance: 0.03\r\n    },\r\n    awd_dyno: {\r\n      name: \"AWD Dyno (All-Wheel)\",\r\n      correction: 0.95,\r\n      variance: 0.04\r\n    }\r\n  };\r\n\r\n  // Parse uploaded CSV file\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setCsvFile(file);\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csv = e.target.result;\r\n      const lines = csv.split('\\n');\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      \r\n      const data = lines.slice(1)\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => {\r\n          const values = line.split(',');\r\n          const row = {};\r\n          headers.forEach((header, index) => {\r\n            row[header] = values[index]?.trim();\r\n          });\r\n          return row;\r\n        })\r\n        .filter(row => {\r\n          const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\r\n          const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\r\n          const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\r\n          \r\n          return rpm > 2000 && maf > 5 && load > 0.15;\r\n        });\r\n      \r\n      setCsvData(data);\r\n      console.log(`Loaded ${data.length} valid data points from CSV`);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Send to C# backend\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) return null;\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', selectedCar);\r\n      formData.append('Weight', '3200');\r\n      formData.append('Gear', '4');\r\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}, ${virtualDynoSettings.temperature}°F`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      console.log('Sending CSV to C# backend...');\r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const backendResults = await response.json();\r\n        console.log('✅ C# Backend Results:', backendResults);\r\n        return backendResults;\r\n      } else {\r\n        console.error('Backend API error:', response.status, response.statusText);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to connect to C# backend:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Enhanced dyno run with live graphing\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n    \r\n    try {\r\n      // Get backend results\r\n      const backendResults = await sendToBackend();\r\n      \r\n      if (!backendResults) {\r\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      // Get detailed data points\r\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\r\n      \r\n      if (!detailResponse.ok) {\r\n        console.error('Failed to get detailed run data:', detailResponse.status);\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      const detailData = await detailResponse.json();\r\n      \r\n      // Process data with virtual dyno characteristics\r\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\r\n        const dyno = dynoTypes[virtualDynoSettings.dynoType];\r\n        \r\n        // Environmental effects\r\n        const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\r\n        const humidityCorrection = 1 - (virtualDynoSettings.humidity / 100 * 0.047);\r\n        const altitudeCorrection = 1 - (virtualDynoSettings.altitude * 0.000035);\r\n        const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\r\n        \r\n        // Dyno type correction and variance\r\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n        \r\n        return {\r\n          rpm: point.rpm || point.Rpm || 0,\r\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\r\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\r\n          boost: point.boost || point.Boost || 0,\r\n          maf: point.massAirflow || point.MassAirflow || 0,\r\n          load: point.load || point.Load || 0,\r\n          backendHP: point.horsepower || point.Horsepower || 0,\r\n          backendTorque: point.torque || point.Torque || 0\r\n        };\r\n      });\r\n      \r\n      // Sort by RPM for proper graph progression\r\n      processedData.sort((a, b) => a.rpm - b.rpm);\r\n      \r\n      // Animate the dyno run with live graph updates\r\n      for (let i = 0; i < processedData.length; i++) {\r\n        const currentPoint = processedData[i];\r\n        \r\n        // Update live graph data (add current point)\r\n        setLiveGraphData(prev => {\r\n          const newData = [...prev, {\r\n            rpm: currentPoint.rpm,\r\n            horsepower: Math.round(currentPoint.hp * 10) / 10,\r\n            torque: Math.round(currentPoint.torque * 10) / 10,\r\n            boost: Math.round(currentPoint.boost * 10) / 10\r\n          }];\r\n          \r\n          // Sort by RPM to ensure proper line drawing\r\n          return newData.sort((a, b) => a.rpm - b.rpm);\r\n        });\r\n        \r\n        // Update current peaks and live readings\r\n        setCurrentPeaks(prev => {\r\n          const graphData = liveGraphData.concat([{\r\n            rpm: currentPoint.rpm,\r\n            horsepower: currentPoint.hp,\r\n            torque: currentPoint.torque,\r\n            boost: currentPoint.boost\r\n          }]);\r\n          \r\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\r\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\r\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\r\n          \r\n          return {\r\n            maxHP: Math.round(maxHP * 10) / 10,\r\n            maxTorque: Math.round(maxTorque * 10) / 10,\r\n            maxBoost: Math.round(maxBoost * 10) / 10,\r\n            currentHP: Math.round(currentPoint.hp * 10) / 10,\r\n            currentTorque: Math.round(currentPoint.torque * 10) / 10,\r\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\r\n          };\r\n        });\r\n        \r\n        setCurrentDataPoint(i);\r\n        \r\n        // Vary the delay based on RPM (faster at higher RPMs like a real dyno)\r\n        const delay = currentPoint.rpm < 3000 ? 200 : \r\n                     currentPoint.rpm < 4000 ? 150 : \r\n                     currentPoint.rpm < 5000 ? 120 : 100;\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n      \r\n      // Calculate final peaks\r\n      const peaks = {\r\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\r\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\r\n        maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))?.rpm || 0,\r\n        maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))?.rpm || 0,\r\n        backendMaxHP: backendResults.peaks?.maxHorsepower || 0,\r\n        backendMaxTorque: backendResults.peaks?.maxTorque || 0,\r\n        backendMaxHPRpm: backendResults.peaks?.maxHorsepowerRpm || 0,\r\n        backendMaxTorqueRpm: backendResults.peaks?.maxTorqueRpm || 0\r\n      };\r\n      \r\n      setDynoResults({\r\n        processedData,\r\n        peaks,\r\n        settings: virtualDynoSettings,\r\n        fileName: csvFile.name,\r\n        backendResults\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error running virtual dyno:', error);\r\n      alert('Error connecting to backend API. Make sure your C# API is running.');\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Reset dyno\r\n  const resetDyno = () => {\r\n    setDynoResults(null);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n  };\r\n\r\n  // Custom tooltip for the graph\r\n  const CustomTooltip = ({ active, payload, label }) => {\r\n    if (active && payload && payload.length) {\r\n      return (\r\n        <div style={{\r\n          backgroundColor: '#1a1a1a',\r\n          border: '1px solid #333',\r\n          borderRadius: '5px',\r\n          padding: '10px',\r\n          color: 'white'\r\n        }}>\r\n          <p style={{ margin: 0, fontWeight: 'bold' }}>{`${label} RPM`}</p>\r\n          {payload.map((entry, index) => (\r\n            <p key={index} style={{ margin: '2px 0', color: entry.color }}>\r\n              {`${entry.name}: ${entry.value} ${entry.name === 'Horsepower' ? 'HP' : \r\n                entry.name === 'Torque' ? 'lb-ft' : 'PSI'}`}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1400px', margin: '0 auto', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1 style={{ textAlign: 'center', color: '#333', marginBottom: '10px' }}>\r\n        🏁 Virtual Dyno Experience - Live Graphing\r\n      </h1>\r\n      \r\n      <div style={{\r\n        backgroundColor: '#d4edda',\r\n        border: '1px solid #c3e6cb',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        marginBottom: '20px',\r\n        textAlign: 'center'\r\n      }}>\r\n        <strong>⚙️ Make sure your C# backend is running:</strong> <code>cd VirtualDyno.API && dotnet run</code>\r\n      </div>\r\n      \r\n      {/* Main Grid Layout */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: isRunning || dynoResults ? '1fr 2fr' : '1fr 1fr 1fr',\r\n        gap: '20px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        \r\n        {/* File Upload */}\r\n        <div style={{\r\n          border: csvFile ? '2px solid #28a745' : '2px dashed #007bff',\r\n          padding: '20px',\r\n          borderRadius: '8px',\r\n          textAlign: 'center',\r\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\r\n        }}>\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>📁 Upload Your Datalog</h3>\r\n          <input \r\n            type=\"file\" \r\n            accept=\".csv\"\r\n            onChange={handleFileUpload}\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <button \r\n            onClick={() => fileInputRef.current.click()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#007bff',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            {csvFile ? '✅ Change File' : '📂 Select CSV File'}\r\n          </button>\r\n          \r\n          {csvFile && (\r\n            <div style={{ marginTop: '10px', fontSize: '14px', color: '#666' }}>\r\n              <p><strong>File:</strong> {csvFile.name}</p>\r\n              <p><strong>Data Points:</strong> {csvData.length}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Settings Panel */}\r\n        {!isRunning && !dynoResults && (\r\n          <div style={{\r\n            border: '1px solid #ddd',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#f9f9f9'\r\n          }}>\r\n            <h3 style={{ marginBottom: '15px', color: '#333', borderBottom: '1px solid #ddd', paddingBottom: '5px' }}>\r\n              🚗 Vehicle & Dyno Settings\r\n            </h3>\r\n            \r\n            <label style={{ display: 'block', marginBottom: '5px', fontWeight: '500', color: '#555' }}>\r\n              Select Car:\r\n            </label>\r\n            <select \r\n              value={selectedCar}\r\n              onChange={(e) => {\r\n                setSelectedCar(e.target.value);\r\n                resetDyno();\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                margin: '5px 0 15px 0',\r\n                padding: '5px',\r\n                border: '1px solid #ddd',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              <option value=\"mazdaspeed3\">Mazdaspeed3</option>\r\n              <option value=\"wrx\">Subaru WRX</option>\r\n              <option value=\"gti\">VW GTI</option>\r\n              <option value=\"focus_st\">Ford Focus ST</option>\r\n            </select>\r\n\r\n            <label style={{ display: 'block', marginBottom: '5px', fontWeight: '500', color: '#555' }}>\r\n              Dyno Type:\r\n            </label>\r\n            <select \r\n              value={virtualDynoSettings.dynoType}\r\n              onChange={(e) => setVirtualDynoSettings(prev => ({\r\n                ...prev, dynoType: e.target.value\r\n              }))}\r\n              style={{\r\n                width: '100%',\r\n                margin: '5px 0 15px 0',\r\n                padding: '5px',\r\n                border: '1px solid #ddd',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n                <option key={key} value={key}>{dyno.name}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <label style={{ display: 'block', marginBottom: '5px', fontWeight: '500', color: '#555' }}>\r\n              Temperature: {virtualDynoSettings.temperature}°F\r\n            </label>\r\n            <input \r\n              type=\"range\" \r\n              min=\"50\" \r\n              max=\"110\" \r\n              value={virtualDynoSettings.temperature}\r\n              onChange={(e) => setVirtualDynoSettings(prev => ({\r\n                ...prev, temperature: parseInt(e.target.value)\r\n              }))}\r\n              style={{ width: '100%', margin: '5px 0 15px 0' }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Live Graph Area */}\r\n        {(isRunning || dynoResults) && (\r\n          <div style={{\r\n            border: '2px solid #28a745',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#f8fff8'\r\n          }}>\r\n            {/* Peak Stats Card */}\r\n            <div style={{\r\n              backgroundColor: '#1a1a1a',\r\n              color: 'white',\r\n              padding: '15px',\r\n              borderRadius: '8px',\r\n              marginBottom: '15px',\r\n              display: 'grid',\r\n              gridTemplateColumns: '1fr 1fr 1fr',\r\n              gap: '15px',\r\n              textAlign: 'center'\r\n            }}>\r\n              <div>\r\n                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#ff4444' }}>\r\n                  {isRunning ? currentPeaks.currentHP : (dynoResults?.peaks?.maxHP || 0)}\r\n                </div>\r\n                <div style={{ fontSize: '12px', color: '#ccc' }}>\r\n                  {isRunning ? 'CURRENT' : 'PEAK'} HP\r\n                </div>\r\n                {!isRunning && dynoResults && (\r\n                  <div style={{ fontSize: '10px', color: '#888' }}>\r\n                    @ {dynoResults.peaks?.maxHPRpm || 0} RPM\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div>\r\n                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#44ff44' }}>\r\n                  {isRunning ? currentPeaks.currentTorque : (dynoResults?.peaks?.maxTorque || 0)}\r\n                </div>\r\n                <div style={{ fontSize: '12px', color: '#ccc' }}>\r\n                  {isRunning ? 'CURRENT' : 'PEAK'} LB-FT\r\n                </div>\r\n                {!isRunning && dynoResults && (\r\n                  <div style={{ fontSize: '10px', color: '#888' }}>\r\n                    @ {dynoResults.peaks?.maxTorqueRpm || 0} RPM\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div>\r\n                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#4444ff' }}>\r\n                  {isRunning ? currentPeaks.maxBoost : (Math.max(...(liveGraphData.map(d => d.boost) || [0])))}\r\n                </div>\r\n                <div style={{ fontSize: '12px', color: '#ccc' }}>\r\n                  PEAK BOOST PSI\r\n                </div>\r\n                <div style={{ fontSize: '10px', color: '#888' }}>\r\n                  {isRunning ? 'LIVE' : 'RECORDED'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Live Graph */}\r\n            <div style={{ height: '400px', width: '100%' }}>\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <LineChart\r\n                  data={liveGraphData}\r\n                  margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#333\" />\r\n                  <XAxis \r\n                    dataKey=\"rpm\" \r\n                    stroke=\"#666\"\r\n                    label={{ value: 'RPM', position: 'insideBottom', offset: -10 }}\r\n                  />\r\n                  <YAxis \r\n                    stroke=\"#666\"\r\n                    label={{ value: 'HP / TQ', angle: -90, position: 'insideLeft' }}\r\n                  />\r\n                  <Tooltip content={<CustomTooltip />} />\r\n                  <Legend />\r\n                  <Line \r\n                    type=\"monotone\" \r\n                    dataKey=\"horsepower\" \r\n                    stroke=\"#ff4444\" \r\n                    strokeWidth={3}\r\n                    name=\"Horsepower\"\r\n                    dot={false}\r\n                    connectNulls={false}\r\n                  />\r\n                  <Line \r\n                    type=\"monotone\" \r\n                    dataKey=\"torque\" \r\n                    stroke=\"#44ff44\" \r\n                    strokeWidth={3}\r\n                    name=\"Torque\"\r\n                    dot={false}\r\n                    connectNulls={false}\r\n                  />\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n\r\n            {isRunning && (\r\n              <div style={{ textAlign: 'center', marginTop: '15px' }}>\r\n                <div style={{\r\n                  backgroundColor: '#ffeb3b',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                  marginBottom: '10px'\r\n                }}>\r\n                  <div style={{ fontSize: '18px', fontWeight: 'bold' }}>\r\n                    {liveGraphData[currentDataPoint]?.rpm || 0} RPM\r\n                  </div>\r\n                  <div style={{ fontSize: '14px' }}>\r\n                    {currentPeaks.currentHP} HP | {currentPeaks.currentTorque} lb-ft | {currentPeaks.currentBoost} PSI\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{\r\n                  width: '100%',\r\n                  height: '10px',\r\n                  backgroundColor: '#ddd',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    height: '100%',\r\n                    backgroundColor: '#28a745',\r\n                    borderRadius: '5px',\r\n                    width: `${csvData.length > 0 ? (currentDataPoint / csvData.length) * 100 : 0}%`,\r\n                    transition: 'width 0.1s ease'\r\n                  }}></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Status/Results Panel */}\r\n        {!isRunning && !dynoResults && (\r\n          <div style={{\r\n            border: '2px solid #28a745',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#f8fff8'\r\n          }}>\r\n            <h3 style={{ marginBottom: '15px', color: '#333' }}>Virtual Dyno</h3>\r\n            \r\n            {csvData.length > 0 ? (\r\n              <div style={{\r\n                backgroundColor: '#f8f9fa',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                textAlign: 'center',\r\n                fontSize: '14px'\r\n              }}>\r\n                <p><strong>Ready to Run!</strong></p>\r\n                <p>CSV loaded with {csvData.length} data points</p>\r\n                <p>Click \"START VIRTUAL DYNO\" to process with your C# backend</p>\r\n              </div>\r\n            ) : (\r\n              <div style={{\r\n                backgroundColor: '#f5f5f5',\r\n                padding: '15px',\r\n                borderRadius: '5px',\r\n                textAlign: 'center',\r\n                color: '#666'\r\n              }}>\r\n                <p>Upload a CSV file to get started</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Control Buttons */}\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button \r\n          onClick={runVirtualDyno}\r\n          disabled={!csvData.length || isRunning}\r\n          style={{\r\n            padding: '15px 30px',\r\n            backgroundColor: isRunning ? '#ccc' : '#dc3545',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            marginRight: '10px',\r\n            cursor: isRunning ? 'not-allowed' : 'pointer'\r\n          }}\r\n        >\r\n          {isRunning ? '🏃 PROCESSING...' : `🚀 START VIRTUAL DYNO`}\r\n        </button>\r\n        \r\n        {(dynoResults || liveGraphData.length > 0) && !isRunning && (\r\n          <button \r\n            onClick={resetDyno}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#6c757d',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            🔄 Reset\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Final Results */}\r\n      {dynoResults && !isRunning && (\r\n        <div style={{\r\n          padding: '20px',\r\n          backgroundColor: '#e3f2fd',\r\n          borderRadius: '8px',\r\n          marginTop: '20px'\r\n        }}>\r\n          <h4 style={{ color: '#333', marginBottom: '15px' }}>🏆 Final Dyno Results</h4>\r\n          \r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '20px'\r\n          }}>\r\n            <div style={{\r\n              backgroundColor: '#e8f5e8',\r\n              padding: '15px',\r\n              borderRadius: '5px'\r\n            }}>\r\n              <h5>Virtual Dyno Results</h5>\r\n              <p><strong>{(dynoResults.peaks?.maxHP || 0).toFixed(1)} HP</strong> @ {dynoResults.peaks?.maxHPRpm || 'N/A'} RPM</p>\r\n              <p><strong>{(dynoResults.peaks?.maxTorque || 0).toFixed(1)} lb-ft</strong> @ {dynoResults.peaks?.maxTorqueRpm || 'N/A'} RPM</p>\r\n              <p style={{ fontSize: '12px', color: '#666', lineHeight: 1.4 }}>\r\n                Dyno: {dynoTypes[dynoResults.settings?.dynoType]?.name || 'Unknown'}<br/>\r\n                Conditions: {dynoResults.settings?.temperature || 'N/A'}°F, {dynoResults.settings?.humidity || 'N/A'}% humidity\r\n              </p>\r\n            </div>\r\n            \r\n            <div style={{\r\n              backgroundColor: '#e3f2fd',\r\n              padding: '15px',\r\n              borderRadius: '5px'\r\n            }}>\r\n              <h5>C# Backend Results</h5>\r\n              <p><strong>{(dynoResults.peaks?.backendMaxHP || 0).toFixed(1)} HP</strong> @ {dynoResults.peaks?.backendMaxHPRpm || 'N/A'} RPM</p>\r\n              <p><strong>{(dynoResults.peaks?.backendMaxTorque || 0).toFixed(1)} lb-ft</strong> @ {dynoResults.peaks?.backendMaxTorqueRpm || 'N/A'} RPM</p>\r\n              <p style={{ fontSize: '12px', color: '#666' }}>\r\n                <em>(Raw calculations before virtual dyno effects)</em>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div style={{\r\n        padding: '20px',\r\n        backgroundColor: '#e3f2fd',\r\n        borderRadius: '8px',\r\n        marginTop: '20px'\r\n      }}>\r\n        <h4 style={{ color: '#333', marginBottom: '15px' }}>🎮 How to Use Your Virtual Dyno:</h4>\r\n        <ol style={{ marginBottom: '15px', paddingLeft: '20px' }}>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Upload your real CSV datalog</strong> (AccessPort, Cobb, MHD, etc.)\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Choose your vehicle and dyno type</strong> - Different dynos read differently\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Watch the live graph build your power curves</strong> - Just like a real dyno!\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>See peak values update in real-time</strong> - HP, Torque, and Boost\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Compare virtual vs. backend results</strong> - See how dyno conditions affect readings\r\n          </li>\r\n        </ol>\r\n        \r\n        <p><strong>🎯 Features authentic dyno experience:</strong> Progressive graph building, live peak tracking, environmental corrections, and dyno-specific variance!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualDyno;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}