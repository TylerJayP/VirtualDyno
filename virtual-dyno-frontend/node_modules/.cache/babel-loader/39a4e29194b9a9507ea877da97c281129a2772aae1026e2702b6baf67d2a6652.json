{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\VirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\n\n// Enhanced Virtual Dyno with Custom Live Canvas Graph\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualDyno = () => {\n  _s();\n  var _dynoResults$peaks, _dynoResults$peaks2, _dynoResults$peaks3, _dynoResults$peaks4, _liveGraphData, _dynoResults$peaks5, _dynoResults$peaks6, _dynoResults$peaks7, _dynoResults$peaks8, _dynoTypes$dynoResult, _dynoResults$settings, _dynoResults$settings2, _dynoResults$settings3, _dynoResults$peaks9, _dynoResults$peaks0, _dynoResults$peaks1, _dynoResults$peaks10;\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [liveGraphData, setLiveGraphData] = useState([]);\n  const [currentPeaks, setCurrentPeaks] = useState({\n    maxHP: 0,\n    maxTorque: 0,\n    maxBoost: 0,\n    currentHP: 0,\n    currentTorque: 0,\n    currentBoost: 0\n  });\n  const [selectedCar, setSelectedCar] = useState('mazdaspeed3');\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\n    dynoType: 'mustang_md250',\n    temperature: 75,\n    humidity: 45,\n    altitude: 500\n  });\n  const fileInputRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Dyno characteristics\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250 (Load Bearing)\",\n      correction: 1.0,\n      variance: 0.02\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C (Inertial)\",\n      correction: 1.15,\n      variance: 0.03\n    },\n    awd_dyno: {\n      name: \"AWD Dyno (All-Wheel)\",\n      correction: 0.95,\n      variance: 0.04\n    }\n  };\n\n  // Draw live graph on canvas\n  useEffect(() => {\n    if (!canvasRef.current || liveGraphData.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      width,\n      height\n    } = canvas;\n\n    // Clear canvas\n    ctx.fillStyle = '#1a1a1a';\n    ctx.fillRect(0, 0, width, height);\n\n    // Setup graph dimensions\n    const padding = 60;\n    const graphWidth = width - padding * 2;\n    const graphHeight = height - padding * 2;\n\n    // Find data ranges\n    const maxRpm = Math.max(...liveGraphData.map(d => d.rpm), 7000);\n    const minRpm = Math.min(...liveGraphData.map(d => d.rpm), 2000);\n    const maxHP = Math.max(...liveGraphData.map(d => d.horsepower), 100);\n    const maxTorque = Math.max(...liveGraphData.map(d => d.torque), 100);\n    const maxPower = Math.max(maxHP, maxTorque);\n\n    // Draw grid\n    ctx.strokeStyle = '#333';\n    ctx.lineWidth = 1;\n\n    // Vertical grid lines (RPM)\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\n      const x = padding + (rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      ctx.beginPath();\n      ctx.moveTo(x, padding);\n      ctx.lineTo(x, height - padding);\n      ctx.stroke();\n\n      // RPM labels\n      ctx.fillStyle = '#666';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(rpm.toString(), x, height - padding + 20);\n    }\n\n    // Horizontal grid lines (Power)\n    for (let power = 0; power <= maxPower; power += 50) {\n      const y = height - padding - power / maxPower * graphHeight;\n      ctx.beginPath();\n      ctx.moveTo(padding, y);\n      ctx.lineTo(width - padding, y);\n      ctx.stroke();\n\n      // Power labels\n      ctx.fillStyle = '#666';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'right';\n      ctx.fillText(power.toString(), padding - 10, y + 4);\n    }\n\n    // Draw axes\n    ctx.strokeStyle = '#666';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.stroke();\n\n    // Draw HP line (red)\n    if (liveGraphData.length > 1) {\n      ctx.strokeStyle = '#ff4444';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      liveGraphData.forEach((point, index) => {\n        const x = padding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - padding - point.horsepower / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw Torque line (green)\n    if (liveGraphData.length > 1) {\n      ctx.strokeStyle = '#44ff44';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      liveGraphData.forEach((point, index) => {\n        const x = padding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - padding - point.torque / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw current point indicator\n    if (isRunning && liveGraphData.length > 0) {\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\n      const x = padding + (currentPoint.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      const yHP = height - padding - currentPoint.horsepower / maxPower * graphHeight;\n      const yTQ = height - padding - currentPoint.torque / maxPower * graphHeight;\n\n      // HP indicator\n      ctx.fillStyle = '#ff4444';\n      ctx.beginPath();\n      ctx.arc(x, yHP, 5, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Torque indicator\n      ctx.fillStyle = '#44ff44';\n      ctx.beginPath();\n      ctx.arc(x, yTQ, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    // Draw legend\n    ctx.fillStyle = '#ff4444';\n    ctx.font = 'bold 14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText('■ Horsepower', width - 200, 30);\n    ctx.fillStyle = '#44ff44';\n    ctx.fillText('■ Torque', width - 200, 50);\n\n    // Axis labels\n    ctx.fillStyle = '#ccc';\n    ctx.font = 'bold 16px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('RPM', width / 2, height - 10);\n    ctx.save();\n    ctx.translate(20, height / 2);\n    ctx.rotate(-Math.PI / 2);\n    ctx.fillText('HP / TQ', 0, 0);\n    ctx.restore();\n  }, [liveGraphData, isRunning]);\n\n  // Parse uploaded CSV file\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setCsvFile(file);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csv = e.target.result;\n      const lines = csv.split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n        const values = line.split(',');\n        const row = {};\n        headers.forEach((header, index) => {\n          var _values$index;\n          row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n        });\n        return row;\n      }).filter(row => {\n        const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\n        const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\n        const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\n        return rpm > 2000 && maf > 5 && load > 0.15;\n      });\n      setCsvData(data);\n      console.log(`Loaded ${data.length} valid data points from CSV`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Send to C# backend\n  const sendToBackend = async () => {\n    if (!csvFile) return null;\n    try {\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', selectedCar);\n      formData.append('Weight', '3200');\n      formData.append('Gear', '4');\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}, ${virtualDynoSettings.temperature}°F`);\n      formData.append('IsPublic', 'false');\n      console.log('Sending CSV to C# backend...');\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const backendResults = await response.json();\n        console.log('✅ C# Backend Results:', backendResults);\n        return backendResults;\n      } else {\n        console.error('Backend API error:', response.status, response.statusText);\n        return null;\n      }\n    } catch (error) {\n      console.error('Failed to connect to C# backend:', error);\n      return null;\n    }\n  };\n\n  // Enhanced dyno run with live graphing\n  const runVirtualDyno = async () => {\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n    try {\n      var _processedData$find, _processedData$find2, _backendResults$peaks, _backendResults$peaks2, _backendResults$peaks3, _backendResults$peaks4;\n      // Get backend results\n      const backendResults = await sendToBackend();\n      if (!backendResults) {\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\n        setIsRunning(false);\n        return;\n      }\n\n      // Get detailed data points\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\n      if (!detailResponse.ok) {\n        console.error('Failed to get detailed run data:', detailResponse.status);\n        setIsRunning(false);\n        return;\n      }\n      const detailData = await detailResponse.json();\n\n      // Process data with virtual dyno characteristics\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\n        const dyno = dynoTypes[virtualDynoSettings.dynoType];\n\n        // Environmental effects\n        const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\n        const humidityCorrection = 1 - virtualDynoSettings.humidity / 100 * 0.047;\n        const altitudeCorrection = 1 - virtualDynoSettings.altitude * 0.000035;\n        const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\n\n        // Dyno type correction and variance\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n        return {\n          rpm: point.rpm || point.Rpm || 0,\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\n          boost: point.boost || point.Boost || 0,\n          maf: point.massAirflow || point.MassAirflow || 0,\n          load: point.load || point.Load || 0,\n          backendHP: point.horsepower || point.Horsepower || 0,\n          backendTorque: point.torque || point.Torque || 0\n        };\n      });\n\n      // Sort by RPM for proper graph progression\n      processedData.sort((a, b) => a.rpm - b.rpm);\n\n      // Animate the dyno run with live graph updates\n      for (let i = 0; i < processedData.length; i++) {\n        const currentPoint = processedData[i];\n\n        // Update live graph data (add current point)\n        setLiveGraphData(prev => {\n          const newData = [...prev, {\n            rpm: currentPoint.rpm,\n            horsepower: Math.round(currentPoint.hp * 10) / 10,\n            torque: Math.round(currentPoint.torque * 10) / 10,\n            boost: Math.round(currentPoint.boost * 10) / 10\n          }];\n\n          // Sort by RPM to ensure proper line drawing\n          return newData.sort((a, b) => a.rpm - b.rpm);\n        });\n\n        // Update current peaks and live readings\n        setCurrentPeaks(prev => {\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\n          return {\n            maxHP: Math.round(maxHP * 10) / 10,\n            maxTorque: Math.round(maxTorque * 10) / 10,\n            maxBoost: Math.round(maxBoost * 10) / 10,\n            currentHP: Math.round(currentPoint.hp * 10) / 10,\n            currentTorque: Math.round(currentPoint.torque * 10) / 10,\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\n          };\n        });\n        setCurrentDataPoint(i);\n\n        // Vary the delay based on RPM (faster at higher RPMs like a real dyno)\n        const delay = currentPoint.rpm < 3000 ? 200 : currentPoint.rpm < 4000 ? 150 : currentPoint.rpm < 5000 ? 120 : 100;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      // Calculate final peaks\n      const peaks = {\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\n        maxHPRpm: ((_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm) || 0,\n        maxTorqueRpm: ((_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm) || 0,\n        backendMaxHP: ((_backendResults$peaks = backendResults.peaks) === null || _backendResults$peaks === void 0 ? void 0 : _backendResults$peaks.maxHorsepower) || 0,\n        backendMaxTorque: ((_backendResults$peaks2 = backendResults.peaks) === null || _backendResults$peaks2 === void 0 ? void 0 : _backendResults$peaks2.maxTorque) || 0,\n        backendMaxHPRpm: ((_backendResults$peaks3 = backendResults.peaks) === null || _backendResults$peaks3 === void 0 ? void 0 : _backendResults$peaks3.maxHorsepowerRpm) || 0,\n        backendMaxTorqueRpm: ((_backendResults$peaks4 = backendResults.peaks) === null || _backendResults$peaks4 === void 0 ? void 0 : _backendResults$peaks4.maxTorqueRpm) || 0\n      };\n      setDynoResults({\n        processedData,\n        peaks,\n        settings: virtualDynoSettings,\n        fileName: csvFile.name,\n        backendResults\n      });\n    } catch (error) {\n      console.error('Error running virtual dyno:', error);\n      alert('Error connecting to backend API. Make sure your C# API is running.');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Reset dyno\n  const resetDyno = () => {\n    setDynoResults(null);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1400px',\n      margin: '0 auto',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#333',\n        marginBottom: '10px'\n      },\n      children: \"\\uD83C\\uDFC1 Virtual Dyno Experience - Live Graphing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#d4edda',\n        border: '1px solid #c3e6cb',\n        padding: '10px',\n        borderRadius: '5px',\n        marginBottom: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u2699\\uFE0F Make sure your C# backend is running:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"cd VirtualDyno.API && dotnet run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: isRunning || dynoResults ? '1fr 2fr' : '1fr 1fr 1fr',\n        gap: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: csvFile ? '2px solid #28a745' : '2px dashed #007bff',\n          padding: '20px',\n          borderRadius: '8px',\n          textAlign: 'center',\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '15px',\n            color: '#333'\n          },\n          children: \"\\uD83D\\uDCC1 Upload Your Datalog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv\",\n          onChange: handleFileUpload,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            var _fileInputRef$current;\n            return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n          },\n          style: {\n            padding: '10px 20px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '16px'\n          },\n          children: csvFile ? '✅ Change File' : '📂 Select CSV File'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '14px',\n            color: '#666'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 18\n            }, this), \" \", csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 18\n            }, this), \" \", csvData.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), !isRunning && !dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '15px',\n            color: '#333',\n            borderBottom: '1px solid #ddd',\n            paddingBottom: '5px'\n          },\n          children: \"\\uD83D\\uDE97 Vehicle & Dyno Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: '500',\n            color: '#555'\n          },\n          children: \"Select Car:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCar,\n          onChange: e => {\n            setSelectedCar(e.target.value);\n            resetDyno();\n          },\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0',\n            padding: '5px',\n            border: '1px solid #ddd',\n            borderRadius: '3px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"mazdaspeed3\",\n            children: \"Mazdaspeed3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"wrx\",\n            children: \"Subaru WRX\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gti\",\n            children: \"VW GTI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"focus_st\",\n            children: \"Ford Focus ST\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: '500',\n            color: '#555'\n          },\n          children: \"Dyno Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: virtualDynoSettings.dynoType,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            dynoType: e.target.value\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0',\n            padding: '5px',\n            border: '1px solid #ddd',\n            borderRadius: '3px'\n          },\n          children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: dyno.name\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: '500',\n            color: '#555'\n          },\n          children: [\"Temperature: \", virtualDynoSettings.temperature, \"\\xB0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"50\",\n          max: \"110\",\n          value: virtualDynoSettings.temperature,\n          onChange: e => setVirtualDynoSettings(prev => ({\n            ...prev,\n            temperature: parseInt(e.target.value)\n          })),\n          style: {\n            width: '100%',\n            margin: '5px 0 15px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this), (isRunning || dynoResults) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #28a745',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f8fff8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#1a1a1a',\n            color: 'white',\n            padding: '15px',\n            borderRadius: '8px',\n            marginBottom: '15px',\n            display: 'grid',\n            gridTemplateColumns: '1fr 1fr 1fr',\n            gap: '15px',\n            textAlign: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                fontWeight: 'bold',\n                color: '#ff4444'\n              },\n              children: isRunning ? currentPeaks.currentHP : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks = dynoResults.peaks) === null || _dynoResults$peaks === void 0 ? void 0 : _dynoResults$peaks.maxHP) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#ccc'\n              },\n              children: [isRunning ? 'CURRENT' : 'PEAK', \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this), !isRunning && dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '10px',\n                color: '#888'\n              },\n              children: [\"@ \", ((_dynoResults$peaks2 = dynoResults.peaks) === null || _dynoResults$peaks2 === void 0 ? void 0 : _dynoResults$peaks2.maxHPRpm) || 0, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                fontWeight: 'bold',\n                color: '#44ff44'\n              },\n              children: isRunning ? currentPeaks.currentTorque : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks3 = dynoResults.peaks) === null || _dynoResults$peaks3 === void 0 ? void 0 : _dynoResults$peaks3.maxTorque) || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#ccc'\n              },\n              children: [isRunning ? 'CURRENT' : 'PEAK', \" LB-FT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this), !isRunning && dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '10px',\n                color: '#888'\n              },\n              children: [\"@ \", ((_dynoResults$peaks4 = dynoResults.peaks) === null || _dynoResults$peaks4 === void 0 ? void 0 : _dynoResults$peaks4.maxTorqueRpm) || 0, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '24px',\n                fontWeight: 'bold',\n                color: '#4488ff'\n              },\n              children: isRunning ? currentPeaks.maxBoost : Math.max(...(liveGraphData.map(d => d.boost) || [0]))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '12px',\n                color: '#ccc'\n              },\n              children: \"PEAK BOOST PSI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '10px',\n                color: '#888'\n              },\n              children: isRunning ? 'LIVE' : 'RECORDED'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: 800,\n          height: 400,\n          style: {\n            width: '100%',\n            height: '400px',\n            border: '1px solid #333',\n            borderRadius: '5px',\n            backgroundColor: '#1a1a1a'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            marginTop: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#ffeb3b',\n              padding: '10px',\n              borderRadius: '5px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '18px',\n                fontWeight: 'bold'\n              },\n              children: [((_liveGraphData = liveGraphData[liveGraphData.length - 1]) === null || _liveGraphData === void 0 ? void 0 : _liveGraphData.rpm) || 0, \" RPM\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px'\n              },\n              children: [currentPeaks.currentHP, \" HP | \", currentPeaks.currentTorque, \" lb-ft | \", currentPeaks.currentBoost, \" PSI\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '10px',\n              backgroundColor: '#ddd',\n              borderRadius: '5px',\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: '100%',\n                backgroundColor: '#28a745',\n                borderRadius: '5px',\n                width: `${csvData.length > 0 ? currentDataPoint / csvData.length * 100 : 0}%`,\n                transition: 'width 0.1s ease'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this), !isRunning && !dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '2px solid #28a745',\n          padding: '15px',\n          borderRadius: '8px',\n          backgroundColor: '#f8fff8'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginBottom: '15px',\n            color: '#333'\n          },\n          children: \"Virtual Dyno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this), csvData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f8f9fa',\n            padding: '10px',\n            borderRadius: '5px',\n            textAlign: 'center',\n            fontSize: '14px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Ready to Run!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"CSV loaded with \", csvData.length, \" data points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click \\\"START VIRTUAL DYNO\\\" to process with your C# backend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '15px',\n            borderRadius: '5px',\n            textAlign: 'center',\n            color: '#666'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Upload a CSV file to get started\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: runVirtualDyno,\n        disabled: !csvData.length || isRunning,\n        style: {\n          padding: '15px 30px',\n          backgroundColor: isRunning ? '#ccc' : '#dc3545',\n          color: 'white',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '18px',\n          fontWeight: 'bold',\n          marginRight: '10px',\n          cursor: isRunning ? 'not-allowed' : 'pointer'\n        },\n        children: isRunning ? '🏃 PROCESSING...' : `🚀 START VIRTUAL DYNO`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 9\n      }, this), (dynoResults || liveGraphData.length > 0) && !isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetDyno,\n        style: {\n          padding: '10px 20px',\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"\\uD83D\\uDD04 Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 7\n    }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#333',\n          marginBottom: '15px'\n        },\n        children: \"\\uD83C\\uDFC6 Final Dyno Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#e8f5e8',\n            padding: '15px',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Virtual Dyno Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks5 = dynoResults.peaks) === null || _dynoResults$peaks5 === void 0 ? void 0 : _dynoResults$peaks5.maxHP) || 0).toFixed(1), \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks6 = dynoResults.peaks) === null || _dynoResults$peaks6 === void 0 ? void 0 : _dynoResults$peaks6.maxHPRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks7 = dynoResults.peaks) === null || _dynoResults$peaks7 === void 0 ? void 0 : _dynoResults$peaks7.maxTorque) || 0).toFixed(1), \" lb-ft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks8 = dynoResults.peaks) === null || _dynoResults$peaks8 === void 0 ? void 0 : _dynoResults$peaks8.maxTorqueRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              color: '#666',\n              lineHeight: 1.4\n            },\n            children: [\"Dyno: \", ((_dynoTypes$dynoResult = dynoTypes[(_dynoResults$settings = dynoResults.settings) === null || _dynoResults$settings === void 0 ? void 0 : _dynoResults$settings.dynoType]) === null || _dynoTypes$dynoResult === void 0 ? void 0 : _dynoTypes$dynoResult.name) || 'Unknown', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 85\n            }, this), \"Conditions: \", ((_dynoResults$settings2 = dynoResults.settings) === null || _dynoResults$settings2 === void 0 ? void 0 : _dynoResults$settings2.temperature) || 'N/A', \"\\xB0F, \", ((_dynoResults$settings3 = dynoResults.settings) === null || _dynoResults$settings3 === void 0 ? void 0 : _dynoResults$settings3.humidity) || 'N/A', \"% humidity\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: '#e3f2fd',\n            padding: '15px',\n            borderRadius: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"C# Backend Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks9 = dynoResults.peaks) === null || _dynoResults$peaks9 === void 0 ? void 0 : _dynoResults$peaks9.backendMaxHP) || 0).toFixed(1), \" HP\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks0 = dynoResults.peaks) === null || _dynoResults$peaks0 === void 0 ? void 0 : _dynoResults$peaks0.backendMaxHPRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [(((_dynoResults$peaks1 = dynoResults.peaks) === null || _dynoResults$peaks1 === void 0 ? void 0 : _dynoResults$peaks1.backendMaxTorque) || 0).toFixed(1), \" lb-ft\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 18\n            }, this), \" @ \", ((_dynoResults$peaks10 = dynoResults.peaks) === null || _dynoResults$peaks10 === void 0 ? void 0 : _dynoResults$peaks10.backendMaxTorqueRpm) || 'N/A', \" RPM\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '12px',\n              color: '#666'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"(Raw calculations before virtual dyno effects)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        backgroundColor: '#e3f2fd',\n        borderRadius: '8px',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: '#333',\n          marginBottom: '15px'\n        },\n        children: \"\\uD83C\\uDFAE How to Use Your Virtual Dyno:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          marginBottom: '15px',\n          paddingLeft: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Upload your real CSV datalog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), \" (AccessPort, Cobb, MHD, etc.)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Choose your vehicle and dyno type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), \" - Different dynos read differently\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Watch the live graph build your power curves\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), \" - Just like a real dyno!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"See peak values update in real-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this), \" - HP, Torque, and Boost prominently displayed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: '8px',\n            lineHeight: 1.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Compare virtual vs. backend results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this), \" - See how dyno conditions affect readings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83C\\uDFAF Custom Canvas Graph:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 12\n        }, this), \" Professional-grade live graphing with smooth animations, real-time peak tracking, and dyno-authentic experience!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualDyno, \"Rr4JOeVCZFz5eJGm6tOMGa49On0=\");\n_c = VirtualDyno;\nexport default VirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"VirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","VirtualDyno","_s","_dynoResults$peaks","_dynoResults$peaks2","_dynoResults$peaks3","_dynoResults$peaks4","_liveGraphData","_dynoResults$peaks5","_dynoResults$peaks6","_dynoResults$peaks7","_dynoResults$peaks8","_dynoTypes$dynoResult","_dynoResults$settings","_dynoResults$settings2","_dynoResults$settings3","_dynoResults$peaks9","_dynoResults$peaks0","_dynoResults$peaks1","_dynoResults$peaks10","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","liveGraphData","setLiveGraphData","currentPeaks","setCurrentPeaks","maxHP","maxTorque","maxBoost","currentHP","currentTorque","currentBoost","selectedCar","setSelectedCar","virtualDynoSettings","setVirtualDynoSettings","dynoType","temperature","humidity","altitude","fileInputRef","canvasRef","dynoTypes","mustang_md250","name","correction","variance","dynojet_248c","awd_dyno","current","length","canvas","ctx","getContext","width","height","fillStyle","fillRect","padding","graphWidth","graphHeight","maxRpm","Math","max","map","d","rpm","minRpm","min","horsepower","torque","maxPower","strokeStyle","lineWidth","ceil","x","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","toString","power","y","forEach","point","index","currentPoint","yHP","yTQ","arc","PI","fill","save","translate","rotate","restore","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csv","result","lines","split","headers","h","trim","data","slice","filter","line","values","row","header","_values$index","parseInt","maf","parseFloat","load","console","log","readAsText","sendToBackend","formData","FormData","append","response","fetch","method","body","ok","backendResults","json","error","status","statusText","runVirtualDyno","alert","_processedData$find","_processedData$find2","_backendResults$peaks","_backendResults$peaks2","_backendResults$peaks3","_backendResults$peaks4","detailResponse","id","detailData","processedData","dataPoints","dyno","tempCorrection","sqrt","humidityCorrection","altitudeCorrection","envCorrection","random","Rpm","hp","Horsepower","Torque","boost","Boost","massAirflow","MassAirflow","Load","backendHP","backendTorque","sort","a","b","i","prev","newData","round","delay","Promise","resolve","setTimeout","peaks","maxHPRpm","find","p","maxTorqueRpm","backendMaxHP","maxHorsepower","backendMaxTorque","backendMaxHPRpm","maxHorsepowerRpm","backendMaxTorqueRpm","settings","fileName","resetDyno","style","maxWidth","margin","fontFamily","children","color","marginBottom","_jsxFileName","lineNumber","columnNumber","backgroundColor","border","borderRadius","display","gridTemplateColumns","gap","type","accept","onChange","ref","onClick","_fileInputRef$current","click","cursor","fontSize","marginTop","borderBottom","paddingBottom","fontWeight","value","Object","entries","key","overflow","transition","disabled","marginRight","toFixed","lineHeight","paddingLeft","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/VirtualDyno.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\n// Enhanced Virtual Dyno with Custom Live Canvas Graph\r\nconst VirtualDyno = () => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [liveGraphData, setLiveGraphData] = useState([]);\r\n  const [currentPeaks, setCurrentPeaks] = useState({\r\n    maxHP: 0,\r\n    maxTorque: 0,\r\n    maxBoost: 0,\r\n    currentHP: 0,\r\n    currentTorque: 0,\r\n    currentBoost: 0\r\n  });\r\n  const [selectedCar, setSelectedCar] = useState('mazdaspeed3');\r\n  const [virtualDynoSettings, setVirtualDynoSettings] = useState({\r\n    dynoType: 'mustang_md250',\r\n    temperature: 75,\r\n    humidity: 45,\r\n    altitude: 500\r\n  });\r\n  const fileInputRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Dyno characteristics\r\n  const dynoTypes = {\r\n    mustang_md250: {\r\n      name: \"Mustang MD250 (Load Bearing)\",\r\n      correction: 1.0,\r\n      variance: 0.02\r\n    },\r\n    dynojet_248c: {\r\n      name: \"DynoJet 248C (Inertial)\", \r\n      correction: 1.15,\r\n      variance: 0.03\r\n    },\r\n    awd_dyno: {\r\n      name: \"AWD Dyno (All-Wheel)\",\r\n      correction: 0.95,\r\n      variance: 0.04\r\n    }\r\n  };\r\n\r\n  // Draw live graph on canvas\r\n  useEffect(() => {\r\n    if (!canvasRef.current || liveGraphData.length === 0) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const { width, height } = canvas;\r\n\r\n    // Clear canvas\r\n    ctx.fillStyle = '#1a1a1a';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Setup graph dimensions\r\n    const padding = 60;\r\n    const graphWidth = width - padding * 2;\r\n    const graphHeight = height - padding * 2;\r\n\r\n    // Find data ranges\r\n    const maxRpm = Math.max(...liveGraphData.map(d => d.rpm), 7000);\r\n    const minRpm = Math.min(...liveGraphData.map(d => d.rpm), 2000);\r\n    const maxHP = Math.max(...liveGraphData.map(d => d.horsepower), 100);\r\n    const maxTorque = Math.max(...liveGraphData.map(d => d.torque), 100);\r\n    const maxPower = Math.max(maxHP, maxTorque);\r\n\r\n    // Draw grid\r\n    ctx.strokeStyle = '#333';\r\n    ctx.lineWidth = 1;\r\n    \r\n    // Vertical grid lines (RPM)\r\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\r\n      const x = padding + ((rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, padding);\r\n      ctx.lineTo(x, height - padding);\r\n      ctx.stroke();\r\n      \r\n      // RPM labels\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(rpm.toString(), x, height - padding + 20);\r\n    }\r\n\r\n    // Horizontal grid lines (Power)\r\n    for (let power = 0; power <= maxPower; power += 50) {\r\n      const y = height - padding - (power / maxPower) * graphHeight;\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding, y);\r\n      ctx.lineTo(width - padding, y);\r\n      ctx.stroke();\r\n      \r\n      // Power labels\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'right';\r\n      ctx.fillText(power.toString(), padding - 10, y + 4);\r\n    }\r\n\r\n    // Draw axes\r\n    ctx.strokeStyle = '#666';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo(padding, padding);\r\n    ctx.lineTo(padding, height - padding);\r\n    ctx.lineTo(width - padding, height - padding);\r\n    ctx.stroke();\r\n\r\n    // Draw HP line (red)\r\n    if (liveGraphData.length > 1) {\r\n      ctx.strokeStyle = '#ff4444';\r\n      ctx.lineWidth = 3;\r\n      ctx.beginPath();\r\n      \r\n      liveGraphData.forEach((point, index) => {\r\n        const x = padding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - padding - (point.horsepower / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw Torque line (green)\r\n    if (liveGraphData.length > 1) {\r\n      ctx.strokeStyle = '#44ff44';\r\n      ctx.lineWidth = 3;\r\n      ctx.beginPath();\r\n      \r\n      liveGraphData.forEach((point, index) => {\r\n        const x = padding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - padding - (point.torque / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw current point indicator\r\n    if (isRunning && liveGraphData.length > 0) {\r\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\r\n      const x = padding + ((currentPoint.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      const yHP = height - padding - (currentPoint.horsepower / maxPower) * graphHeight;\r\n      const yTQ = height - padding - (currentPoint.torque / maxPower) * graphHeight;\r\n      \r\n      // HP indicator\r\n      ctx.fillStyle = '#ff4444';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yHP, 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      \r\n      // Torque indicator\r\n      ctx.fillStyle = '#44ff44';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yTQ, 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n\r\n    // Draw legend\r\n    ctx.fillStyle = '#ff4444';\r\n    ctx.font = 'bold 14px Arial';\r\n    ctx.textAlign = 'left';\r\n    ctx.fillText('■ Horsepower', width - 200, 30);\r\n    \r\n    ctx.fillStyle = '#44ff44';\r\n    ctx.fillText('■ Torque', width - 200, 50);\r\n\r\n    // Axis labels\r\n    ctx.fillStyle = '#ccc';\r\n    ctx.font = 'bold 16px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('RPM', width / 2, height - 10);\r\n    \r\n    ctx.save();\r\n    ctx.translate(20, height / 2);\r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.fillText('HP / TQ', 0, 0);\r\n    ctx.restore();\r\n\r\n  }, [liveGraphData, isRunning]);\r\n\r\n  // Parse uploaded CSV file\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setCsvFile(file);\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csv = e.target.result;\r\n      const lines = csv.split('\\n');\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      \r\n      const data = lines.slice(1)\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => {\r\n          const values = line.split(',');\r\n          const row = {};\r\n          headers.forEach((header, index) => {\r\n            row[header] = values[index]?.trim();\r\n          });\r\n          return row;\r\n        })\r\n        .filter(row => {\r\n          const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\r\n          const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\r\n          const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\r\n          \r\n          return rpm > 2000 && maf > 5 && load > 0.15;\r\n        });\r\n      \r\n      setCsvData(data);\r\n      console.log(`Loaded ${data.length} valid data points from CSV`);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Send to C# backend\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) return null;\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', selectedCar);\r\n      formData.append('Weight', '3200');\r\n      formData.append('Gear', '4');\r\n      formData.append('Notes', `Virtual dyno: ${virtualDynoSettings.dynoType}, ${virtualDynoSettings.temperature}°F`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      console.log('Sending CSV to C# backend...');\r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const backendResults = await response.json();\r\n        console.log('✅ C# Backend Results:', backendResults);\r\n        return backendResults;\r\n      } else {\r\n        console.error('Backend API error:', response.status, response.statusText);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to connect to C# backend:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Enhanced dyno run with live graphing\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n    \r\n    try {\r\n      // Get backend results\r\n      const backendResults = await sendToBackend();\r\n      \r\n      if (!backendResults) {\r\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      // Get detailed data points\r\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\r\n      \r\n      if (!detailResponse.ok) {\r\n        console.error('Failed to get detailed run data:', detailResponse.status);\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      const detailData = await detailResponse.json();\r\n      \r\n      // Process data with virtual dyno characteristics\r\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\r\n        const dyno = dynoTypes[virtualDynoSettings.dynoType];\r\n        \r\n        // Environmental effects\r\n        const tempCorrection = Math.sqrt(537.67 / (virtualDynoSettings.temperature + 459.67));\r\n        const humidityCorrection = 1 - (virtualDynoSettings.humidity / 100 * 0.047);\r\n        const altitudeCorrection = 1 - (virtualDynoSettings.altitude * 0.000035);\r\n        const envCorrection = tempCorrection * humidityCorrection * altitudeCorrection;\r\n        \r\n        // Dyno type correction and variance\r\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n        \r\n        return {\r\n          rpm: point.rpm || point.Rpm || 0,\r\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\r\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\r\n          boost: point.boost || point.Boost || 0,\r\n          maf: point.massAirflow || point.MassAirflow || 0,\r\n          load: point.load || point.Load || 0,\r\n          backendHP: point.horsepower || point.Horsepower || 0,\r\n          backendTorque: point.torque || point.Torque || 0\r\n        };\r\n      });\r\n      \r\n      // Sort by RPM for proper graph progression\r\n      processedData.sort((a, b) => a.rpm - b.rpm);\r\n      \r\n      // Animate the dyno run with live graph updates\r\n      for (let i = 0; i < processedData.length; i++) {\r\n        const currentPoint = processedData[i];\r\n        \r\n        // Update live graph data (add current point)\r\n        setLiveGraphData(prev => {\r\n          const newData = [...prev, {\r\n            rpm: currentPoint.rpm,\r\n            horsepower: Math.round(currentPoint.hp * 10) / 10,\r\n            torque: Math.round(currentPoint.torque * 10) / 10,\r\n            boost: Math.round(currentPoint.boost * 10) / 10\r\n          }];\r\n          \r\n          // Sort by RPM to ensure proper line drawing\r\n          return newData.sort((a, b) => a.rpm - b.rpm);\r\n        });\r\n        \r\n        // Update current peaks and live readings\r\n        setCurrentPeaks(prev => {\r\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\r\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\r\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\r\n          \r\n          return {\r\n            maxHP: Math.round(maxHP * 10) / 10,\r\n            maxTorque: Math.round(maxTorque * 10) / 10,\r\n            maxBoost: Math.round(maxBoost * 10) / 10,\r\n            currentHP: Math.round(currentPoint.hp * 10) / 10,\r\n            currentTorque: Math.round(currentPoint.torque * 10) / 10,\r\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\r\n          };\r\n        });\r\n        \r\n        setCurrentDataPoint(i);\r\n        \r\n        // Vary the delay based on RPM (faster at higher RPMs like a real dyno)\r\n        const delay = currentPoint.rpm < 3000 ? 200 : \r\n                     currentPoint.rpm < 4000 ? 150 : \r\n                     currentPoint.rpm < 5000 ? 120 : 100;\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n      \r\n      // Calculate final peaks\r\n      const peaks = {\r\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\r\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\r\n        maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))?.rpm || 0,\r\n        maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))?.rpm || 0,\r\n        backendMaxHP: backendResults.peaks?.maxHorsepower || 0,\r\n        backendMaxTorque: backendResults.peaks?.maxTorque || 0,\r\n        backendMaxHPRpm: backendResults.peaks?.maxHorsepowerRpm || 0,\r\n        backendMaxTorqueRpm: backendResults.peaks?.maxTorqueRpm || 0\r\n      };\r\n      \r\n      setDynoResults({\r\n        processedData,\r\n        peaks,\r\n        settings: virtualDynoSettings,\r\n        fileName: csvFile.name,\r\n        backendResults\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Error running virtual dyno:', error);\r\n      alert('Error connecting to backend API. Make sure your C# API is running.');\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Reset dyno\r\n  const resetDyno = () => {\r\n    setDynoResults(null);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px', maxWidth: '1400px', margin: '0 auto', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1 style={{ textAlign: 'center', color: '#333', marginBottom: '10px' }}>\r\n        🏁 Virtual Dyno Experience - Live Graphing\r\n      </h1>\r\n      \r\n      <div style={{\r\n        backgroundColor: '#d4edda',\r\n        border: '1px solid #c3e6cb',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        marginBottom: '20px',\r\n        textAlign: 'center'\r\n      }}>\r\n        <strong>⚙️ Make sure your C# backend is running:</strong> <code>cd VirtualDyno.API && dotnet run</code>\r\n      </div>\r\n      \r\n      {/* Main Grid Layout */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: isRunning || dynoResults ? '1fr 2fr' : '1fr 1fr 1fr',\r\n        gap: '20px',\r\n        marginBottom: '20px'\r\n      }}>\r\n        \r\n        {/* File Upload */}\r\n        <div style={{\r\n          border: csvFile ? '2px solid #28a745' : '2px dashed #007bff',\r\n          padding: '20px',\r\n          borderRadius: '8px',\r\n          textAlign: 'center',\r\n          backgroundColor: csvFile ? '#e8f5e8' : '#f8f9ff'\r\n        }}>\r\n          <h3 style={{ marginBottom: '15px', color: '#333' }}>📁 Upload Your Datalog</h3>\r\n          <input \r\n            type=\"file\" \r\n            accept=\".csv\"\r\n            onChange={handleFileUpload}\r\n            ref={fileInputRef}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <button \r\n            onClick={() => fileInputRef.current?.click()}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#007bff',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n              fontSize: '16px'\r\n            }}\r\n          >\r\n            {csvFile ? '✅ Change File' : '📂 Select CSV File'}\r\n          </button>\r\n          \r\n          {csvFile && (\r\n            <div style={{ marginTop: '10px', fontSize: '14px', color: '#666' }}>\r\n              <p><strong>File:</strong> {csvFile.name}</p>\r\n              <p><strong>Data Points:</strong> {csvData.length}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Settings Panel */}\r\n        {!isRunning && !dynoResults && (\r\n          <div style={{\r\n            border: '1px solid #ddd',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#f9f9f9'\r\n          }}>\r\n            <h3 style={{ marginBottom: '15px', color: '#333', borderBottom: '1px solid #ddd', paddingBottom: '5px' }}>\r\n              🚗 Vehicle & Dyno Settings\r\n            </h3>\r\n            \r\n            <label style={{ display: 'block', marginBottom: '5px', fontWeight: '500', color: '#555' }}>\r\n              Select Car:\r\n            </label>\r\n            <select \r\n              value={selectedCar}\r\n              onChange={(e) => {\r\n                setSelectedCar(e.target.value);\r\n                resetDyno();\r\n              }}\r\n              style={{\r\n                width: '100%',\r\n                margin: '5px 0 15px 0',\r\n                padding: '5px',\r\n                border: '1px solid #ddd',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              <option value=\"mazdaspeed3\">Mazdaspeed3</option>\r\n              <option value=\"wrx\">Subaru WRX</option>\r\n              <option value=\"gti\">VW GTI</option>\r\n              <option value=\"focus_st\">Ford Focus ST</option>\r\n            </select>\r\n\r\n            <label style={{ display: 'block', marginBottom: '5px', fontWeight: '500', color: '#555' }}>\r\n              Dyno Type:\r\n            </label>\r\n            <select \r\n              value={virtualDynoSettings.dynoType}\r\n              onChange={(e) => setVirtualDynoSettings(prev => ({\r\n                ...prev, dynoType: e.target.value\r\n              }))}\r\n              style={{\r\n                width: '100%',\r\n                margin: '5px 0 15px 0',\r\n                padding: '5px',\r\n                border: '1px solid #ddd',\r\n                borderRadius: '3px'\r\n              }}\r\n            >\r\n              {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n                <option key={key} value={key}>{dyno.name}</option>\r\n              ))}\r\n            </select>\r\n            \r\n            <label style={{ display: 'block', marginBottom: '5px', fontWeight: '500', color: '#555' }}>\r\n              Temperature: {virtualDynoSettings.temperature}°F\r\n            </label>\r\n            <input \r\n              type=\"range\" \r\n              min=\"50\" \r\n              max=\"110\" \r\n              value={virtualDynoSettings.temperature}\r\n              onChange={(e) => setVirtualDynoSettings(prev => ({\r\n                ...prev, temperature: parseInt(e.target.value)\r\n              }))}\r\n              style={{ width: '100%', margin: '5px 0 15px 0' }}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* Live Graph Area */}\r\n        {(isRunning || dynoResults) && (\r\n          <div style={{\r\n            border: '2px solid #28a745',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#f8fff8'\r\n          }}>\r\n            {/* Peak Stats Card */}\r\n            <div style={{\r\n              backgroundColor: '#1a1a1a',\r\n              color: 'white',\r\n              padding: '15px',\r\n              borderRadius: '8px',\r\n              marginBottom: '15px',\r\n              display: 'grid',\r\n              gridTemplateColumns: '1fr 1fr 1fr',\r\n              gap: '15px',\r\n              textAlign: 'center'\r\n            }}>\r\n              <div>\r\n                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#ff4444' }}>\r\n                  {isRunning ? currentPeaks.currentHP : (dynoResults?.peaks?.maxHP || 0)}\r\n                </div>\r\n                <div style={{ fontSize: '12px', color: '#ccc' }}>\r\n                  {isRunning ? 'CURRENT' : 'PEAK'} HP\r\n                </div>\r\n                {!isRunning && dynoResults && (\r\n                  <div style={{ fontSize: '10px', color: '#888' }}>\r\n                    @ {dynoResults.peaks?.maxHPRpm || 0} RPM\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div>\r\n                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#44ff44' }}>\r\n                  {isRunning ? currentPeaks.currentTorque : (dynoResults?.peaks?.maxTorque || 0)}\r\n                </div>\r\n                <div style={{ fontSize: '12px', color: '#ccc' }}>\r\n                  {isRunning ? 'CURRENT' : 'PEAK'} LB-FT\r\n                </div>\r\n                {!isRunning && dynoResults && (\r\n                  <div style={{ fontSize: '10px', color: '#888' }}>\r\n                    @ {dynoResults.peaks?.maxTorqueRpm || 0} RPM\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div>\r\n                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#4488ff' }}>\r\n                  {isRunning ? currentPeaks.maxBoost : (Math.max(...(liveGraphData.map(d => d.boost) || [0])))}\r\n                </div>\r\n                <div style={{ fontSize: '12px', color: '#ccc' }}>\r\n                  PEAK BOOST PSI\r\n                </div>\r\n                <div style={{ fontSize: '10px', color: '#888' }}>\r\n                  {isRunning ? 'LIVE' : 'RECORDED'}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Live Canvas Graph */}\r\n            <canvas\r\n              ref={canvasRef}\r\n              width={800}\r\n              height={400}\r\n              style={{\r\n                width: '100%',\r\n                height: '400px',\r\n                border: '1px solid #333',\r\n                borderRadius: '5px',\r\n                backgroundColor: '#1a1a1a'\r\n              }}\r\n            />\r\n\r\n            {isRunning && (\r\n              <div style={{ textAlign: 'center', marginTop: '15px' }}>\r\n                <div style={{\r\n                  backgroundColor: '#ffeb3b',\r\n                  padding: '10px',\r\n                  borderRadius: '5px',\r\n                  marginBottom: '10px'\r\n                }}>\r\n                  <div style={{ fontSize: '18px', fontWeight: 'bold' }}>\r\n                    {liveGraphData[liveGraphData.length - 1]?.rpm || 0} RPM\r\n                  </div>\r\n                  <div style={{ fontSize: '14px' }}>\r\n                    {currentPeaks.currentHP} HP | {currentPeaks.currentTorque} lb-ft | {currentPeaks.currentBoost} PSI\r\n                  </div>\r\n                </div>\r\n                \r\n                <div style={{\r\n                  width: '100%',\r\n                  height: '10px',\r\n                  backgroundColor: '#ddd',\r\n                  borderRadius: '5px',\r\n                  overflow: 'hidden'\r\n                }}>\r\n                  <div style={{\r\n                    height: '100%',\r\n                    backgroundColor: '#28a745',\r\n                    borderRadius: '5px',\r\n                    width: `${csvData.length > 0 ? (currentDataPoint / csvData.length) * 100 : 0}%`,\r\n                    transition: 'width 0.1s ease'\r\n                  }}></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Status/Results Panel */}\r\n        {!isRunning && !dynoResults && (\r\n          <div style={{\r\n            border: '2px solid #28a745',\r\n            padding: '15px',\r\n            borderRadius: '8px',\r\n            backgroundColor: '#f8fff8'\r\n          }}>\r\n            <h3 style={{ marginBottom: '15px', color: '#333' }}>Virtual Dyno</h3>\r\n            \r\n            {csvData.length > 0 ? (\r\n              <div style={{\r\n                backgroundColor: '#f8f9fa',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                textAlign: 'center',\r\n                fontSize: '14px'\r\n              }}>\r\n                <p><strong>Ready to Run!</strong></p>\r\n                <p>CSV loaded with {csvData.length} data points</p>\r\n                <p>Click \"START VIRTUAL DYNO\" to process with your C# backend</p>\r\n              </div>\r\n            ) : (\r\n              <div style={{\r\n                backgroundColor: '#f5f5f5',\r\n                padding: '15px',\r\n                borderRadius: '5px',\r\n                textAlign: 'center',\r\n                color: '#666'\r\n              }}>\r\n                <p>Upload a CSV file to get started</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Control Buttons */}\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button \r\n          onClick={runVirtualDyno}\r\n          disabled={!csvData.length || isRunning}\r\n          style={{\r\n            padding: '15px 30px',\r\n            backgroundColor: isRunning ? '#ccc' : '#dc3545',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '8px',\r\n            fontSize: '18px',\r\n            fontWeight: 'bold',\r\n            marginRight: '10px',\r\n            cursor: isRunning ? 'not-allowed' : 'pointer'\r\n          }}\r\n        >\r\n          {isRunning ? '🏃 PROCESSING...' : `🚀 START VIRTUAL DYNO`}\r\n        </button>\r\n        \r\n        {(dynoResults || liveGraphData.length > 0) && !isRunning && (\r\n          <button \r\n            onClick={resetDyno}\r\n            style={{\r\n              padding: '10px 20px',\r\n              backgroundColor: '#6c757d',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer'\r\n            }}\r\n          >\r\n            🔄 Reset\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Final Results */}\r\n      {dynoResults && !isRunning && (\r\n        <div style={{\r\n          padding: '20px',\r\n          backgroundColor: '#e3f2fd',\r\n          borderRadius: '8px',\r\n          marginTop: '20px'\r\n        }}>\r\n          <h4 style={{ color: '#333', marginBottom: '15px' }}>🏆 Final Dyno Results</h4>\r\n          \r\n          <div style={{\r\n            display: 'grid',\r\n            gridTemplateColumns: '1fr 1fr',\r\n            gap: '20px'\r\n          }}>\r\n            <div style={{\r\n              backgroundColor: '#e8f5e8',\r\n              padding: '15px',\r\n              borderRadius: '5px'\r\n            }}>\r\n              <h5>Virtual Dyno Results</h5>\r\n              <p><strong>{(dynoResults.peaks?.maxHP || 0).toFixed(1)} HP</strong> @ {dynoResults.peaks?.maxHPRpm || 'N/A'} RPM</p>\r\n              <p><strong>{(dynoResults.peaks?.maxTorque || 0).toFixed(1)} lb-ft</strong> @ {dynoResults.peaks?.maxTorqueRpm || 'N/A'} RPM</p>\r\n              <p style={{ fontSize: '12px', color: '#666', lineHeight: 1.4 }}>\r\n                Dyno: {dynoTypes[dynoResults.settings?.dynoType]?.name || 'Unknown'}<br/>\r\n                Conditions: {dynoResults.settings?.temperature || 'N/A'}°F, {dynoResults.settings?.humidity || 'N/A'}% humidity\r\n              </p>\r\n            </div>\r\n            \r\n            <div style={{\r\n              backgroundColor: '#e3f2fd',\r\n              padding: '15px',\r\n              borderRadius: '5px'\r\n            }}>\r\n              <h5>C# Backend Results</h5>\r\n              <p><strong>{(dynoResults.peaks?.backendMaxHP || 0).toFixed(1)} HP</strong> @ {dynoResults.peaks?.backendMaxHPRpm || 'N/A'} RPM</p>\r\n              <p><strong>{(dynoResults.peaks?.backendMaxTorque || 0).toFixed(1)} lb-ft</strong> @ {dynoResults.peaks?.backendMaxTorqueRpm || 'N/A'} RPM</p>\r\n              <p style={{ fontSize: '12px', color: '#666' }}>\r\n                <em>(Raw calculations before virtual dyno effects)</em>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Instructions */}\r\n      <div style={{\r\n        padding: '20px',\r\n        backgroundColor: '#e3f2fd',\r\n        borderRadius: '8px',\r\n        marginTop: '20px'\r\n      }}>\r\n        <h4 style={{ color: '#333', marginBottom: '15px' }}>🎮 How to Use Your Virtual Dyno:</h4>\r\n        <ol style={{ marginBottom: '15px', paddingLeft: '20px' }}>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Upload your real CSV datalog</strong> (AccessPort, Cobb, MHD, etc.)\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Choose your vehicle and dyno type</strong> - Different dynos read differently\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Watch the live graph build your power curves</strong> - Just like a real dyno!\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>See peak values update in real-time</strong> - HP, Torque, and Boost prominently displayed\r\n          </li>\r\n          <li style={{ marginBottom: '8px', lineHeight: 1.4 }}>\r\n            <strong>Compare virtual vs. backend results</strong> - See how dyno conditions affect readings\r\n          </li>\r\n        </ol>\r\n        \r\n        <p><strong>🎯 Custom Canvas Graph:</strong> Professional-grade live graphing with smooth animations, real-time peak tracking, and dyno-authentic experience!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualDyno;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}