{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\VirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\n\n// Clean Professional Virtual Dyno Interface\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VirtualDyno = () => {\n  _s();\n  var _dynoResults$peaks, _dynoResults$peaks2, _dynoResults$peaks3, _dynoResults$peaks4, _liveGraphData;\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [liveGraphData, setLiveGraphData] = useState([]);\n  const [currentPeaks, setCurrentPeaks] = useState({\n    maxHP: 0,\n    maxTorque: 0,\n    maxBoost: 0,\n    currentHP: 0,\n    currentTorque: 0,\n    currentBoost: 0\n  });\n\n  // Dyno Settings State\n  const [dynoSettings, setDynoSettings] = useState({\n    selectedCar: 'mazdaspeed3',\n    gear: 4,\n    dynoType: 'mustang_md250',\n    weight: 3200,\n    temperature: 75,\n    humidity: 45\n  });\n\n  // Post-run smoothing control\n  const [smoothingLevel, setSmoothingLevel] = useState(1);\n  const [smoothedData, setSmoothedData] = useState([]);\n  const fileInputRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Car options\n  const carOptions = [{\n    value: 'mazdaspeed3',\n    label: 'Mazdaspeed3'\n  }, {\n    value: 'wrx',\n    label: 'Subaru WRX'\n  }, {\n    value: 'sti',\n    label: 'Subaru STI'\n  }, {\n    value: 'evo',\n    label: 'Mitsubishi Evo'\n  }, {\n    value: 'gti',\n    label: 'VW Golf GTI'\n  }, {\n    value: 'focus_st',\n    label: 'Ford Focus ST'\n  }];\n\n  // Dyno types\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250\",\n      correction: 1.0,\n      variance: 0.02\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C\",\n      correction: 1.15,\n      variance: 0.03\n    },\n    awd_dyno: {\n      name: \"AWD Dyno\",\n      correction: 0.95,\n      variance: 0.04\n    }\n  };\n\n  // Smoothing options\n  const smoothingOptions = [{\n    value: 0,\n    label: 'Raw Data (0)'\n  }, {\n    value: 1,\n    label: 'Light (1)'\n  }, {\n    value: 2,\n    label: 'Moderate (2)'\n  }, {\n    value: 3,\n    label: 'Smooth (3)'\n  }, {\n    value: 4,\n    label: 'Heavy (4)'\n  }, {\n    value: 5,\n    label: 'Maximum (5)'\n  }];\n\n  // Draw graph on canvas\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const dataToDisplay = smoothedData.length > 0 ? smoothedData : liveGraphData;\n    if (dataToDisplay.length === 0) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      width,\n      height\n    } = canvas;\n\n    // Clear canvas\n    ctx.fillStyle = '#1a1a1a';\n    ctx.fillRect(0, 0, width, height);\n\n    // Setup graph dimensions\n    const padding = 60;\n    const graphWidth = width - padding * 2;\n    const graphHeight = height - padding * 2;\n\n    // Find data ranges\n    const maxRpm = Math.max(...dataToDisplay.map(d => d.rpm), 7000);\n    const minRpm = Math.min(...dataToDisplay.map(d => d.rpm), 2000);\n    const maxHP = Math.max(...dataToDisplay.map(d => d.horsepower), 100);\n    const maxTorque = Math.max(...dataToDisplay.map(d => d.torque), 100);\n    const maxPower = Math.max(maxHP, maxTorque);\n\n    // Draw grid\n    ctx.strokeStyle = '#333';\n    ctx.lineWidth = 1;\n\n    // Vertical grid lines (RPM)\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\n      const x = padding + (rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      ctx.beginPath();\n      ctx.moveTo(x, padding);\n      ctx.lineTo(x, height - padding);\n      ctx.stroke();\n\n      // RPM labels\n      ctx.fillStyle = '#666';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(rpm.toString(), x, height - padding + 20);\n    }\n\n    // Horizontal grid lines (Power)\n    for (let power = 0; power <= maxPower; power += 50) {\n      const y = height - padding - power / maxPower * graphHeight;\n      ctx.beginPath();\n      ctx.moveTo(padding, y);\n      ctx.lineTo(width - padding, y);\n      ctx.stroke();\n\n      // Power labels\n      ctx.fillStyle = '#666';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'right';\n      ctx.fillText(power.toString(), padding - 10, y + 4);\n    }\n\n    // Draw axes\n    ctx.strokeStyle = '#666';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(padding, height - padding);\n    ctx.lineTo(width - padding, height - padding);\n    ctx.stroke();\n\n    // Draw HP line (red)\n    if (dataToDisplay.length > 1) {\n      ctx.strokeStyle = '#ff4444';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      dataToDisplay.forEach((point, index) => {\n        const x = padding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - padding - point.horsepower / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw Torque line (green)\n    if (dataToDisplay.length > 1) {\n      ctx.strokeStyle = '#44ff44';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      dataToDisplay.forEach((point, index) => {\n        const x = padding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - padding - point.torque / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw current point indicator (only during live run)\n    if (isRunning && liveGraphData.length > 0) {\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\n      const x = padding + (currentPoint.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      const yHP = height - padding - currentPoint.horsepower / maxPower * graphHeight;\n      const yTQ = height - padding - currentPoint.torque / maxPower * graphHeight;\n\n      // HP indicator\n      ctx.fillStyle = '#ff4444';\n      ctx.beginPath();\n      ctx.arc(x, yHP, 5, 0, 2 * Math.PI);\n      ctx.fill();\n\n      // Torque indicator\n      ctx.fillStyle = '#44ff44';\n      ctx.beginPath();\n      ctx.arc(x, yTQ, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    // Draw legend\n    ctx.fillStyle = '#ff4444';\n    ctx.font = 'bold 14px Arial';\n    ctx.textAlign = 'left';\n    ctx.fillText('■ Horsepower', width - 200, 30);\n    ctx.fillStyle = '#44ff44';\n    ctx.fillText('■ Torque', width - 200, 50);\n\n    // Axis labels\n    ctx.fillStyle = '#ccc';\n    ctx.font = 'bold 16px Arial';\n    ctx.textAlign = 'center';\n    ctx.fillText('RPM', width / 2, height - 10);\n    ctx.save();\n    ctx.translate(20, height / 2);\n    ctx.rotate(-Math.PI / 2);\n    ctx.fillText('HP / TQ', 0, 0);\n    ctx.restore();\n  }, [liveGraphData, smoothedData, isRunning]);\n\n  // Handle smoothing change\n  const handleSmoothingChange = async newLevel => {\n    if (!dynoResults || !dynoResults.processedData) return;\n    setSmoothingLevel(newLevel);\n    if (newLevel === 0) {\n      // Raw data\n      setSmoothedData(dynoResults.processedData.map(d => ({\n        rpm: d.rpm,\n        horsepower: d.hp,\n        torque: d.torque,\n        boost: d.boost\n      })));\n    } else {\n      // Apply smoothing via backend\n      try {\n        const response = await fetch(`http://localhost:5038/api/dyno/runs/${dynoResults.backendResults.id}/smooth/${newLevel}`);\n        if (response.ok) {\n          const smoothed = await response.json();\n          setSmoothedData(smoothed.map(d => ({\n            rpm: d.rpm,\n            horsepower: d.horsepower,\n            torque: d.torque,\n            boost: d.boost\n          })));\n        }\n      } catch (error) {\n        console.error('Error applying smoothing:', error);\n      }\n    }\n  };\n\n  // Parse uploaded CSV file\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setCsvFile(file);\n    setDynoResults(null);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    const reader = new FileReader();\n    reader.onload = e => {\n      const csv = e.target.result;\n      const lines = csv.split('\\n');\n      const headers = lines[0].split(',').map(h => h.trim());\n      const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n        const values = line.split(',');\n        const row = {};\n        headers.forEach((header, index) => {\n          var _values$index;\n          row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n        });\n        return row;\n      }).filter(row => {\n        const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\n        const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\n        const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\n        return rpm > 2000 && maf > 5 && load > 0.15;\n      });\n      setCsvData(data);\n      console.log(`Loaded ${data.length} valid data points from CSV`);\n    };\n    reader.readAsText(file);\n  };\n\n  // Send to C# backend\n  const sendToBackend = async () => {\n    if (!csvFile) return null;\n    try {\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', dynoSettings.selectedCar);\n      formData.append('Weight', dynoSettings.weight.toString());\n      formData.append('Gear', dynoSettings.gear.toString());\n      formData.append('Notes', `${dynoSettings.dynoType}, ${dynoSettings.temperature}°F`);\n      formData.append('IsPublic', 'false');\n      console.log('Sending CSV to C# backend...');\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const backendResults = await response.json();\n        console.log('✅ C# Backend Results:', backendResults);\n        return backendResults;\n      } else {\n        console.error('Backend API error:', response.status, response.statusText);\n        return null;\n      }\n    } catch (error) {\n      console.error('Failed to connect to C# backend:', error);\n      return null;\n    }\n  };\n\n  // Run virtual dyno\n  const runVirtualDyno = async () => {\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n    try {\n      var _processedData$find, _processedData$find2, _backendResults$peaks, _backendResults$peaks2, _backendResults$peaks3, _backendResults$peaks4;\n      // Get backend results\n      const backendResults = await sendToBackend();\n      if (!backendResults) {\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\n        setIsRunning(false);\n        return;\n      }\n\n      // Get detailed data points\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\n      if (!detailResponse.ok) {\n        console.error('Failed to get detailed run data:', detailResponse.status);\n        setIsRunning(false);\n        return;\n      }\n      const detailData = await detailResponse.json();\n\n      // Process data with virtual dyno characteristics\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\n        const dyno = dynoTypes[dynoSettings.dynoType];\n\n        // Environmental effects\n        const tempCorrection = Math.sqrt(537.67 / (dynoSettings.temperature + 459.67));\n        const humidityCorrection = 1 - dynoSettings.humidity / 100 * 0.047;\n        const envCorrection = tempCorrection * humidityCorrection;\n\n        // Dyno type correction and variance\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n        return {\n          rpm: point.rpm || point.Rpm || 0,\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\n          boost: point.boost || point.Boost || 0,\n          maf: point.massAirflow || point.MassAirflow || 0,\n          load: point.load || point.Load || 0,\n          backendHP: point.horsepower || point.Horsepower || 0,\n          backendTorque: point.torque || point.Torque || 0\n        };\n      });\n\n      // Sort by RPM for proper graph progression\n      processedData.sort((a, b) => a.rpm - b.rpm);\n\n      // Animate the dyno run with live graph updates\n      for (let i = 0; i < processedData.length; i++) {\n        const currentPoint = processedData[i];\n\n        // Update live graph data (add current point)\n        setLiveGraphData(prev => {\n          const newData = [...prev, {\n            rpm: currentPoint.rpm,\n            horsepower: Math.round(currentPoint.hp * 10) / 10,\n            torque: Math.round(currentPoint.torque * 10) / 10,\n            boost: Math.round(currentPoint.boost * 10) / 10\n          }];\n          return newData.sort((a, b) => a.rpm - b.rpm);\n        });\n\n        // Update current peaks and live readings\n        setCurrentPeaks(prev => {\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\n          return {\n            maxHP: Math.round(maxHP * 10) / 10,\n            maxTorque: Math.round(maxTorque * 10) / 10,\n            maxBoost: Math.round(maxBoost * 10) / 10,\n            currentHP: Math.round(currentPoint.hp * 10) / 10,\n            currentTorque: Math.round(currentPoint.torque * 10) / 10,\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\n          };\n        });\n        setCurrentDataPoint(i);\n\n        // Vary the delay based on RPM\n        const delay = currentPoint.rpm < 3000 ? 200 : currentPoint.rpm < 4000 ? 150 : currentPoint.rpm < 5000 ? 120 : 100;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      // Calculate final peaks\n      const peaks = {\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\n        maxHPRpm: ((_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm) || 0,\n        maxTorqueRpm: ((_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm) || 0,\n        backendMaxHP: ((_backendResults$peaks = backendResults.peaks) === null || _backendResults$peaks === void 0 ? void 0 : _backendResults$peaks.maxHorsepower) || 0,\n        backendMaxTorque: ((_backendResults$peaks2 = backendResults.peaks) === null || _backendResults$peaks2 === void 0 ? void 0 : _backendResults$peaks2.maxTorque) || 0,\n        backendMaxHPRpm: ((_backendResults$peaks3 = backendResults.peaks) === null || _backendResults$peaks3 === void 0 ? void 0 : _backendResults$peaks3.maxHorsepowerRpm) || 0,\n        backendMaxTorqueRpm: ((_backendResults$peaks4 = backendResults.peaks) === null || _backendResults$peaks4 === void 0 ? void 0 : _backendResults$peaks4.maxTorqueRpm) || 0\n      };\n      setDynoResults({\n        processedData,\n        peaks,\n        settings: dynoSettings,\n        fileName: csvFile.name,\n        backendResults\n      });\n\n      // Set initial smoothing level to 1\n      setSmoothingLevel(1);\n    } catch (error) {\n      console.error('Error running virtual dyno:', error);\n      alert('Error connecting to backend API. Make sure your C# API is running.');\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Reset dyno\n  const resetDyno = () => {\n    setDynoResults(null);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    setSmoothingLevel(1);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n  };\n  const inputStyle = {\n    width: '100%',\n    padding: '8px 12px',\n    border: '1px solid #ddd',\n    borderRadius: '4px',\n    fontSize: '14px',\n    backgroundColor: '#fff'\n  };\n  const labelStyle = {\n    display: 'block',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: '#333',\n    marginBottom: '6px'\n  };\n  const sectionStyle = {\n    marginBottom: '20px',\n    padding: '15px',\n    backgroundColor: '#f8f9fa',\n    borderRadius: '6px',\n    border: '1px solid #e9ecef'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      backgroundColor: '#f5f6fa',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#2c3e50',\n        color: 'white',\n        padding: '20px 0',\n        textAlign: 'center',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          fontSize: '28px',\n          fontWeight: '700',\n          letterSpacing: '-0.5px'\n        },\n        children: \"\\uD83C\\uDFC1 Virtual Dyno Pro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '8px 0 0 0',\n          fontSize: '16px',\n          opacity: 0.9,\n          fontWeight: '400'\n        },\n        children: \"Professional Dyno Analysis & Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#d1ecf1',\n        border: '1px solid #bee5eb',\n        padding: '12px 20px',\n        textAlign: 'center',\n        fontSize: '14px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\u2699\\uFE0F Backend Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this), \" Make sure your C# API is running: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"cd VirtualDyno.API && dotnet run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 79\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '380px 1fr',\n        height: 'calc(100vh - 140px)',\n        gap: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          borderRight: '1px solid #e9ecef',\n          padding: '24px',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              marginBottom: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                flex: 1\n              },\n              children: \"\\uD83D\\uDCC1 Upload Datalog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              style: {\n                padding: '8px 16px',\n                backgroundColor: csvFile ? '#28a745' : '#007bff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500'\n              },\n              children: csvFile ? '✅ Change' : '📂 Select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: handleFileUpload,\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 13\n          }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '13px',\n              color: '#666',\n              backgroundColor: '#f8f9fa',\n              padding: '8px',\n              borderRadius: '4px',\n              wordBreak: 'break-all'\n            },\n            children: [\"\\uD83D\\uDCC4 \", csvFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 16px 0',\n              fontSize: '16px',\n              color: '#2c3e50'\n            },\n            children: \"\\uD83D\\uDE97 Vehicle Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                minWidth: '80px'\n              },\n              children: \"Car:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dynoSettings.selectedCar,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                selectedCar: e.target.value\n              })),\n              style: {\n                ...inputStyle,\n                flex: 1\n              },\n              children: carOptions.map(car => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: car.value,\n                children: car.label\n              }, car.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              children: \"Gear Used:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '8px'\n              },\n              children: [3, 4, 5].map(gear => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setDynoSettings(prev => ({\n                  ...prev,\n                  gear\n                })),\n                style: {\n                  flex: 1,\n                  padding: '10px',\n                  border: dynoSettings.gear === gear ? '2px solid #007bff' : '1px solid #ddd',\n                  borderRadius: '4px',\n                  backgroundColor: dynoSettings.gear === gear ? '#e3f2fd' : 'white',\n                  cursor: 'pointer',\n                  fontSize: '14px',\n                  fontWeight: dynoSettings.gear === gear ? '600' : '400'\n                },\n                children: [gear, \"rd\"]\n              }, gear, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              children: \"Vehicle Weight (lbs):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: dynoSettings.weight,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                weight: parseInt(e.target.value) || 0\n              })),\n              style: inputStyle,\n              min: \"1000\",\n              max: \"10000\",\n              step: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 652,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 16px 0',\n              fontSize: '16px',\n              color: '#2c3e50'\n            },\n            children: \"\\u2699\\uFE0F Dyno Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                minWidth: '80px'\n              },\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dynoSettings.dynoType,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                dynoType: e.target.value\n              })),\n              style: {\n                ...inputStyle,\n                flex: 1\n              },\n              children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: dyno.name\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 16px 0',\n              fontSize: '16px',\n              color: '#2c3e50'\n            },\n            children: \"\\uD83C\\uDF21\\uFE0F Environmental\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              children: [\"Temperature: \", dynoSettings.temperature, \"\\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"50\",\n              max: \"110\",\n              value: dynoSettings.temperature,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                temperature: parseInt(e.target.value)\n              })),\n              style: {\n                width: '100%',\n                margin: '4px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"50\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"110\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: labelStyle,\n              children: [\"Humidity: \", dynoSettings.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"10\",\n              max: \"90\",\n              value: dynoSettings.humidity,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                humidity: parseInt(e.target.value)\n              })),\n              style: {\n                width: '100%',\n                margin: '4px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                fontSize: '12px',\n                color: '#666'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"10%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"90%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: runVirtualDyno,\n          disabled: !csvData.length || isRunning,\n          style: {\n            width: '100%',\n            padding: '16px',\n            backgroundColor: isRunning ? '#6c757d' : '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            fontSize: '16px',\n            fontWeight: '700',\n            cursor: isRunning ? 'not-allowed' : 'pointer',\n            transition: 'all 0.2s ease',\n            boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\n          },\n          children: isRunning ? '🏃 PROCESSING...' : '🚀 START VIRTUAL DYNO'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '24px',\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              margin: 0,\n              fontSize: '20px',\n              color: '#2c3e50',\n              fontWeight: '600'\n            },\n            children: \"\\uD83D\\uDCCA Dyno Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this), dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontSize: '14px',\n                color: '#666',\n                fontWeight: '500'\n              },\n              children: \"Smoothing:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: smoothingLevel,\n              onChange: e => handleSmoothingChange(parseInt(e.target.value)),\n              style: {\n                padding: '6px 12px',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                fontSize: '14px'\n              },\n              children: smoothingOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, option.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetDyno,\n              style: {\n                padding: '6px 12px',\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '14px'\n              },\n              children: \"\\uD83D\\uDD04 Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 11\n        }, this), isRunning || dynoResults ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#1a1a1a',\n              color: 'white',\n              padding: '20px',\n              borderRadius: '8px',\n              marginBottom: '20px',\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr 1fr',\n              gap: '20px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '28px',\n                  fontWeight: 'bold',\n                  color: '#ff4444'\n                },\n                children: isRunning ? currentPeaks.currentHP : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks = dynoResults.peaks) === null || _dynoResults$peaks === void 0 ? void 0 : _dynoResults$peaks.maxHP) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#ccc',\n                  marginBottom: '4px'\n                },\n                children: [isRunning ? 'CURRENT' : 'PEAK', \" HP\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 19\n              }, this), !isRunning && dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '10px',\n                  color: '#888'\n                },\n                children: [\"@ \", ((_dynoResults$peaks2 = dynoResults.peaks) === null || _dynoResults$peaks2 === void 0 ? void 0 : _dynoResults$peaks2.maxHPRpm) || 0, \" RPM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '28px',\n                  fontWeight: 'bold',\n                  color: '#44ff44'\n                },\n                children: isRunning ? currentPeaks.currentTorque : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks3 = dynoResults.peaks) === null || _dynoResults$peaks3 === void 0 ? void 0 : _dynoResults$peaks3.maxTorque) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#ccc',\n                  marginBottom: '4px'\n                },\n                children: [isRunning ? 'CURRENT' : 'PEAK', \" LB-FT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 19\n              }, this), !isRunning && dynoResults && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '10px',\n                  color: '#888'\n                },\n                children: [\"@ \", ((_dynoResults$peaks4 = dynoResults.peaks) === null || _dynoResults$peaks4 === void 0 ? void 0 : _dynoResults$peaks4.maxTorqueRpm) || 0, \" RPM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '28px',\n                  fontWeight: 'bold',\n                  color: '#4488ff'\n                },\n                children: isRunning ? currentPeaks.maxBoost : Math.max(...(liveGraphData.map(d => d.boost) || [0])) || (smoothedData.length > 0 ? Math.max(...smoothedData.map(d => d.boost)) : 0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#ccc',\n                  marginBottom: '4px'\n                },\n                children: \"PEAK BOOST PSI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '10px',\n                  color: '#888'\n                },\n                children: isRunning ? 'LIVE' : 'RECORDED'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              minHeight: '400px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              width: 1000,\n              height: 500,\n              style: {\n                width: '100%',\n                height: '100%',\n                border: '1px solid #ddd',\n                borderRadius: '6px',\n                backgroundColor: '#1a1a1a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              marginTop: '16px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: '#fff3cd',\n                padding: '12px',\n                borderRadius: '6px',\n                marginBottom: '12px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '18px',\n                  fontWeight: 'bold',\n                  color: '#856404'\n                },\n                children: [((_liveGraphData = liveGraphData[liveGraphData.length - 1]) === null || _liveGraphData === void 0 ? void 0 : _liveGraphData.rpm) || 0, \" RPM\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 888,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '14px',\n                  color: '#856404'\n                },\n                children: [currentPeaks.currentHP, \" HP | \", currentPeaks.currentTorque, \" lb-ft | \", currentPeaks.currentBoost, \" PSI\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 891,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '100%',\n                height: '8px',\n                backgroundColor: '#e9ecef',\n                borderRadius: '4px',\n                overflow: 'hidden'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  height: '100%',\n                  backgroundColor: '#28a745',\n                  borderRadius: '4px',\n                  width: `${csvData.length > 0 ? currentDataPoint / csvData.length * 100 : 0}%`,\n                  transition: 'width 0.1s ease'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#f8f9fa',\n            borderRadius: '8px',\n            border: '2px dashed #dee2e6'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              color: '#6c757d'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '48px',\n                marginBottom: '16px'\n              },\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: '0 0 8px 0',\n                fontSize: '18px'\n              },\n              children: \"Ready for Dyno Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: 0,\n                fontSize: '14px'\n              },\n              children: \"Upload a datalog file and configure your settings to begin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 930,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 924,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualDyno, \"P9v33qkdLgR1reoahzRP8X16X+I=\");\n_c = VirtualDyno;\nexport default VirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"VirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","VirtualDyno","_s","_dynoResults$peaks","_dynoResults$peaks2","_dynoResults$peaks3","_dynoResults$peaks4","_liveGraphData","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","liveGraphData","setLiveGraphData","currentPeaks","setCurrentPeaks","maxHP","maxTorque","maxBoost","currentHP","currentTorque","currentBoost","dynoSettings","setDynoSettings","selectedCar","gear","dynoType","weight","temperature","humidity","smoothingLevel","setSmoothingLevel","smoothedData","setSmoothedData","fileInputRef","canvasRef","carOptions","value","label","dynoTypes","mustang_md250","name","correction","variance","dynojet_248c","awd_dyno","smoothingOptions","current","dataToDisplay","length","canvas","ctx","getContext","width","height","fillStyle","fillRect","padding","graphWidth","graphHeight","maxRpm","Math","max","map","d","rpm","minRpm","min","horsepower","torque","maxPower","strokeStyle","lineWidth","ceil","x","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","toString","power","y","forEach","point","index","currentPoint","yHP","yTQ","arc","PI","fill","save","translate","rotate","restore","handleSmoothingChange","newLevel","processedData","hp","boost","response","fetch","backendResults","id","ok","smoothed","json","error","console","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","csv","result","lines","split","headers","h","trim","data","slice","filter","line","values","row","header","_values$index","parseInt","maf","parseFloat","load","log","readAsText","sendToBackend","formData","FormData","append","method","body","status","statusText","runVirtualDyno","alert","_processedData$find","_processedData$find2","_backendResults$peaks","_backendResults$peaks2","_backendResults$peaks3","_backendResults$peaks4","detailResponse","detailData","dataPoints","dyno","tempCorrection","sqrt","humidityCorrection","envCorrection","random","Rpm","Horsepower","Torque","Boost","massAirflow","MassAirflow","Load","backendHP","backendTorque","sort","a","b","i","prev","newData","round","delay","Promise","resolve","setTimeout","peaks","maxHPRpm","find","p","maxTorqueRpm","backendMaxHP","maxHorsepower","backendMaxTorque","backendMaxHPRpm","maxHorsepowerRpm","backendMaxTorqueRpm","settings","fileName","resetDyno","inputStyle","border","borderRadius","fontSize","backgroundColor","labelStyle","display","fontWeight","color","marginBottom","sectionStyle","style","minHeight","fontFamily","children","boxShadow","margin","letterSpacing","_jsxFileName","lineNumber","columnNumber","opacity","gridTemplateColumns","gap","borderRight","overflowY","alignItems","flex","onClick","_fileInputRef$current","click","cursor","type","accept","onChange","ref","wordBreak","minWidth","car","step","Object","entries","key","justifyContent","disabled","transition","flexDirection","option","marginTop","overflow","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/VirtualDyno.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\n// Clean Professional Virtual Dyno Interface\r\nconst VirtualDyno = () => {\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [liveGraphData, setLiveGraphData] = useState([]);\r\n  const [currentPeaks, setCurrentPeaks] = useState({\r\n    maxHP: 0,\r\n    maxTorque: 0,\r\n    maxBoost: 0,\r\n    currentHP: 0,\r\n    currentTorque: 0,\r\n    currentBoost: 0\r\n  });\r\n  \r\n  // Dyno Settings State\r\n  const [dynoSettings, setDynoSettings] = useState({\r\n    selectedCar: 'mazdaspeed3',\r\n    gear: 4,\r\n    dynoType: 'mustang_md250',\r\n    weight: 3200,\r\n    temperature: 75,\r\n    humidity: 45\r\n  });\r\n\r\n  // Post-run smoothing control\r\n  const [smoothingLevel, setSmoothingLevel] = useState(1);\r\n  const [smoothedData, setSmoothedData] = useState([]);\r\n\r\n  const fileInputRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Car options\r\n  const carOptions = [\r\n    { value: 'mazdaspeed3', label: 'Mazdaspeed3' },\r\n    { value: 'wrx', label: 'Subaru WRX' },\r\n    { value: 'sti', label: 'Subaru STI' },\r\n    { value: 'evo', label: 'Mitsubishi Evo' },\r\n    { value: 'gti', label: 'VW Golf GTI' },\r\n    { value: 'focus_st', label: 'Ford Focus ST' }\r\n  ];\r\n\r\n  // Dyno types\r\n  const dynoTypes = {\r\n    mustang_md250: { name: \"Mustang MD250\", correction: 1.0, variance: 0.02 },\r\n    dynojet_248c: { name: \"DynoJet 248C\", correction: 1.15, variance: 0.03 },\r\n    awd_dyno: { name: \"AWD Dyno\", correction: 0.95, variance: 0.04 }\r\n  };\r\n\r\n  // Smoothing options\r\n  const smoothingOptions = [\r\n    { value: 0, label: 'Raw Data (0)' },\r\n    { value: 1, label: 'Light (1)' },\r\n    { value: 2, label: 'Moderate (2)' },\r\n    { value: 3, label: 'Smooth (3)' },\r\n    { value: 4, label: 'Heavy (4)' },\r\n    { value: 5, label: 'Maximum (5)' }\r\n  ];\r\n\r\n  // Draw graph on canvas\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    const dataToDisplay = smoothedData.length > 0 ? smoothedData : liveGraphData;\r\n    if (dataToDisplay.length === 0) return;\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const { width, height } = canvas;\r\n\r\n    // Clear canvas\r\n    ctx.fillStyle = '#1a1a1a';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Setup graph dimensions\r\n    const padding = 60;\r\n    const graphWidth = width - padding * 2;\r\n    const graphHeight = height - padding * 2;\r\n\r\n    // Find data ranges\r\n    const maxRpm = Math.max(...dataToDisplay.map(d => d.rpm), 7000);\r\n    const minRpm = Math.min(...dataToDisplay.map(d => d.rpm), 2000);\r\n    const maxHP = Math.max(...dataToDisplay.map(d => d.horsepower), 100);\r\n    const maxTorque = Math.max(...dataToDisplay.map(d => d.torque), 100);\r\n    const maxPower = Math.max(maxHP, maxTorque);\r\n\r\n    // Draw grid\r\n    ctx.strokeStyle = '#333';\r\n    ctx.lineWidth = 1;\r\n    \r\n    // Vertical grid lines (RPM)\r\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\r\n      const x = padding + ((rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, padding);\r\n      ctx.lineTo(x, height - padding);\r\n      ctx.stroke();\r\n      \r\n      // RPM labels\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(rpm.toString(), x, height - padding + 20);\r\n    }\r\n\r\n    // Horizontal grid lines (Power)\r\n    for (let power = 0; power <= maxPower; power += 50) {\r\n      const y = height - padding - (power / maxPower) * graphHeight;\r\n      ctx.beginPath();\r\n      ctx.moveTo(padding, y);\r\n      ctx.lineTo(width - padding, y);\r\n      ctx.stroke();\r\n      \r\n      // Power labels\r\n      ctx.fillStyle = '#666';\r\n      ctx.font = '12px Arial';\r\n      ctx.textAlign = 'right';\r\n      ctx.fillText(power.toString(), padding - 10, y + 4);\r\n    }\r\n\r\n    // Draw axes\r\n    ctx.strokeStyle = '#666';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo(padding, padding);\r\n    ctx.lineTo(padding, height - padding);\r\n    ctx.lineTo(width - padding, height - padding);\r\n    ctx.stroke();\r\n\r\n    // Draw HP line (red)\r\n    if (dataToDisplay.length > 1) {\r\n      ctx.strokeStyle = '#ff4444';\r\n      ctx.lineWidth = 3;\r\n      ctx.beginPath();\r\n      \r\n      dataToDisplay.forEach((point, index) => {\r\n        const x = padding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - padding - (point.horsepower / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw Torque line (green)\r\n    if (dataToDisplay.length > 1) {\r\n      ctx.strokeStyle = '#44ff44';\r\n      ctx.lineWidth = 3;\r\n      ctx.beginPath();\r\n      \r\n      dataToDisplay.forEach((point, index) => {\r\n        const x = padding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - padding - (point.torque / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw current point indicator (only during live run)\r\n    if (isRunning && liveGraphData.length > 0) {\r\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\r\n      const x = padding + ((currentPoint.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      const yHP = height - padding - (currentPoint.horsepower / maxPower) * graphHeight;\r\n      const yTQ = height - padding - (currentPoint.torque / maxPower) * graphHeight;\r\n      \r\n      // HP indicator\r\n      ctx.fillStyle = '#ff4444';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yHP, 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      \r\n      // Torque indicator\r\n      ctx.fillStyle = '#44ff44';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yTQ, 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n\r\n    // Draw legend\r\n    ctx.fillStyle = '#ff4444';\r\n    ctx.font = 'bold 14px Arial';\r\n    ctx.textAlign = 'left';\r\n    ctx.fillText('■ Horsepower', width - 200, 30);\r\n    \r\n    ctx.fillStyle = '#44ff44';\r\n    ctx.fillText('■ Torque', width - 200, 50);\r\n\r\n    // Axis labels\r\n    ctx.fillStyle = '#ccc';\r\n    ctx.font = 'bold 16px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('RPM', width / 2, height - 10);\r\n    \r\n    ctx.save();\r\n    ctx.translate(20, height / 2);\r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.fillText('HP / TQ', 0, 0);\r\n    ctx.restore();\r\n\r\n  }, [liveGraphData, smoothedData, isRunning]);\r\n\r\n  // Handle smoothing change\r\n  const handleSmoothingChange = async (newLevel) => {\r\n    if (!dynoResults || !dynoResults.processedData) return;\r\n    \r\n    setSmoothingLevel(newLevel);\r\n    \r\n    if (newLevel === 0) {\r\n      // Raw data\r\n      setSmoothedData(dynoResults.processedData.map(d => ({\r\n        rpm: d.rpm,\r\n        horsepower: d.hp,\r\n        torque: d.torque,\r\n        boost: d.boost\r\n      })));\r\n    } else {\r\n      // Apply smoothing via backend\r\n      try {\r\n        const response = await fetch(`http://localhost:5038/api/dyno/runs/${dynoResults.backendResults.id}/smooth/${newLevel}`);\r\n        if (response.ok) {\r\n          const smoothed = await response.json();\r\n          setSmoothedData(smoothed.map(d => ({\r\n            rpm: d.rpm,\r\n            horsepower: d.horsepower,\r\n            torque: d.torque,\r\n            boost: d.boost\r\n          })));\r\n        }\r\n      } catch (error) {\r\n        console.error('Error applying smoothing:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Parse uploaded CSV file\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    setCsvFile(file);\r\n    setDynoResults(null);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    \r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const csv = e.target.result;\r\n      const lines = csv.split('\\n');\r\n      const headers = lines[0].split(',').map(h => h.trim());\r\n      \r\n      const data = lines.slice(1)\r\n        .filter(line => line.trim().length > 0)\r\n        .map(line => {\r\n          const values = line.split(',');\r\n          const row = {};\r\n          headers.forEach((header, index) => {\r\n            row[header] = values[index]?.trim();\r\n          });\r\n          return row;\r\n        })\r\n        .filter(row => {\r\n          const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed']);\r\n          const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow']);\r\n          const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load']);\r\n          \r\n          return rpm > 2000 && maf > 5 && load > 0.15;\r\n        });\r\n      \r\n      setCsvData(data);\r\n      console.log(`Loaded ${data.length} valid data points from CSV`);\r\n    };\r\n    \r\n    reader.readAsText(file);\r\n  };\r\n\r\n  // Send to C# backend\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) return null;\r\n    \r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', dynoSettings.selectedCar);\r\n      formData.append('Weight', dynoSettings.weight.toString());\r\n      formData.append('Gear', dynoSettings.gear.toString());\r\n      formData.append('Notes', `${dynoSettings.dynoType}, ${dynoSettings.temperature}°F`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      console.log('Sending CSV to C# backend...');\r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n      });\r\n      \r\n      if (response.ok) {\r\n        const backendResults = await response.json();\r\n        console.log('✅ C# Backend Results:', backendResults);\r\n        return backendResults;\r\n      } else {\r\n        console.error('Backend API error:', response.status, response.statusText);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to connect to C# backend:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Run virtual dyno\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n    \r\n    try {\r\n      // Get backend results\r\n      const backendResults = await sendToBackend();\r\n      \r\n      if (!backendResults) {\r\n        alert('Could not connect to backend API. Make sure your C# API is running on localhost:5038');\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      // Get detailed data points\r\n      const detailResponse = await fetch(`http://localhost:5038/api/dyno/runs/${backendResults.id}`);\r\n      \r\n      if (!detailResponse.ok) {\r\n        console.error('Failed to get detailed run data:', detailResponse.status);\r\n        setIsRunning(false);\r\n        return;\r\n      }\r\n      \r\n      const detailData = await detailResponse.json();\r\n      \r\n      // Process data with virtual dyno characteristics\r\n      const processedData = (detailData.dataPoints || []).map((point, index) => {\r\n        const dyno = dynoTypes[dynoSettings.dynoType];\r\n        \r\n        // Environmental effects\r\n        const tempCorrection = Math.sqrt(537.67 / (dynoSettings.temperature + 459.67));\r\n        const humidityCorrection = 1 - (dynoSettings.humidity / 100 * 0.047);\r\n        const envCorrection = tempCorrection * humidityCorrection;\r\n        \r\n        // Dyno type correction and variance\r\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n        \r\n        return {\r\n          rpm: point.rpm || point.Rpm || 0,\r\n          hp: (point.horsepower || point.Horsepower || 0) * envCorrection * dyno.correction * variance,\r\n          torque: (point.torque || point.Torque || 0) * envCorrection * variance,\r\n          boost: point.boost || point.Boost || 0,\r\n          maf: point.massAirflow || point.MassAirflow || 0,\r\n          load: point.load || point.Load || 0,\r\n          backendHP: point.horsepower || point.Horsepower || 0,\r\n          backendTorque: point.torque || point.Torque || 0\r\n        };\r\n      });\r\n      \r\n      // Sort by RPM for proper graph progression\r\n      processedData.sort((a, b) => a.rpm - b.rpm);\r\n      \r\n      // Animate the dyno run with live graph updates\r\n      for (let i = 0; i < processedData.length; i++) {\r\n        const currentPoint = processedData[i];\r\n        \r\n        // Update live graph data (add current point)\r\n        setLiveGraphData(prev => {\r\n          const newData = [...prev, {\r\n            rpm: currentPoint.rpm,\r\n            horsepower: Math.round(currentPoint.hp * 10) / 10,\r\n            torque: Math.round(currentPoint.torque * 10) / 10,\r\n            boost: Math.round(currentPoint.boost * 10) / 10\r\n          }];\r\n          \r\n          return newData.sort((a, b) => a.rpm - b.rpm);\r\n        });\r\n        \r\n        // Update current peaks and live readings\r\n        setCurrentPeaks(prev => {\r\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\r\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\r\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\r\n          \r\n          return {\r\n            maxHP: Math.round(maxHP * 10) / 10,\r\n            maxTorque: Math.round(maxTorque * 10) / 10,\r\n            maxBoost: Math.round(maxBoost * 10) / 10,\r\n            currentHP: Math.round(currentPoint.hp * 10) / 10,\r\n            currentTorque: Math.round(currentPoint.torque * 10) / 10,\r\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\r\n          };\r\n        });\r\n        \r\n        setCurrentDataPoint(i);\r\n        \r\n        // Vary the delay based on RPM\r\n        const delay = currentPoint.rpm < 3000 ? 200 : \r\n                     currentPoint.rpm < 4000 ? 150 : \r\n                     currentPoint.rpm < 5000 ? 120 : 100;\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n      \r\n      // Calculate final peaks\r\n      const peaks = {\r\n        maxHP: processedData.length > 0 ? Math.max(...processedData.map(d => d.hp || 0)) : 0,\r\n        maxTorque: processedData.length > 0 ? Math.max(...processedData.map(d => d.torque || 0)) : 0,\r\n        maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp || 0)))?.rpm || 0,\r\n        maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque || 0)))?.rpm || 0,\r\n        backendMaxHP: backendResults.peaks?.maxHorsepower || 0,\r\n        backendMaxTorque: backendResults.peaks?.maxTorque || 0,\r\n        backendMaxHPRpm: backendResults.peaks?.maxHorsepowerRpm || 0,\r\n        backendMaxTorqueRpm: backendResults.peaks?.maxTorqueRpm || 0\r\n      };\r\n      \r\n      setDynoResults({\r\n        processedData,\r\n        peaks,\r\n        settings: dynoSettings,\r\n        fileName: csvFile.name,\r\n        backendResults\r\n      });\r\n      \r\n      // Set initial smoothing level to 1\r\n      setSmoothingLevel(1);\r\n      \r\n    } catch (error) {\r\n      console.error('Error running virtual dyno:', error);\r\n      alert('Error connecting to backend API. Make sure your C# API is running.');\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Reset dyno\r\n  const resetDyno = () => {\r\n    setDynoResults(null);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    setSmoothingLevel(1);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n  };\r\n\r\n  const inputStyle = {\r\n    width: '100%',\r\n    padding: '8px 12px',\r\n    border: '1px solid #ddd',\r\n    borderRadius: '4px',\r\n    fontSize: '14px',\r\n    backgroundColor: '#fff'\r\n  };\r\n\r\n  const labelStyle = {\r\n    display: 'block',\r\n    fontSize: '14px',\r\n    fontWeight: '600',\r\n    color: '#333',\r\n    marginBottom: '6px'\r\n  };\r\n\r\n  const sectionStyle = {\r\n    marginBottom: '20px',\r\n    padding: '15px',\r\n    backgroundColor: '#f8f9fa',\r\n    borderRadius: '6px',\r\n    border: '1px solid #e9ecef'\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      minHeight: '100vh',\r\n      backgroundColor: '#f5f6fa',\r\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\r\n    }}>\r\n      {/* Header */}\r\n      <div style={{\r\n        backgroundColor: '#2c3e50',\r\n        color: 'white',\r\n        padding: '20px 0',\r\n        textAlign: 'center',\r\n        boxShadow: '0 2px 10px rgba(0,0,0,0.1)'\r\n      }}>\r\n        <h1 style={{ \r\n          margin: 0, \r\n          fontSize: '28px', \r\n          fontWeight: '700',\r\n          letterSpacing: '-0.5px'\r\n        }}>\r\n          🏁 Virtual Dyno Pro\r\n        </h1>\r\n        <p style={{ \r\n          margin: '8px 0 0 0', \r\n          fontSize: '16px', \r\n          opacity: 0.9,\r\n          fontWeight: '400'\r\n        }}>\r\n          Professional Dyno Analysis & Simulation\r\n        </p>\r\n      </div>\r\n\r\n      {/* Backend Status */}\r\n      <div style={{\r\n        backgroundColor: '#d1ecf1',\r\n        border: '1px solid #bee5eb',\r\n        padding: '12px 20px',\r\n        textAlign: 'center',\r\n        fontSize: '14px'\r\n      }}>\r\n        <strong>⚙️ Backend Status:</strong> Make sure your C# API is running: <code>cd VirtualDyno.API && dotnet run</code>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '380px 1fr',\r\n        height: 'calc(100vh - 140px)',\r\n        gap: '0'\r\n      }}>\r\n        \r\n        {/* Left Panel - Settings */}\r\n        <div style={{\r\n          backgroundColor: 'white',\r\n          borderRight: '1px solid #e9ecef',\r\n          padding: '24px',\r\n          overflowY: 'auto'\r\n        }}>\r\n          \r\n          {/* File Upload Section */}\r\n          <div style={sectionStyle}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '12px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, flex: 1 }}>📁 Upload Datalog</label>\r\n              <button \r\n                onClick={() => fileInputRef.current?.click()}\r\n                style={{\r\n                  padding: '8px 16px',\r\n                  backgroundColor: csvFile ? '#28a745' : '#007bff',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '14px',\r\n                  fontWeight: '500'\r\n                }}\r\n              >\r\n                {csvFile ? '✅ Change' : '📂 Select'}\r\n              </button>\r\n              <input \r\n                type=\"file\" \r\n                accept=\".csv\"\r\n                onChange={handleFileUpload}\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </div>\r\n            \r\n            {csvFile && (\r\n              <div style={{\r\n                fontSize: '13px',\r\n                color: '#666',\r\n                backgroundColor: '#f8f9fa',\r\n                padding: '8px',\r\n                borderRadius: '4px',\r\n                wordBreak: 'break-all'\r\n              }}>\r\n                📄 {csvFile.name}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Vehicle Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 16px 0', fontSize: '16px', color: '#2c3e50' }}>🚗 Vehicle Setup</h3>\r\n            \r\n            {/* Car Selection */}\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '16px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, minWidth: '80px' }}>Car:</label>\r\n              <select \r\n                value={dynoSettings.selectedCar}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, selectedCar: e.target.value }))}\r\n                style={{ ...inputStyle, flex: 1 }}\r\n              >\r\n                {carOptions.map(car => (\r\n                  <option key={car.value} value={car.value}>{car.label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            {/* Gear Selection */}\r\n            <div style={{ marginBottom: '16px' }}>\r\n              <label style={labelStyle}>Gear Used:</label>\r\n              <div style={{ display: 'flex', gap: '8px' }}>\r\n                {[3, 4, 5].map(gear => (\r\n                  <button\r\n                    key={gear}\r\n                    onClick={() => setDynoSettings(prev => ({ ...prev, gear }))}\r\n                    style={{\r\n                      flex: 1,\r\n                      padding: '10px',\r\n                      border: dynoSettings.gear === gear ? '2px solid #007bff' : '1px solid #ddd',\r\n                      borderRadius: '4px',\r\n                      backgroundColor: dynoSettings.gear === gear ? '#e3f2fd' : 'white',\r\n                      cursor: 'pointer',\r\n                      fontSize: '14px',\r\n                      fontWeight: dynoSettings.gear === gear ? '600' : '400'\r\n                    }}\r\n                  >\r\n                    {gear}rd\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Weight */}\r\n            <div style={{ marginBottom: '16px' }}>\r\n              <label style={labelStyle}>Vehicle Weight (lbs):</label>\r\n              <input\r\n                type=\"number\"\r\n                value={dynoSettings.weight}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, weight: parseInt(e.target.value) || 0 }))}\r\n                style={inputStyle}\r\n                min=\"1000\"\r\n                max=\"10000\"\r\n                step=\"50\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dyno Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 16px 0', fontSize: '16px', color: '#2c3e50' }}>⚙️ Dyno Configuration</h3>\r\n            \r\n            {/* Dyno Type */}\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '16px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, minWidth: '80px' }}>Type:</label>\r\n              <select \r\n                value={dynoSettings.dynoType}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, dynoType: e.target.value }))}\r\n                style={{ ...inputStyle, flex: 1 }}\r\n              >\r\n                {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n                  <option key={key} value={key}>{dyno.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Environmental Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 16px 0', fontSize: '16px', color: '#2c3e50' }}>🌡️ Environmental</h3>\r\n            \r\n            {/* Temperature */}\r\n            <div style={{ marginBottom: '16px' }}>\r\n              <label style={labelStyle}>Temperature: {dynoSettings.temperature}°F</label>\r\n              <input \r\n                type=\"range\" \r\n                min=\"50\" \r\n                max=\"110\" \r\n                value={dynoSettings.temperature}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, temperature: parseInt(e.target.value) }))}\r\n                style={{ width: '100%', margin: '4px 0' }}\r\n              />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '12px', color: '#666' }}>\r\n                <span>50°F</span><span>110°F</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Humidity */}\r\n            <div style={{ marginBottom: '16px' }}>\r\n              <label style={labelStyle}>Humidity: {dynoSettings.humidity}%</label>\r\n              <input \r\n                type=\"range\" \r\n                min=\"10\" \r\n                max=\"90\" \r\n                value={dynoSettings.humidity}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, humidity: parseInt(e.target.value) }))}\r\n                style={{ width: '100%', margin: '4px 0' }}\r\n              />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '12px', color: '#666' }}>\r\n                <span>10%</span><span>90%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Run Button */}\r\n          <button \r\n            onClick={runVirtualDyno}\r\n            disabled={!csvData.length || isRunning}\r\n            style={{\r\n              width: '100%',\r\n              padding: '16px',\r\n              backgroundColor: isRunning ? '#6c757d' : '#dc3545',\r\n              color: 'white',\r\n              border: 'none',\r\n              borderRadius: '6px',\r\n              fontSize: '16px',\r\n              fontWeight: '700',\r\n              cursor: isRunning ? 'not-allowed' : 'pointer',\r\n              transition: 'all 0.2s ease',\r\n              boxShadow: '0 2px 4px rgba(0,0,0,0.1)'\r\n            }}\r\n          >\r\n            {isRunning ? '🏃 PROCESSING...' : '🚀 START VIRTUAL DYNO'}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Right Panel - Graph */}\r\n        <div style={{\r\n          backgroundColor: 'white',\r\n          padding: '24px',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}>\r\n          \r\n          {/* Graph Header */}\r\n          <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            marginBottom: '20px'\r\n          }}>\r\n            <h2 style={{\r\n              margin: 0,\r\n              fontSize: '20px',\r\n              color: '#2c3e50',\r\n              fontWeight: '600'\r\n            }}>\r\n              📊 Dyno Chart\r\n            </h2>\r\n\r\n            {/* Smoothing Control - Only show after run */}\r\n            {dynoResults && !isRunning && (\r\n              <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n                <label style={{ fontSize: '14px', color: '#666', fontWeight: '500' }}>\r\n                  Smoothing:\r\n                </label>\r\n                <select\r\n                  value={smoothingLevel}\r\n                  onChange={(e) => handleSmoothingChange(parseInt(e.target.value))}\r\n                  style={{\r\n                    padding: '6px 12px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px',\r\n                    fontSize: '14px'\r\n                  }}\r\n                >\r\n                  {smoothingOptions.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n                \r\n                <button \r\n                  onClick={resetDyno}\r\n                  style={{\r\n                    padding: '6px 12px',\r\n                    backgroundColor: '#6c757d',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                    fontSize: '14px'\r\n                  }}\r\n                >\r\n                  🔄 Reset\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Stats Cards or Placeholder */}\r\n          {(isRunning || dynoResults) ? (\r\n            <>\r\n              {/* Peak Stats Card */}\r\n              <div style={{\r\n                backgroundColor: '#1a1a1a',\r\n                color: 'white',\r\n                padding: '20px',\r\n                borderRadius: '8px',\r\n                marginBottom: '20px',\r\n                display: 'grid',\r\n                gridTemplateColumns: '1fr 1fr 1fr',\r\n                gap: '20px',\r\n                textAlign: 'center'\r\n              }}>\r\n                <div>\r\n                  <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#ff4444' }}>\r\n                    {isRunning ? currentPeaks.currentHP : (dynoResults?.peaks?.maxHP || 0)}\r\n                  </div>\r\n                  <div style={{ fontSize: '12px', color: '#ccc', marginBottom: '4px' }}>\r\n                    {isRunning ? 'CURRENT' : 'PEAK'} HP\r\n                  </div>\r\n                  {!isRunning && dynoResults && (\r\n                    <div style={{ fontSize: '10px', color: '#888' }}>\r\n                      @ {dynoResults.peaks?.maxHPRpm || 0} RPM\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div>\r\n                  <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#44ff44' }}>\r\n                    {isRunning ? currentPeaks.currentTorque : (dynoResults?.peaks?.maxTorque || 0)}\r\n                  </div>\r\n                  <div style={{ fontSize: '12px', color: '#ccc', marginBottom: '4px' }}>\r\n                    {isRunning ? 'CURRENT' : 'PEAK'} LB-FT\r\n                  </div>\r\n                  {!isRunning && dynoResults && (\r\n                    <div style={{ fontSize: '10px', color: '#888' }}>\r\n                      @ {dynoResults.peaks?.maxTorqueRpm || 0} RPM\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <div>\r\n                  <div style={{ fontSize: '28px', fontWeight: 'bold', color: '#4488ff' }}>\r\n                    {isRunning ? currentPeaks.maxBoost : (Math.max(...(liveGraphData.map(d => d.boost) || [0])) || (smoothedData.length > 0 ? Math.max(...smoothedData.map(d => d.boost)) : 0))}\r\n                  </div>\r\n                  <div style={{ fontSize: '12px', color: '#ccc', marginBottom: '4px' }}>\r\n                    PEAK BOOST PSI\r\n                  </div>\r\n                  <div style={{ fontSize: '10px', color: '#888' }}>\r\n                    {isRunning ? 'LIVE' : 'RECORDED'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Canvas Graph */}\r\n              <div style={{ flex: 1, minHeight: '400px' }}>\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  width={1000}\r\n                  height={500}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '6px',\r\n                    backgroundColor: '#1a1a1a'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              {/* Live Status */}\r\n              {isRunning && (\r\n                <div style={{ textAlign: 'center', marginTop: '16px' }}>\r\n                  <div style={{\r\n                    backgroundColor: '#fff3cd',\r\n                    padding: '12px',\r\n                    borderRadius: '6px',\r\n                    marginBottom: '12px'\r\n                  }}>\r\n                    <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#856404' }}>\r\n                      {liveGraphData[liveGraphData.length - 1]?.rpm || 0} RPM\r\n                    </div>\r\n                    <div style={{ fontSize: '14px', color: '#856404' }}>\r\n                      {currentPeaks.currentHP} HP | {currentPeaks.currentTorque} lb-ft | {currentPeaks.currentBoost} PSI\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div style={{\r\n                    width: '100%',\r\n                    height: '8px',\r\n                    backgroundColor: '#e9ecef',\r\n                    borderRadius: '4px',\r\n                    overflow: 'hidden'\r\n                  }}>\r\n                    <div style={{\r\n                      height: '100%',\r\n                      backgroundColor: '#28a745',\r\n                      borderRadius: '4px',\r\n                      width: `${csvData.length > 0 ? (currentDataPoint / csvData.length) * 100 : 0}%`,\r\n                      transition: 'width 0.1s ease'\r\n                    }}></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </>\r\n          ) : (\r\n            <div style={{\r\n              flex: 1,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: '#f8f9fa',\r\n              borderRadius: '8px',\r\n              border: '2px dashed #dee2e6'\r\n            }}>\r\n              <div style={{\r\n                textAlign: 'center',\r\n                color: '#6c757d'\r\n              }}>\r\n                <div style={{ fontSize: '48px', marginBottom: '16px' }}>📊</div>\r\n                <h3 style={{ margin: '0 0 8px 0', fontSize: '18px' }}>Ready for Dyno Run</h3>\r\n                <p style={{ margin: 0, fontSize: '14px' }}>\r\n                  Upload a datalog file and configure your settings to begin\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualDyno;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}