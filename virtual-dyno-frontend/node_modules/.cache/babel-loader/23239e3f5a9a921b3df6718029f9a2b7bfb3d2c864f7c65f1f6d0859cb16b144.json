{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tyler\\\\OneDrive\\\\Desktop\\\\VirtualDyno\\\\virtual-dyno-frontend\\\\src\\\\VirtualDyno.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualDyno = () => {\n  _s();\n  var _debugInfo$errors, _dynoResults$peaks2, _dynoResults$peaks4;\n  // Core state\n  const [csvFile, setCsvFile] = useState(null);\n  const [csvData, setCsvData] = useState([]);\n  const [dynoResults, setDynoResults] = useState(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\n  const [liveGraphData, setLiveGraphData] = useState([]);\n\n  // Live stats during run\n  const [currentPeaks, setCurrentPeaks] = useState({\n    maxHP: 0,\n    maxTorque: 0,\n    maxBoost: 0,\n    currentHP: 0,\n    currentTorque: 0,\n    currentBoost: 0\n  });\n\n  // Dyno settings\n  const [dynoSettings, setDynoSettings] = useState({\n    selectedCar: 'mazdaspeed3',\n    gear: 4,\n    dynoType: 'mustang_md250',\n    weight: 3200,\n    temperature: 75,\n    humidity: 45\n  });\n\n  // Smoothing state\n  const [smoothingLevel, setSmoothingLevel] = useState(0);\n  const [smoothedData, setSmoothedData] = useState([]);\n  const [smoothedPeaks, setSmoothedPeaks] = useState(null);\n\n  // Debug state\n  const [debugInfo, setDebugInfo] = useState({\n    lastSmoothingCall: null,\n    apiResponse: null,\n    dataProcessing: null,\n    errors: []\n  });\n\n  // Refs\n  const fileInputRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Configuration data\n  const carOptions = [{\n    value: 'mazdaspeed3',\n    label: 'Mazdaspeed3'\n  }, {\n    value: 'wrx',\n    label: 'Subaru WRX'\n  }, {\n    value: 'sti',\n    label: 'Subaru STI'\n  }, {\n    value: 'evo',\n    label: 'Mitsubishi Evo'\n  }, {\n    value: 'gti',\n    label: 'VW Golf GTI'\n  }, {\n    value: 'focus_st',\n    label: 'Ford Focus ST'\n  }];\n  const dynoTypes = {\n    mustang_md250: {\n      name: \"Mustang MD250\",\n      correction: 1.0,\n      variance: 0.02\n    },\n    dynojet_248c: {\n      name: \"DynoJet 248C\",\n      correction: 1.15,\n      variance: 0.03\n    },\n    awd_dyno: {\n      name: \"AWD Dyno\",\n      correction: 0.95,\n      variance: 0.04\n    }\n  };\n  const smoothingOptions = [{\n    value: 0,\n    label: 'Raw Data (0)'\n  }, {\n    value: 1,\n    label: 'Light (1)'\n  }, {\n    value: 2,\n    label: 'Moderate (2)'\n  }, {\n    value: 3,\n    label: 'Smooth (3)'\n  }, {\n    value: 4,\n    label: 'Heavy (4)'\n  }, {\n    value: 5,\n    label: 'Maximum (5)'\n  }];\n\n  // Helper functions\n  const calculatePeaksFromData = data => {\n    if (!data || data.length === 0) return null;\n    const maxHP = Math.max(...data.map(d => d.horsepower));\n    const maxTorque = Math.max(...data.map(d => d.torque));\n    const maxBoost = Math.max(...data.map(d => d.boost));\n    const maxHPPoint = data.find(d => d.horsepower === maxHP);\n    const maxTorquePoint = data.find(d => d.torque === maxTorque);\n    return {\n      maxHP,\n      maxTorque,\n      maxBoost,\n      maxHPRpm: (maxHPPoint === null || maxHPPoint === void 0 ? void 0 : maxHPPoint.rpm) || 0,\n      maxTorqueRpm: (maxTorquePoint === null || maxTorquePoint === void 0 ? void 0 : maxTorquePoint.rpm) || 0\n    };\n  };\n  const addError = error => {\n    console.error('🚨 VirtualDyno Error:', error);\n    setDebugInfo(prev => ({\n      ...prev,\n      errors: [...prev.errors.slice(-4), {\n        // Keep last 5 errors\n        timestamp: new Date().toLocaleTimeString(),\n        message: error.toString(),\n        stack: error.stack\n      }]\n    }));\n  };\n\n  // File upload handler\n  const handleFileUpload = event => {\n    try {\n      const file = event.target.files[0];\n      if (!file) return;\n      console.log('📂 File selected:', file.name, `(${(file.size / 1024).toFixed(1)} KB)`);\n      setCsvFile(file);\n      setDynoResults(null);\n      setLiveGraphData([]);\n      setSmoothedData([]);\n      setSmoothingLevel(0);\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const csv = e.target.result;\n          const lines = csv.split('\\n');\n          const headers = lines[0].split(',').map(h => h.trim());\n          console.log('📄 CSV headers found:', headers);\n          const data = lines.slice(1).filter(line => line.trim().length > 0).map(line => {\n            const values = line.split(',');\n            const row = {};\n            headers.forEach((header, index) => {\n              var _values$index;\n              row[header] = (_values$index = values[index]) === null || _values$index === void 0 ? void 0 : _values$index.trim();\n            });\n            return row;\n          }).filter(row => {\n            const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed'] || 0);\n            const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow'] || 0);\n            const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load'] || 0);\n\n            // More lenient filtering for broader compatibility\n            return rpm > 1500 && (maf > 3 || load > 0.10);\n          });\n          setCsvData(data);\n          console.log(`✅ Loaded ${data.length} valid data points from CSV`);\n        } catch (error) {\n          addError(new Error(`CSV parsing failed: ${error.message}`));\n          alert('Error parsing CSV file. Please check the file format.');\n        }\n      };\n      reader.onerror = () => {\n        addError(new Error('File reading failed'));\n        alert('Error reading file.');\n      };\n      reader.readAsText(file);\n    } catch (error) {\n      addError(error);\n      alert('Error handling file upload.');\n    }\n  };\n\n  // Fixed backend communication\n  const sendToBackend = async () => {\n    if (!csvFile) {\n      throw new Error('No CSV file selected');\n    }\n    try {\n      console.log('🚀 Sending data to backend...');\n      const formData = new FormData();\n      formData.append('File', csvFile);\n      formData.append('CarPresetKey', dynoSettings.selectedCar);\n      formData.append('Weight', dynoSettings.weight.toString());\n      formData.append('Gear', dynoSettings.gear.toString());\n      formData.append('Notes', `${dynoSettings.dynoType}, ${dynoSettings.temperature}°F, ${dynoSettings.humidity}% humidity`);\n      formData.append('IsPublic', 'false');\n      console.log('📤 FormData contents:', {\n        file: csvFile.name,\n        carPresetKey: dynoSettings.selectedCar,\n        weight: dynoSettings.weight,\n        gear: dynoSettings.gear\n      });\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\n        method: 'POST',\n        body: formData\n        // Don't set Content-Type header - let browser set it with boundary\n      });\n      console.log('📨 Backend response status:', response.status, response.statusText);\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Backend API error (${response.status}): ${errorText}`);\n      }\n      const backendResults = await response.json();\n      console.log('✅ Backend results received:', backendResults);\n      return backendResults;\n    } catch (error) {\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\n        throw new Error('Cannot connect to backend API. Make sure your C# API is running on localhost:5038');\n      }\n      throw error;\n    }\n  };\n\n  // Get detailed run data from backend\n  const getDetailedRunData = async runId => {\n    try {\n      var _detailData$dataPoint;\n      console.log(`📊 Fetching detailed data for run ${runId}...`);\n      const response = await fetch(`http://localhost:5038/api/dyno/runs/${runId}`);\n      if (!response.ok) {\n        throw new Error(`Failed to get detailed run data: ${response.status} ${response.statusText}`);\n      }\n      const detailData = await response.json();\n      console.log(`✅ Got ${((_detailData$dataPoint = detailData.dataPoints) === null || _detailData$dataPoint === void 0 ? void 0 : _detailData$dataPoint.length) || 0} detailed data points`);\n      return detailData;\n    } catch (error) {\n      throw new Error(`Error fetching detailed data: ${error.message}`);\n    }\n  };\n\n  // Smoothing handler\n  const handleSmoothingChange = async newLevel => {\n    if (!dynoResults || !dynoResults.processedData) {\n      console.warn('⚠️ No dyno results available for smoothing');\n      return;\n    }\n    const debugStart = Date.now();\n    console.log(`🔧 Applying smoothing level ${newLevel}...`);\n    setDebugInfo(prev => ({\n      ...prev,\n      lastSmoothingCall: {\n        level: newLevel,\n        timestamp: new Date().toLocaleTimeString()\n      }\n    }));\n    setSmoothingLevel(newLevel);\n    try {\n      if (newLevel === 0) {\n        // Raw data - use original processed data\n        const dataToProcess = dynoResults.processedData.map(d => ({\n          rpm: d.rpm,\n          horsepower: Math.round(d.hp),\n          torque: Math.round(d.torque),\n          boost: Math.round(d.boost * 10) / 10\n        }));\n        console.log(`📊 Using raw data: ${dataToProcess.length} points`);\n        setSmoothedData(dataToProcess);\n        const rawPeaks = calculatePeaksFromData(dataToProcess);\n        setSmoothedPeaks(rawPeaks);\n        setDebugInfo(prev => ({\n          ...prev,\n          dataProcessing: {\n            source: 'raw',\n            points: dataToProcess.length,\n            peaks: rawPeaks,\n            processingTime: Date.now() - debugStart\n          }\n        }));\n      } else {\n        // Apply smoothing via backend API\n        const apiUrl = `http://localhost:5038/api/dyno/runs/${dynoResults.backendResults.id}/smooth/${newLevel}`;\n        console.log(`🌐 Fetching smoothed data: ${apiUrl}`);\n        const response = await fetch(apiUrl);\n        setDebugInfo(prev => ({\n          ...prev,\n          apiResponse: {\n            url: apiUrl,\n            status: response.status,\n            ok: response.ok,\n            timestamp: new Date().toLocaleTimeString()\n          }\n        }));\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Smoothing API error (${response.status}): ${errorText}`);\n        }\n        const smoothed = await response.json();\n        console.log(`✅ Received ${smoothed.length} smoothed points`);\n        const dataToProcess = smoothed.map(d => ({\n          rpm: d.rpm,\n          horsepower: Math.round(d.horsepower),\n          torque: Math.round(d.torque),\n          boost: Math.round(d.boost * 10) / 10\n        }));\n        setSmoothedData(dataToProcess);\n        const smoothedPeaksCalc = calculatePeaksFromData(dataToProcess);\n        setSmoothedPeaks(smoothedPeaksCalc);\n\n        // Calculate changes from original\n        const originalPeaks = dynoResults.peaks;\n        const changes = {\n          hp: smoothedPeaksCalc.maxHP - originalPeaks.maxHP,\n          tq: smoothedPeaksCalc.maxTorque - originalPeaks.maxTorque,\n          boost: smoothedPeaksCalc.maxBoost - (originalPeaks.maxBoost || 0)\n        };\n        setDebugInfo(prev => ({\n          ...prev,\n          dataProcessing: {\n            source: 'smoothed',\n            points: dataToProcess.length,\n            peaks: smoothedPeaksCalc,\n            processingTime: Date.now() - debugStart,\n            changes\n          }\n        }));\n        console.log(`🏁 Smoothing results for level ${newLevel}:`);\n        console.log(`  HP: ${originalPeaks.maxHP} → ${smoothedPeaksCalc.maxHP} (${changes.hp >= 0 ? '+' : ''}${changes.hp})`);\n        console.log(`  TQ: ${originalPeaks.maxTorque} → ${smoothedPeaksCalc.maxTorque} (${changes.tq >= 0 ? '+' : ''}${changes.tq})`);\n        console.log(`  Boost: ${originalPeaks.maxBoost || 0} → ${smoothedPeaksCalc.maxBoost} (should be same)`);\n      }\n    } catch (error) {\n      addError(error);\n      alert(`Error applying smoothing: ${error.message}`);\n    }\n  };\n\n  // Main dyno run function\n  const runVirtualDyno = async () => {\n    if (!csvData.length) {\n      alert('Please upload a CSV file first!');\n      return;\n    }\n    console.log('🏁 Starting virtual dyno run...');\n\n    // Reset state\n    setIsRunning(true);\n    setCurrentDataPoint(0);\n    setLiveGraphData([]);\n    setSmoothedData([]);\n    setSmoothingLevel(0);\n    setCurrentPeaks({\n      maxHP: 0,\n      maxTorque: 0,\n      maxBoost: 0,\n      currentHP: 0,\n      currentTorque: 0,\n      currentBoost: 0\n    });\n    try {\n      var _processedData$find, _processedData$find2;\n      // Step 1: Send data to backend\n      const backendResults = await sendToBackend();\n\n      // Step 2: Get detailed data points\n      const detailData = await getDetailedRunData(backendResults.id);\n\n      // Step 3: Process data with virtual dyno characteristics\n      const dyno = dynoTypes[dynoSettings.dynoType];\n      const tempCorrection = Math.sqrt(537.67 / (dynoSettings.temperature + 459.67));\n      const humidityCorrection = 1 - dynoSettings.humidity / 100 * 0.047;\n      const envCorrection = tempCorrection * humidityCorrection;\n      const processedData = (detailData.dataPoints || []).map(point => {\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\n        return {\n          rpm: point.rpm,\n          hp: point.horsepower * envCorrection * dyno.correction * variance,\n          torque: point.torque * envCorrection * variance,\n          boost: point.boost,\n          maf: point.massAirflow || 0,\n          load: point.load || 0\n        };\n      });\n\n      // Sort by RPM for proper animation\n      processedData.sort((a, b) => a.rpm - b.rpm);\n      console.log(`🎬 Starting animation with ${processedData.length} points`);\n\n      // Step 4: Animate the dyno run\n      for (let i = 0; i < processedData.length; i++) {\n        const currentPoint = processedData[i];\n\n        // Add point to live graph\n        setLiveGraphData(prev => {\n          const newData = [...prev, {\n            rpm: currentPoint.rpm,\n            horsepower: Math.round(currentPoint.hp),\n            torque: Math.round(currentPoint.torque),\n            boost: Math.round(currentPoint.boost * 10) / 10\n          }];\n          return newData.sort((a, b) => a.rpm - b.rpm);\n        });\n\n        // Update live peaks\n        setCurrentPeaks(prev => {\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\n          return {\n            maxHP: Math.round(maxHP),\n            maxTorque: Math.round(maxTorque),\n            maxBoost: Math.round(maxBoost * 10) / 10,\n            currentHP: Math.round(currentPoint.hp),\n            currentTorque: Math.round(currentPoint.torque),\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\n          };\n        });\n        setCurrentDataPoint(i);\n\n        // Variable delay based on RPM\n        const delay = currentPoint.rpm < 3000 ? 200 : currentPoint.rpm < 4000 ? 150 : currentPoint.rpm < 5000 ? 120 : 100;\n        await new Promise(resolve => setTimeout(resolve, delay));\n      }\n\n      // Step 5: Calculate final results\n      const peaks = {\n        maxHP: Math.round(Math.max(...processedData.map(d => d.hp))),\n        maxTorque: Math.round(Math.max(...processedData.map(d => d.torque))),\n        maxBoost: Math.round(Math.max(...processedData.map(d => d.boost)) * 10) / 10,\n        maxHPRpm: ((_processedData$find = processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp)))) === null || _processedData$find === void 0 ? void 0 : _processedData$find.rpm) || 0,\n        maxTorqueRpm: ((_processedData$find2 = processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque)))) === null || _processedData$find2 === void 0 ? void 0 : _processedData$find2.rpm) || 0\n      };\n      const finalResults = {\n        processedData,\n        peaks,\n        settings: dynoSettings,\n        fileName: csvFile.name,\n        backendResults\n      };\n      setDynoResults(finalResults);\n\n      // Initialize with raw data\n      handleSmoothingChange(0);\n      console.log('🏆 Dyno run completed successfully!');\n      console.log('Peak Results:', peaks);\n    } catch (error) {\n      addError(error);\n      alert(`Dyno run failed: ${error.message}`);\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  // Canvas drawing effect\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    // Determine data source\n    let dataToDisplay;\n    let dataSource;\n    if (isRunning && liveGraphData.length > 0) {\n      dataToDisplay = liveGraphData;\n      dataSource = \"live\";\n    } else if (smoothedData.length > 0) {\n      dataToDisplay = smoothedData;\n      dataSource = `smoothed-L${smoothingLevel}`;\n    } else if (dynoResults !== null && dynoResults !== void 0 && dynoResults.processedData) {\n      dataToDisplay = dynoResults.processedData.map(d => ({\n        rpm: d.rpm,\n        horsepower: Math.round(d.hp),\n        torque: Math.round(d.torque),\n        boost: Math.round(d.boost * 10) / 10\n      }));\n      dataSource = \"processed\";\n    } else {\n      return;\n    }\n    console.log(`🎨 Drawing ${dataToDisplay.length} points from ${dataSource}`);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Setup canvas\n    const rect = canvas.getBoundingClientRect();\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    canvas.width = rect.width * devicePixelRatio;\n    canvas.height = rect.height * devicePixelRatio;\n    ctx.scale(devicePixelRatio, devicePixelRatio);\n    const width = rect.width;\n    const height = rect.height;\n\n    // Clear canvas\n    ctx.fillStyle = '#1a1a1a';\n    ctx.fillRect(0, 0, width, height);\n\n    // Graph dimensions\n    const leftPadding = 70;\n    const rightPadding = 40;\n    const topPadding = 40;\n    const bottomPadding = 60;\n    const graphWidth = width - leftPadding - rightPadding;\n    const graphHeight = height - topPadding - bottomPadding;\n\n    // Data ranges\n    const maxRpm = Math.max(...dataToDisplay.map(d => d.rpm), 7000);\n    const minRpm = Math.min(...dataToDisplay.map(d => d.rpm), 2000);\n    const maxHP = Math.max(...dataToDisplay.map(d => d.horsepower), 100);\n    const maxTorque = Math.max(...dataToDisplay.map(d => d.torque), 100);\n    const maxPower = Math.max(maxHP, maxTorque);\n\n    // Draw grid\n    ctx.strokeStyle = '#333';\n    ctx.lineWidth = 1;\n\n    // Vertical grid lines\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\n      const x = leftPadding + (rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      ctx.beginPath();\n      ctx.moveTo(x, topPadding);\n      ctx.lineTo(x, height - bottomPadding);\n      ctx.stroke();\n      ctx.fillStyle = '#666';\n      ctx.font = `${Math.max(8, width * 0.010)}px Arial`;\n      ctx.textAlign = 'center';\n      ctx.fillText(rpm.toString(), x, height - bottomPadding + 20);\n    }\n\n    // Horizontal grid lines\n    for (let power = 0; power <= maxPower; power += 50) {\n      const y = height - bottomPadding - power / maxPower * graphHeight;\n      ctx.beginPath();\n      ctx.moveTo(leftPadding, y);\n      ctx.lineTo(width - rightPadding, y);\n      ctx.stroke();\n      ctx.fillStyle = '#666';\n      ctx.font = `${Math.max(8, width * 0.010)}px Arial`;\n      ctx.textAlign = 'right';\n      ctx.fillText(power.toString(), leftPadding - 10, y + 5);\n    }\n\n    // Draw axes\n    ctx.strokeStyle = '#666';\n    ctx.lineWidth = 2;\n    ctx.beginPath();\n    ctx.moveTo(leftPadding, topPadding);\n    ctx.lineTo(leftPadding, height - bottomPadding);\n    ctx.lineTo(width - rightPadding, height - bottomPadding);\n    ctx.stroke();\n\n    // Draw HP line\n    if (dataToDisplay.length > 1) {\n      ctx.strokeStyle = '#ff4444';\n      ctx.lineWidth = dataSource.includes('smoothed') ? 4 : 3;\n      ctx.beginPath();\n      dataToDisplay.forEach((point, index) => {\n        const x = leftPadding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - bottomPadding - point.horsepower / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Draw Torque line\n    if (dataToDisplay.length > 1) {\n      ctx.strokeStyle = '#44ff44';\n      ctx.lineWidth = dataSource.includes('smoothed') ? 4 : 3;\n      ctx.beginPath();\n      dataToDisplay.forEach((point, index) => {\n        const x = leftPadding + (point.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n        const y = height - bottomPadding - point.torque / maxPower * graphHeight;\n        if (index === 0) {\n          ctx.moveTo(x, y);\n        } else {\n          ctx.lineTo(x, y);\n        }\n      });\n      ctx.stroke();\n    }\n\n    // Current point indicator during live run\n    if (isRunning && liveGraphData.length > 0) {\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\n      const x = leftPadding + (currentPoint.rpm - minRpm) / (maxRpm - minRpm) * graphWidth;\n      const yHP = height - bottomPadding - currentPoint.horsepower / maxPower * graphHeight;\n      const yTQ = height - bottomPadding - currentPoint.torque / maxPower * graphHeight;\n      const indicatorSize = 5;\n      ctx.fillStyle = '#ff4444';\n      ctx.beginPath();\n      ctx.arc(x, yHP, indicatorSize, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.fillStyle = '#44ff44';\n      ctx.beginPath();\n      ctx.arc(x, yTQ, indicatorSize, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n    // Legend\n    const legendFontSize = Math.max(8, width * 0.010);\n    ctx.fillStyle = '#ff4444';\n    ctx.font = `bold ${legendFontSize}px Arial`;\n    ctx.textAlign = 'left';\n    ctx.fillText('■ Horsepower', width - 160, 25);\n    ctx.fillStyle = '#44ff44';\n    ctx.fillText('■ Torque', width - 160, 25 + legendFontSize + 6);\n    ctx.fillStyle = '#a0aec0';\n    ctx.font = `${Math.max(6, width * 0.008)}px Arial`;\n    ctx.fillText(`Data: ${dataSource}`, width - 160, 25 + (legendFontSize + 6) * 2);\n\n    // Axis labels\n    const axisLabelSize = Math.max(8, width * 0.010);\n    ctx.fillStyle = '#ccc';\n    ctx.font = `bold ${axisLabelSize}px Arial`;\n    ctx.textAlign = 'center';\n    ctx.fillText('RPM', width / 2, height - 15);\n    ctx.save();\n    ctx.translate(20, height / 2);\n    ctx.rotate(-Math.PI / 2);\n    ctx.textAlign = 'center';\n    ctx.fillText('HP / TQ', 0, 0);\n    ctx.restore();\n  }, [liveGraphData, smoothedData, smoothingLevel, isRunning, dynoResults]);\n\n  // Styles\n  const inputStyle = {\n    width: '95%',\n    padding: '8px 12px',\n    border: '1px solid #4a5568',\n    borderRadius: '4px',\n    fontSize: '14px',\n    backgroundColor: '#2d3748',\n    color: '#e2e8f0'\n  };\n  const labelStyle = {\n    display: 'block',\n    fontSize: '14px',\n    fontWeight: '600',\n    color: '#e2e8f0',\n    marginBottom: '6px'\n  };\n  const sectionStyle = {\n    marginBottom: '20px',\n    padding: '15px',\n    backgroundColor: '#2d3748',\n    borderRadius: '6px',\n    border: '1px solid #4a5568'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      backgroundColor: '#0f1419',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\n    },\n    children: [debugInfo.lastSmoothingCall && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '10px',\n        right: '10px',\n        background: 'rgba(0,0,0,0.9)',\n        color: 'white',\n        padding: '12px',\n        borderRadius: '6px',\n        fontSize: '10px',\n        fontFamily: 'monospace',\n        zIndex: 1000,\n        maxWidth: '320px',\n        border: '1px solid #4a5568'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: '#68d391',\n          fontWeight: 'bold',\n          marginBottom: '6px'\n        },\n        children: \"\\uD83D\\uDD27 Debug Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Smoothing:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 16\n        }, this), \" L\", debugInfo.lastSmoothingCall.level, \" at \", debugInfo.lastSmoothingCall.timestamp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 725,\n        columnNumber: 11\n      }, this), debugInfo.apiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"API:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 18\n        }, this), \" \", debugInfo.apiResponse.status, \" \", debugInfo.apiResponse.ok ? '✅' : '❌']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 13\n      }, this), debugInfo.dataProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 20\n          }, this), \" \", debugInfo.dataProcessing.source]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Points:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 20\n          }, this), \" \", debugInfo.dataProcessing.points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 15\n        }, this), debugInfo.dataProcessing.peaks && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Peaks:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 22\n          }, this), \" HP=\", debugInfo.dataProcessing.peaks.maxHP, \", TQ=\", debugInfo.dataProcessing.peaks.maxTorque]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 17\n        }, this), debugInfo.dataProcessing.changes && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: '#68d391'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Changes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 19\n          }, this), \" HP\", debugInfo.dataProcessing.changes.hp >= 0 ? '+' : '', debugInfo.dataProcessing.changes.hp, \", TQ\", debugInfo.dataProcessing.changes.tq >= 0 ? '+' : '', debugInfo.dataProcessing.changes.tq]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 20\n          }, this), \" \", debugInfo.dataProcessing.processingTime, \"ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '6px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"State:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 18\n          }, this), \" Level=\", smoothingLevel, \", Data=\", smoothedData.length, \", Peaks=\", smoothedPeaks ? 'yes' : 'no']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this), debugInfo.errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '6px',\n          color: '#ff6b6b'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Error:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 754,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '9px'\n          },\n          children: (_debugInfo$errors = debugInfo.errors[debugInfo.errors.length - 1]) === null || _debugInfo$errors === void 0 ? void 0 : _debugInfo$errors.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#1a2332',\n        color: 'white',\n        padding: '16px 0',\n        textAlign: 'center',\n        boxShadow: '0 2px 10px rgba(0,0,0,0.3)',\n        borderBottom: '1px solid #2d3748'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          margin: 0,\n          fontSize: '24px',\n          fontWeight: '700',\n          letterSpacing: '-0.5px',\n          background: 'linear-gradient(135deg, #ff4444, #44ff44, #4488ff)',\n          WebkitBackgroundClip: 'text',\n          WebkitTextFillColor: 'transparent',\n          backgroundClip: 'text'\n        },\n        children: \"Tyler's Virtual Dyno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '6px 0 0 0',\n          fontSize: '14px',\n          opacity: 0.8,\n          fontWeight: '400',\n          color: '#a0aec0'\n        },\n        children: \"Personal Dyno Analysis & Simulation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '260px 1fr',\n        height: 'calc(100vh - 100px)',\n        gap: '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1a202c',\n          borderRight: '1px solid #2d3748',\n          padding: '40px 10px',\n          overflowY: 'auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              marginBottom: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                flex: 1\n              },\n              children: \"Upload Datalog\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _fileInputRef$current;\n                return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n              },\n              style: {\n                padding: '8px 16px',\n                backgroundColor: csvFile ? '#38a169' : '#3182ce',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: '500',\n                transition: 'all 0.2s ease'\n              },\n              children: csvFile ? '✅ Change' : '📂 Select'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".csv\",\n              onChange: handleFileUpload,\n              ref: fileInputRef,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this), csvFile && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#a0aec0',\n              backgroundColor: '#2d3748',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #4a5568',\n              wordBreak: 'break-all'\n            },\n            children: [\"\\uD83D\\uDCC4 \", csvFile.name, \" (\", csvData.length, \" valid points)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 14px 0',\n              fontSize: '15px',\n              color: '#68d391'\n            },\n            children: \"Vehicle Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                minWidth: '70px',\n                fontSize: '13px'\n              },\n              children: \"Car:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dynoSettings.selectedCar,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                selectedCar: e.target.value\n              })),\n              style: {\n                ...inputStyle,\n                flex: 1,\n                fontSize: '13px'\n              },\n              children: carOptions.map(car => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: car.value,\n                children: car.label\n              }, car.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: \"Gear Used:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 871,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '6px'\n              },\n              children: [3, 4, 5].map(gear => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setDynoSettings(prev => ({\n                  ...prev,\n                  gear\n                })),\n                style: {\n                  flex: 1,\n                  padding: '8px',\n                  border: dynoSettings.gear === gear ? '2px solid #3182ce' : '1px solid #4a5568',\n                  borderRadius: '4px',\n                  backgroundColor: dynoSettings.gear === gear ? '#2c5282' : '#2d3748',\n                  color: dynoSettings.gear === gear ? 'white' : '#a0aec0',\n                  cursor: 'pointer',\n                  fontSize: '13px',\n                  fontWeight: dynoSettings.gear === gear ? '600' : '400',\n                  transition: 'all 0.2s ease'\n                },\n                children: [gear, \"rd\"]\n              }, gear, true, {\n                fileName: _jsxFileName,\n                lineNumber: 874,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: \"Vehicle Weight (lbs):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 897,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: dynoSettings.weight,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                weight: parseInt(e.target.value) || 0\n              })),\n              style: {\n                ...inputStyle,\n                fontSize: '13px',\n                padding: '6px 8px'\n              },\n              min: \"1000\",\n              max: \"10000\",\n              step: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 14px 0',\n              fontSize: '15px',\n              color: '#68d391'\n            },\n            children: \"Dyno Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px',\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                margin: 0,\n                minWidth: '70px',\n                fontSize: '13px'\n              },\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: dynoSettings.dynoType,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                dynoType: e.target.value\n              })),\n              style: {\n                ...inputStyle,\n                flex: 1,\n                fontSize: '13px'\n              },\n              children: Object.entries(dynoTypes).map(([key, dyno]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: dyno.name\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: sectionStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: '0 0 14px 0',\n              fontSize: '15px',\n              color: '#68d391'\n            },\n            children: \"Environment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: [\"Temperature: \", dynoSettings.temperature, \"\\xB0F\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 933,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"50\",\n              max: \"110\",\n              value: dynoSettings.temperature,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                temperature: parseInt(e.target.value)\n              })),\n              style: {\n                width: '100%',\n                margin: '4px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 934,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                fontSize: '11px',\n                color: '#718096'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"50\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"110\\xB0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 943,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 942,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '14px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                ...labelStyle,\n                fontSize: '13px'\n              },\n              children: [\"Humidity: \", dynoSettings.humidity, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"10\",\n              max: \"90\",\n              value: dynoSettings.humidity,\n              onChange: e => setDynoSettings(prev => ({\n                ...prev,\n                humidity: parseInt(e.target.value)\n              })),\n              style: {\n                width: '100%',\n                margin: '4px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                fontSize: '11px',\n                color: '#718096'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"10%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"90%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 958,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#1a202c',\n          padding: '20px',\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'relative'\n        },\n        children: isRunning || dynoResults ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: '#1a1a1a',\n              color: 'white',\n              padding: '16px',\n              borderRadius: '8px',\n              marginBottom: '16px',\n              display: 'grid',\n              gridTemplateColumns: '1fr 1fr 1fr',\n              gap: '16px',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  fontWeight: 'bold',\n                  color: '#ff4444'\n                },\n                children: (_dynoResults$peaks => {\n                  if (isRunning) return currentPeaks.currentHP;\n                  if (smoothingLevel > 0 && smoothedPeaks) return smoothedPeaks.maxHP;\n                  return (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks = dynoResults.peaks) === null || _dynoResults$peaks === void 0 ? void 0 : _dynoResults$peaks.maxHP) || 0;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 989,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#ccc',\n                  marginBottom: '3px'\n                },\n                children: [isRunning ? 'CURRENT' : 'PEAK', \" HP\", !isRunning && smoothingLevel > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#68d391',\n                    marginLeft: '4px'\n                  },\n                  children: [\"(S\", smoothingLevel, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 999,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 19\n              }, this), !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '9px',\n                  color: '#888'\n                },\n                children: [\"@ \", smoothingLevel > 0 && smoothedPeaks ? smoothedPeaks.maxHPRpm : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks2 = dynoResults.peaks) === null || _dynoResults$peaks2 === void 0 ? void 0 : _dynoResults$peaks2.maxHPRpm) || 0, \" RPM\", smoothingLevel > 0 && smoothedPeaks && (dynoResults === null || dynoResults === void 0 ? void 0 : dynoResults.peaks) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: smoothedPeaks.maxHP > dynoResults.peaks.maxHP ? '#68d391' : '#ff6b6b'\n                  },\n                  children: [smoothedPeaks.maxHP > dynoResults.peaks.maxHP ? '+' : '', smoothedPeaks.maxHP - dynoResults.peaks.maxHP, \" HP\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  fontWeight: 'bold',\n                  color: '#44ff44'\n                },\n                children: (_dynoResults$peaks3 => {\n                  if (isRunning) return currentPeaks.currentTorque;\n                  if (smoothingLevel > 0 && smoothedPeaks) return smoothedPeaks.maxTorque;\n                  return (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks3 = dynoResults.peaks) === null || _dynoResults$peaks3 === void 0 ? void 0 : _dynoResults$peaks3.maxTorque) || 0;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#ccc',\n                  marginBottom: '3px'\n                },\n                children: [isRunning ? 'CURRENT' : 'PEAK', \" LB-FT\", !isRunning && smoothingLevel > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#68d391',\n                    marginLeft: '4px'\n                  },\n                  children: [\"(S\", smoothingLevel, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1026,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 19\n              }, this), !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '9px',\n                  color: '#888'\n                },\n                children: [\"@ \", smoothingLevel > 0 && smoothedPeaks ? smoothedPeaks.maxTorqueRpm : (dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$peaks4 = dynoResults.peaks) === null || _dynoResults$peaks4 === void 0 ? void 0 : _dynoResults$peaks4.maxTorqueRpm) || 0, \" RPM\", smoothingLevel > 0 && smoothedPeaks && (dynoResults === null || dynoResults === void 0 ? void 0 : dynoResults.peaks) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: smoothedPeaks.maxTorque > dynoResults.peaks.maxTorque ? '#68d391' : '#ff6b6b'\n                  },\n                  children: [smoothedPeaks.maxTorque > dynoResults.peaks.maxTorque ? '+' : '', smoothedPeaks.maxTorque - dynoResults.peaks.maxTorque, \" TQ\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1033,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1030,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1015,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '24px',\n                  fontWeight: 'bold',\n                  color: '#4488ff'\n                },\n                children: (_dynoResults$processe => {\n                  if (isRunning) return currentPeaks.maxBoost;\n                  // Always show original boost (never smoothed)\n                  const originalBoost = Math.max(...((dynoResults === null || dynoResults === void 0 ? void 0 : (_dynoResults$processe = dynoResults.processedData) === null || _dynoResults$processe === void 0 ? void 0 : _dynoResults$processe.map(d => d.boost)) || [0]));\n                  return Math.round(originalBoost * 10) / 10;\n                })()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '11px',\n                  color: '#ccc',\n                  marginBottom: '3px'\n                },\n                children: [\"PEAK BOOST PSI\", !isRunning && smoothingLevel > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: '#a0aec0',\n                    marginLeft: '4px'\n                  },\n                  children: \"(Raw)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1054,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: '9px',\n                  color: '#888'\n                },\n                children: isRunning ? 'LIVE' : 'SENSOR DATA'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              position: 'relative',\n              height: 'calc(100vh - 280px)',\n              minHeight: '400px',\n              maxHeight: '600px'\n            },\n            children: [dynoResults && !isRunning && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '8px',\n                left: '8px',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                backgroundColor: 'rgba(26, 32, 44, 0.9)',\n                padding: '6px 10px',\n                borderRadius: '6px',\n                border: '1px solid #4a5568',\n                zIndex: 10\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                style: {\n                  fontSize: '12px',\n                  color: '#a0aec0',\n                  fontWeight: '500'\n                },\n                children: \"Smoothing:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1086,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: smoothingLevel,\n                onChange: e => {\n                  const newLevel = parseInt(e.target.value);\n                  console.log(`🎚️ User selected smoothing level: ${newLevel}`);\n                  handleSmoothingChange(newLevel);\n                },\n                style: {\n                  padding: '4px 8px',\n                  border: '1px solid #4a5568',\n                  borderRadius: '4px',\n                  fontSize: '12px',\n                  backgroundColor: '#1a202c',\n                  color: '#e2e8f0'\n                },\n                children: smoothingOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: option.value,\n                  children: option.label\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1089,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1073,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: canvasRef,\n              style: {\n                width: '100%',\n                height: '100%',\n                border: '1px solid #4a5568',\n                borderRadius: '6px',\n                backgroundColor: '#1a1a1a'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1064,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#2d3748',\n            borderRadius: '8px',\n            border: '2px dashed #4a5568',\n            minHeight: '400px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              color: '#a0aec0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '48px',\n                marginBottom: '16px'\n              },\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: '0 0 8px 0',\n                fontSize: '18px',\n                color: '#68d391'\n              },\n              children: \"Ready for Dyno Run\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0 0 20px 0',\n                fontSize: '14px'\n              },\n              children: \"Upload a datalog file and configure your settings to begin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: runVirtualDyno,\n              disabled: !csvData.length || isRunning,\n              style: {\n                padding: '16px 32px',\n                backgroundColor: isRunning ? '#4a5568' : !csvData.length ? '#4a5568' : '#e53e3e',\n                color: 'white',\n                border: 'none',\n                borderRadius: '8px',\n                fontSize: '16px',\n                fontWeight: '700',\n                cursor: !csvData.length || isRunning ? 'not-allowed' : 'pointer',\n                transition: 'all 0.2s ease',\n                boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\n                minWidth: '200px'\n              },\n              children: isRunning ? '🏃 PROCESSING...' : !csvData.length ? 'Upload File First' : 'START VIRTUAL DYNO'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1137,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 699,\n    columnNumber: 5\n  }, this);\n};\n_s(VirtualDyno, \"U12LOcBdcwO1mOs3MX7bDOWpYTg=\");\n_c = VirtualDyno;\nexport default VirtualDyno;\nvar _c;\n$RefreshReg$(_c, \"VirtualDyno\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","VirtualDyno","_s","_debugInfo$errors","_dynoResults$peaks2","_dynoResults$peaks4","csvFile","setCsvFile","csvData","setCsvData","dynoResults","setDynoResults","isRunning","setIsRunning","currentDataPoint","setCurrentDataPoint","liveGraphData","setLiveGraphData","currentPeaks","setCurrentPeaks","maxHP","maxTorque","maxBoost","currentHP","currentTorque","currentBoost","dynoSettings","setDynoSettings","selectedCar","gear","dynoType","weight","temperature","humidity","smoothingLevel","setSmoothingLevel","smoothedData","setSmoothedData","smoothedPeaks","setSmoothedPeaks","debugInfo","setDebugInfo","lastSmoothingCall","apiResponse","dataProcessing","errors","fileInputRef","canvasRef","carOptions","value","label","dynoTypes","mustang_md250","name","correction","variance","dynojet_248c","awd_dyno","smoothingOptions","calculatePeaksFromData","data","length","Math","max","map","d","horsepower","torque","boost","maxHPPoint","find","maxTorquePoint","maxHPRpm","rpm","maxTorqueRpm","addError","error","console","prev","slice","timestamp","Date","toLocaleTimeString","message","toString","stack","handleFileUpload","event","file","target","files","log","size","toFixed","reader","FileReader","onload","e","csv","result","lines","split","headers","h","trim","filter","line","values","row","forEach","header","index","_values$index","parseInt","maf","parseFloat","load","Error","alert","onerror","readAsText","sendToBackend","formData","FormData","append","carPresetKey","response","fetch","method","body","status","statusText","ok","errorText","text","backendResults","json","includes","getDetailedRunData","runId","_detailData$dataPoint","detailData","dataPoints","handleSmoothingChange","newLevel","processedData","warn","debugStart","now","level","dataToProcess","round","hp","rawPeaks","source","points","peaks","processingTime","apiUrl","id","url","smoothed","smoothedPeaksCalc","originalPeaks","changes","tq","runVirtualDyno","_processedData$find","_processedData$find2","dyno","tempCorrection","sqrt","humidityCorrection","envCorrection","point","random","massAirflow","sort","a","b","i","currentPoint","newData","delay","Promise","resolve","setTimeout","p","finalResults","settings","fileName","current","dataToDisplay","dataSource","canvas","ctx","getContext","rect","getBoundingClientRect","devicePixelRatio","window","width","height","scale","fillStyle","fillRect","leftPadding","rightPadding","topPadding","bottomPadding","graphWidth","graphHeight","maxRpm","minRpm","min","maxPower","strokeStyle","lineWidth","ceil","x","beginPath","moveTo","lineTo","stroke","font","textAlign","fillText","power","y","yHP","yTQ","indicatorSize","arc","PI","fill","legendFontSize","axisLabelSize","save","translate","rotate","restore","inputStyle","padding","border","borderRadius","fontSize","backgroundColor","color","labelStyle","display","fontWeight","marginBottom","sectionStyle","style","minHeight","fontFamily","children","position","top","right","background","zIndex","maxWidth","_jsxFileName","lineNumber","columnNumber","marginTop","boxShadow","borderBottom","margin","letterSpacing","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","opacity","gridTemplateColumns","gap","borderRight","overflowY","alignItems","flex","onClick","_fileInputRef$current","click","cursor","transition","type","accept","onChange","ref","wordBreak","minWidth","car","step","Object","entries","key","justifyContent","flexDirection","_dynoResults$peaks","marginLeft","_dynoResults$peaks3","_dynoResults$processe","originalBoost","maxHeight","left","option","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tyler/OneDrive/Desktop/VirtualDyno/virtual-dyno-frontend/src/VirtualDyno.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst VirtualDyno = () => {\r\n  // Core state\r\n  const [csvFile, setCsvFile] = useState(null);\r\n  const [csvData, setCsvData] = useState([]);\r\n  const [dynoResults, setDynoResults] = useState(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentDataPoint, setCurrentDataPoint] = useState(0);\r\n  const [liveGraphData, setLiveGraphData] = useState([]);\r\n  \r\n  // Live stats during run\r\n  const [currentPeaks, setCurrentPeaks] = useState({\r\n    maxHP: 0,\r\n    maxTorque: 0,\r\n    maxBoost: 0,\r\n    currentHP: 0,\r\n    currentTorque: 0,\r\n    currentBoost: 0\r\n  });\r\n  \r\n  // Dyno settings\r\n  const [dynoSettings, setDynoSettings] = useState({\r\n    selectedCar: 'mazdaspeed3',\r\n    gear: 4,\r\n    dynoType: 'mustang_md250',\r\n    weight: 3200,\r\n    temperature: 75,\r\n    humidity: 45\r\n  });\r\n\r\n  // Smoothing state\r\n  const [smoothingLevel, setSmoothingLevel] = useState(0);\r\n  const [smoothedData, setSmoothedData] = useState([]);\r\n  const [smoothedPeaks, setSmoothedPeaks] = useState(null);\r\n\r\n  // Debug state\r\n  const [debugInfo, setDebugInfo] = useState({\r\n    lastSmoothingCall: null,\r\n    apiResponse: null,\r\n    dataProcessing: null,\r\n    errors: []\r\n  });\r\n\r\n  // Refs\r\n  const fileInputRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Configuration data\r\n  const carOptions = [\r\n    { value: 'mazdaspeed3', label: 'Mazdaspeed3' },\r\n    { value: 'wrx', label: 'Subaru WRX' },\r\n    { value: 'sti', label: 'Subaru STI' },\r\n    { value: 'evo', label: 'Mitsubishi Evo' },\r\n    { value: 'gti', label: 'VW Golf GTI' },\r\n    { value: 'focus_st', label: 'Ford Focus ST' }\r\n  ];\r\n\r\n  const dynoTypes = {\r\n    mustang_md250: { name: \"Mustang MD250\", correction: 1.0, variance: 0.02 },\r\n    dynojet_248c: { name: \"DynoJet 248C\", correction: 1.15, variance: 0.03 },\r\n    awd_dyno: { name: \"AWD Dyno\", correction: 0.95, variance: 0.04 }\r\n  };\r\n\r\n  const smoothingOptions = [\r\n    { value: 0, label: 'Raw Data (0)' },\r\n    { value: 1, label: 'Light (1)' },\r\n    { value: 2, label: 'Moderate (2)' },\r\n    { value: 3, label: 'Smooth (3)' },\r\n    { value: 4, label: 'Heavy (4)' },\r\n    { value: 5, label: 'Maximum (5)' }\r\n  ];\r\n\r\n  // Helper functions\r\n  const calculatePeaksFromData = (data) => {\r\n    if (!data || data.length === 0) return null;\r\n    \r\n    const maxHP = Math.max(...data.map(d => d.horsepower));\r\n    const maxTorque = Math.max(...data.map(d => d.torque));\r\n    const maxBoost = Math.max(...data.map(d => d.boost));\r\n    const maxHPPoint = data.find(d => d.horsepower === maxHP);\r\n    const maxTorquePoint = data.find(d => d.torque === maxTorque);\r\n    \r\n    return {\r\n      maxHP,\r\n      maxTorque,\r\n      maxBoost,\r\n      maxHPRpm: maxHPPoint?.rpm || 0,\r\n      maxTorqueRpm: maxTorquePoint?.rpm || 0\r\n    };\r\n  };\r\n\r\n  const addError = (error) => {\r\n    console.error('🚨 VirtualDyno Error:', error);\r\n    setDebugInfo(prev => ({\r\n      ...prev,\r\n      errors: [...prev.errors.slice(-4), { // Keep last 5 errors\r\n        timestamp: new Date().toLocaleTimeString(),\r\n        message: error.toString(),\r\n        stack: error.stack\r\n      }]\r\n    }));\r\n  };\r\n\r\n  // File upload handler\r\n  const handleFileUpload = (event) => {\r\n    try {\r\n      const file = event.target.files[0];\r\n      if (!file) return;\r\n      \r\n      console.log('📂 File selected:', file.name, `(${(file.size / 1024).toFixed(1)} KB)`);\r\n      \r\n      setCsvFile(file);\r\n      setDynoResults(null);\r\n      setLiveGraphData([]);\r\n      setSmoothedData([]);\r\n      setSmoothingLevel(0);\r\n      \r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        try {\r\n          const csv = e.target.result;\r\n          const lines = csv.split('\\n');\r\n          const headers = lines[0].split(',').map(h => h.trim());\r\n          \r\n          console.log('📄 CSV headers found:', headers);\r\n          \r\n          const data = lines.slice(1)\r\n            .filter(line => line.trim().length > 0)\r\n            .map(line => {\r\n              const values = line.split(',');\r\n              const row = {};\r\n              headers.forEach((header, index) => {\r\n                row[header] = values[index]?.trim();\r\n              });\r\n              return row;\r\n            })\r\n            .filter(row => {\r\n              const rpm = parseInt(row['RPM (RPM)'] || row['RPM'] || row['Engine Speed'] || 0);\r\n              const maf = parseFloat(row['Mass Airflow (g/s)'] || row['MAF'] || row['Mass Airflow'] || 0);\r\n              const load = parseFloat(row['Calculated Load (Load)'] || row['Load'] || row['Engine Load'] || 0);\r\n              \r\n              // More lenient filtering for broader compatibility\r\n              return rpm > 1500 && (maf > 3 || load > 0.10);\r\n            });\r\n          \r\n          setCsvData(data);\r\n          console.log(`✅ Loaded ${data.length} valid data points from CSV`);\r\n          \r\n        } catch (error) {\r\n          addError(new Error(`CSV parsing failed: ${error.message}`));\r\n          alert('Error parsing CSV file. Please check the file format.');\r\n        }\r\n      };\r\n      \r\n      reader.onerror = () => {\r\n        addError(new Error('File reading failed'));\r\n        alert('Error reading file.');\r\n      };\r\n      \r\n      reader.readAsText(file);\r\n      \r\n    } catch (error) {\r\n      addError(error);\r\n      alert('Error handling file upload.');\r\n    }\r\n  };\r\n\r\n  // Fixed backend communication\r\n  const sendToBackend = async () => {\r\n    if (!csvFile) {\r\n      throw new Error('No CSV file selected');\r\n    }\r\n    \r\n    try {\r\n      console.log('🚀 Sending data to backend...');\r\n      \r\n      const formData = new FormData();\r\n      formData.append('File', csvFile);\r\n      formData.append('CarPresetKey', dynoSettings.selectedCar);\r\n      formData.append('Weight', dynoSettings.weight.toString());\r\n      formData.append('Gear', dynoSettings.gear.toString());\r\n      formData.append('Notes', `${dynoSettings.dynoType}, ${dynoSettings.temperature}°F, ${dynoSettings.humidity}% humidity`);\r\n      formData.append('IsPublic', 'false');\r\n      \r\n      console.log('📤 FormData contents:', {\r\n        file: csvFile.name,\r\n        carPresetKey: dynoSettings.selectedCar,\r\n        weight: dynoSettings.weight,\r\n        gear: dynoSettings.gear\r\n      });\r\n      \r\n      const response = await fetch('http://localhost:5038/api/dyno/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n        // Don't set Content-Type header - let browser set it with boundary\r\n      });\r\n      \r\n      console.log('📨 Backend response status:', response.status, response.statusText);\r\n      \r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Backend API error (${response.status}): ${errorText}`);\r\n      }\r\n      \r\n      const backendResults = await response.json();\r\n      console.log('✅ Backend results received:', backendResults);\r\n      \r\n      return backendResults;\r\n      \r\n    } catch (error) {\r\n      if (error.name === 'TypeError' && error.message.includes('fetch')) {\r\n        throw new Error('Cannot connect to backend API. Make sure your C# API is running on localhost:5038');\r\n      }\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get detailed run data from backend\r\n  const getDetailedRunData = async (runId) => {\r\n    try {\r\n      console.log(`📊 Fetching detailed data for run ${runId}...`);\r\n      \r\n      const response = await fetch(`http://localhost:5038/api/dyno/runs/${runId}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to get detailed run data: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const detailData = await response.json();\r\n      console.log(`✅ Got ${detailData.dataPoints?.length || 0} detailed data points`);\r\n      \r\n      return detailData;\r\n      \r\n    } catch (error) {\r\n      throw new Error(`Error fetching detailed data: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Smoothing handler\r\n  const handleSmoothingChange = async (newLevel) => {\r\n    if (!dynoResults || !dynoResults.processedData) {\r\n      console.warn('⚠️ No dyno results available for smoothing');\r\n      return;\r\n    }\r\n    \r\n    const debugStart = Date.now();\r\n    console.log(`🔧 Applying smoothing level ${newLevel}...`);\r\n    \r\n    setDebugInfo(prev => ({\r\n      ...prev,\r\n      lastSmoothingCall: { \r\n        level: newLevel, \r\n        timestamp: new Date().toLocaleTimeString() \r\n      }\r\n    }));\r\n    \r\n    setSmoothingLevel(newLevel);\r\n    \r\n    try {\r\n      if (newLevel === 0) {\r\n        // Raw data - use original processed data\r\n        const dataToProcess = dynoResults.processedData.map(d => ({\r\n          rpm: d.rpm,\r\n          horsepower: Math.round(d.hp),\r\n          torque: Math.round(d.torque),\r\n          boost: Math.round(d.boost * 10) / 10\r\n        }));\r\n        \r\n        console.log(`📊 Using raw data: ${dataToProcess.length} points`);\r\n        \r\n        setSmoothedData(dataToProcess);\r\n        const rawPeaks = calculatePeaksFromData(dataToProcess);\r\n        setSmoothedPeaks(rawPeaks);\r\n        \r\n        setDebugInfo(prev => ({\r\n          ...prev,\r\n          dataProcessing: { \r\n            source: 'raw', \r\n            points: dataToProcess.length, \r\n            peaks: rawPeaks,\r\n            processingTime: Date.now() - debugStart\r\n          }\r\n        }));\r\n        \r\n      } else {\r\n        // Apply smoothing via backend API\r\n        const apiUrl = `http://localhost:5038/api/dyno/runs/${dynoResults.backendResults.id}/smooth/${newLevel}`;\r\n        console.log(`🌐 Fetching smoothed data: ${apiUrl}`);\r\n        \r\n        const response = await fetch(apiUrl);\r\n        \r\n        setDebugInfo(prev => ({\r\n          ...prev,\r\n          apiResponse: { \r\n            url: apiUrl, \r\n            status: response.status, \r\n            ok: response.ok,\r\n            timestamp: new Date().toLocaleTimeString()\r\n          }\r\n        }));\r\n        \r\n        if (!response.ok) {\r\n          const errorText = await response.text();\r\n          throw new Error(`Smoothing API error (${response.status}): ${errorText}`);\r\n        }\r\n        \r\n        const smoothed = await response.json();\r\n        console.log(`✅ Received ${smoothed.length} smoothed points`);\r\n        \r\n        const dataToProcess = smoothed.map(d => ({\r\n          rpm: d.rpm,\r\n          horsepower: Math.round(d.horsepower),\r\n          torque: Math.round(d.torque),\r\n          boost: Math.round(d.boost * 10) / 10\r\n        }));\r\n        \r\n        setSmoothedData(dataToProcess);\r\n        const smoothedPeaksCalc = calculatePeaksFromData(dataToProcess);\r\n        setSmoothedPeaks(smoothedPeaksCalc);\r\n        \r\n        // Calculate changes from original\r\n        const originalPeaks = dynoResults.peaks;\r\n        const changes = {\r\n          hp: smoothedPeaksCalc.maxHP - originalPeaks.maxHP,\r\n          tq: smoothedPeaksCalc.maxTorque - originalPeaks.maxTorque,\r\n          boost: smoothedPeaksCalc.maxBoost - (originalPeaks.maxBoost || 0)\r\n        };\r\n        \r\n        setDebugInfo(prev => ({\r\n          ...prev,\r\n          dataProcessing: { \r\n            source: 'smoothed', \r\n            points: dataToProcess.length, \r\n            peaks: smoothedPeaksCalc,\r\n            processingTime: Date.now() - debugStart,\r\n            changes\r\n          }\r\n        }));\r\n        \r\n        console.log(`🏁 Smoothing results for level ${newLevel}:`);\r\n        console.log(`  HP: ${originalPeaks.maxHP} → ${smoothedPeaksCalc.maxHP} (${changes.hp >= 0 ? '+' : ''}${changes.hp})`);\r\n        console.log(`  TQ: ${originalPeaks.maxTorque} → ${smoothedPeaksCalc.maxTorque} (${changes.tq >= 0 ? '+' : ''}${changes.tq})`);\r\n        console.log(`  Boost: ${originalPeaks.maxBoost || 0} → ${smoothedPeaksCalc.maxBoost} (should be same)`);\r\n      }\r\n      \r\n    } catch (error) {\r\n      addError(error);\r\n      alert(`Error applying smoothing: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  // Main dyno run function\r\n  const runVirtualDyno = async () => {\r\n    if (!csvData.length) {\r\n      alert('Please upload a CSV file first!');\r\n      return;\r\n    }\r\n    \r\n    console.log('🏁 Starting virtual dyno run...');\r\n    \r\n    // Reset state\r\n    setIsRunning(true);\r\n    setCurrentDataPoint(0);\r\n    setLiveGraphData([]);\r\n    setSmoothedData([]);\r\n    setSmoothingLevel(0);\r\n    setCurrentPeaks({\r\n      maxHP: 0,\r\n      maxTorque: 0,\r\n      maxBoost: 0,\r\n      currentHP: 0,\r\n      currentTorque: 0,\r\n      currentBoost: 0\r\n    });\r\n    \r\n    try {\r\n      // Step 1: Send data to backend\r\n      const backendResults = await sendToBackend();\r\n      \r\n      // Step 2: Get detailed data points\r\n      const detailData = await getDetailedRunData(backendResults.id);\r\n      \r\n      // Step 3: Process data with virtual dyno characteristics\r\n      const dyno = dynoTypes[dynoSettings.dynoType];\r\n      const tempCorrection = Math.sqrt(537.67 / (dynoSettings.temperature + 459.67));\r\n      const humidityCorrection = 1 - (dynoSettings.humidity / 100 * 0.047);\r\n      const envCorrection = tempCorrection * humidityCorrection;\r\n      \r\n      const processedData = (detailData.dataPoints || []).map(point => {\r\n        const variance = 1 + (Math.random() - 0.5) * 2 * dyno.variance;\r\n        \r\n        return {\r\n          rpm: point.rpm,\r\n          hp: point.horsepower * envCorrection * dyno.correction * variance,\r\n          torque: point.torque * envCorrection * variance,\r\n          boost: point.boost,\r\n          maf: point.massAirflow || 0,\r\n          load: point.load || 0\r\n        };\r\n      });\r\n      \r\n      // Sort by RPM for proper animation\r\n      processedData.sort((a, b) => a.rpm - b.rpm);\r\n      \r\n      console.log(`🎬 Starting animation with ${processedData.length} points`);\r\n      \r\n      // Step 4: Animate the dyno run\r\n      for (let i = 0; i < processedData.length; i++) {\r\n        const currentPoint = processedData[i];\r\n        \r\n        // Add point to live graph\r\n        setLiveGraphData(prev => {\r\n          const newData = [...prev, {\r\n            rpm: currentPoint.rpm,\r\n            horsepower: Math.round(currentPoint.hp),\r\n            torque: Math.round(currentPoint.torque),\r\n            boost: Math.round(currentPoint.boost * 10) / 10\r\n          }];\r\n          return newData.sort((a, b) => a.rpm - b.rpm);\r\n        });\r\n        \r\n        // Update live peaks\r\n        setCurrentPeaks(prev => {\r\n          const maxHP = Math.max(prev.maxHP, currentPoint.hp);\r\n          const maxTorque = Math.max(prev.maxTorque, currentPoint.torque);\r\n          const maxBoost = Math.max(prev.maxBoost, currentPoint.boost);\r\n          \r\n          return {\r\n            maxHP: Math.round(maxHP),\r\n            maxTorque: Math.round(maxTorque),\r\n            maxBoost: Math.round(maxBoost * 10) / 10,\r\n            currentHP: Math.round(currentPoint.hp),\r\n            currentTorque: Math.round(currentPoint.torque),\r\n            currentBoost: Math.round(currentPoint.boost * 10) / 10\r\n          };\r\n        });\r\n        \r\n        setCurrentDataPoint(i);\r\n        \r\n        // Variable delay based on RPM\r\n        const delay = currentPoint.rpm < 3000 ? 200 : \r\n                     currentPoint.rpm < 4000 ? 150 : \r\n                     currentPoint.rpm < 5000 ? 120 : 100;\r\n        \r\n        await new Promise(resolve => setTimeout(resolve, delay));\r\n      }\r\n      \r\n      // Step 5: Calculate final results\r\n      const peaks = {\r\n        maxHP: Math.round(Math.max(...processedData.map(d => d.hp))),\r\n        maxTorque: Math.round(Math.max(...processedData.map(d => d.torque))),\r\n        maxBoost: Math.round(Math.max(...processedData.map(d => d.boost)) * 10) / 10,\r\n        maxHPRpm: processedData.find(d => d.hp === Math.max(...processedData.map(p => p.hp)))?.rpm || 0,\r\n        maxTorqueRpm: processedData.find(d => d.torque === Math.max(...processedData.map(p => p.torque)))?.rpm || 0\r\n      };\r\n      \r\n      const finalResults = {\r\n        processedData,\r\n        peaks,\r\n        settings: dynoSettings,\r\n        fileName: csvFile.name,\r\n        backendResults\r\n      };\r\n      \r\n      setDynoResults(finalResults);\r\n      \r\n      // Initialize with raw data\r\n      handleSmoothingChange(0);\r\n      \r\n      console.log('🏆 Dyno run completed successfully!');\r\n      console.log('Peak Results:', peaks);\r\n      \r\n    } catch (error) {\r\n      addError(error);\r\n      alert(`Dyno run failed: ${error.message}`);\r\n    } finally {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  // Canvas drawing effect\r\n  useEffect(() => {\r\n    if (!canvasRef.current) return;\r\n\r\n    // Determine data source\r\n    let dataToDisplay;\r\n    let dataSource;\r\n    \r\n    if (isRunning && liveGraphData.length > 0) {\r\n      dataToDisplay = liveGraphData;\r\n      dataSource = \"live\";\r\n    } else if (smoothedData.length > 0) {\r\n      dataToDisplay = smoothedData;\r\n      dataSource = `smoothed-L${smoothingLevel}`;\r\n    } else if (dynoResults?.processedData) {\r\n      dataToDisplay = dynoResults.processedData.map(d => ({\r\n        rpm: d.rpm,\r\n        horsepower: Math.round(d.hp),\r\n        torque: Math.round(d.torque),\r\n        boost: Math.round(d.boost * 10) / 10\r\n      }));\r\n      dataSource = \"processed\";\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    console.log(`🎨 Drawing ${dataToDisplay.length} points from ${dataSource}`);\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    \r\n    // Setup canvas\r\n    const rect = canvas.getBoundingClientRect();\r\n    const devicePixelRatio = window.devicePixelRatio || 1;\r\n    canvas.width = rect.width * devicePixelRatio;\r\n    canvas.height = rect.height * devicePixelRatio;\r\n    ctx.scale(devicePixelRatio, devicePixelRatio);\r\n    \r\n    const width = rect.width;\r\n    const height = rect.height;\r\n\r\n    // Clear canvas\r\n    ctx.fillStyle = '#1a1a1a';\r\n    ctx.fillRect(0, 0, width, height);\r\n\r\n    // Graph dimensions\r\n    const leftPadding = 70;\r\n    const rightPadding = 40;\r\n    const topPadding = 40;\r\n    const bottomPadding = 60;\r\n    const graphWidth = width - leftPadding - rightPadding;\r\n    const graphHeight = height - topPadding - bottomPadding;\r\n\r\n    // Data ranges\r\n    const maxRpm = Math.max(...dataToDisplay.map(d => d.rpm), 7000);\r\n    const minRpm = Math.min(...dataToDisplay.map(d => d.rpm), 2000);\r\n    const maxHP = Math.max(...dataToDisplay.map(d => d.horsepower), 100);\r\n    const maxTorque = Math.max(...dataToDisplay.map(d => d.torque), 100);\r\n    const maxPower = Math.max(maxHP, maxTorque);\r\n\r\n    // Draw grid\r\n    ctx.strokeStyle = '#333';\r\n    ctx.lineWidth = 1;\r\n    \r\n    // Vertical grid lines\r\n    for (let rpm = Math.ceil(minRpm / 500) * 500; rpm <= maxRpm; rpm += 500) {\r\n      const x = leftPadding + ((rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, topPadding);\r\n      ctx.lineTo(x, height - bottomPadding);\r\n      ctx.stroke();\r\n      \r\n      ctx.fillStyle = '#666';\r\n      ctx.font = `${Math.max(8, width * 0.010)}px Arial`;\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(rpm.toString(), x, height - bottomPadding + 20);\r\n    }\r\n\r\n    // Horizontal grid lines\r\n    for (let power = 0; power <= maxPower; power += 50) {\r\n      const y = height - bottomPadding - (power / maxPower) * graphHeight;\r\n      ctx.beginPath();\r\n      ctx.moveTo(leftPadding, y);\r\n      ctx.lineTo(width - rightPadding, y);\r\n      ctx.stroke();\r\n      \r\n      ctx.fillStyle = '#666';\r\n      ctx.font = `${Math.max(8, width * 0.010)}px Arial`;\r\n      ctx.textAlign = 'right';\r\n      ctx.fillText(power.toString(), leftPadding - 10, y + 5);\r\n    }\r\n\r\n    // Draw axes\r\n    ctx.strokeStyle = '#666';\r\n    ctx.lineWidth = 2;\r\n    ctx.beginPath();\r\n    ctx.moveTo(leftPadding, topPadding);\r\n    ctx.lineTo(leftPadding, height - bottomPadding);\r\n    ctx.lineTo(width - rightPadding, height - bottomPadding);\r\n    ctx.stroke();\r\n\r\n    // Draw HP line\r\n    if (dataToDisplay.length > 1) {\r\n      ctx.strokeStyle = '#ff4444';\r\n      ctx.lineWidth = dataSource.includes('smoothed') ? 4 : 3;\r\n      ctx.beginPath();\r\n      \r\n      dataToDisplay.forEach((point, index) => {\r\n        const x = leftPadding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - bottomPadding - (point.horsepower / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Draw Torque line\r\n    if (dataToDisplay.length > 1) {\r\n      ctx.strokeStyle = '#44ff44';\r\n      ctx.lineWidth = dataSource.includes('smoothed') ? 4 : 3;\r\n      ctx.beginPath();\r\n      \r\n      dataToDisplay.forEach((point, index) => {\r\n        const x = leftPadding + ((point.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n        const y = height - bottomPadding - (point.torque / maxPower) * graphHeight;\r\n        \r\n        if (index === 0) {\r\n          ctx.moveTo(x, y);\r\n        } else {\r\n          ctx.lineTo(x, y);\r\n        }\r\n      });\r\n      ctx.stroke();\r\n    }\r\n\r\n    // Current point indicator during live run\r\n    if (isRunning && liveGraphData.length > 0) {\r\n      const currentPoint = liveGraphData[liveGraphData.length - 1];\r\n      const x = leftPadding + ((currentPoint.rpm - minRpm) / (maxRpm - minRpm)) * graphWidth;\r\n      const yHP = height - bottomPadding - (currentPoint.horsepower / maxPower) * graphHeight;\r\n      const yTQ = height - bottomPadding - (currentPoint.torque / maxPower) * graphHeight;\r\n      \r\n      const indicatorSize = 5;\r\n      \r\n      ctx.fillStyle = '#ff4444';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yHP, indicatorSize, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      \r\n      ctx.fillStyle = '#44ff44';\r\n      ctx.beginPath();\r\n      ctx.arc(x, yTQ, indicatorSize, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    }\r\n\r\n    // Legend\r\n    const legendFontSize = Math.max(8, width * 0.010);\r\n    ctx.fillStyle = '#ff4444';\r\n    ctx.font = `bold ${legendFontSize}px Arial`;\r\n    ctx.textAlign = 'left';\r\n    ctx.fillText('■ Horsepower', width - 160, 25);\r\n    \r\n    ctx.fillStyle = '#44ff44';\r\n    ctx.fillText('■ Torque', width - 160, 25 + legendFontSize + 6);\r\n    \r\n    ctx.fillStyle = '#a0aec0';\r\n    ctx.font = `${Math.max(6, width * 0.008)}px Arial`;\r\n    ctx.fillText(`Data: ${dataSource}`, width - 160, 25 + (legendFontSize + 6) * 2);\r\n\r\n    // Axis labels\r\n    const axisLabelSize = Math.max(8, width * 0.010);\r\n    ctx.fillStyle = '#ccc';\r\n    ctx.font = `bold ${axisLabelSize}px Arial`;\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('RPM', width / 2, height - 15);\r\n    \r\n    ctx.save();\r\n    ctx.translate(20, height / 2);\r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.textAlign = 'center';\r\n    ctx.fillText('HP / TQ', 0, 0);\r\n    ctx.restore();\r\n\r\n  }, [liveGraphData, smoothedData, smoothingLevel, isRunning, dynoResults]);\r\n\r\n  // Styles\r\n  const inputStyle = {\r\n    width: '95%',\r\n    padding: '8px 12px',\r\n    border: '1px solid #4a5568',\r\n    borderRadius: '4px',\r\n    fontSize: '14px',\r\n    backgroundColor: '#2d3748',\r\n    color: '#e2e8f0'\r\n  };\r\n\r\n  const labelStyle = {\r\n    display: 'block',\r\n    fontSize: '14px',\r\n    fontWeight: '600',\r\n    color: '#e2e8f0',\r\n    marginBottom: '6px'\r\n  };\r\n\r\n  const sectionStyle = {\r\n    marginBottom: '20px',\r\n    padding: '15px',\r\n    backgroundColor: '#2d3748',\r\n    borderRadius: '6px',\r\n    border: '1px solid #4a5568'\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      minHeight: '100vh',\r\n      backgroundColor: '#0f1419',\r\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif'\r\n    }}>\r\n      \r\n      {/* Debug Panel */}\r\n      {debugInfo.lastSmoothingCall && (\r\n        <div style={{\r\n          position: 'fixed',\r\n          top: '10px',\r\n          right: '10px',\r\n          background: 'rgba(0,0,0,0.9)',\r\n          color: 'white',\r\n          padding: '12px',\r\n          borderRadius: '6px',\r\n          fontSize: '10px',\r\n          fontFamily: 'monospace',\r\n          zIndex: 1000,\r\n          maxWidth: '320px',\r\n          border: '1px solid #4a5568'\r\n        }}>\r\n          <div style={{ color: '#68d391', fontWeight: 'bold', marginBottom: '6px' }}>\r\n            🔧 Debug Panel\r\n          </div>\r\n          \r\n          <div><strong>Smoothing:</strong> L{debugInfo.lastSmoothingCall.level} at {debugInfo.lastSmoothingCall.timestamp}</div>\r\n          \r\n          {debugInfo.apiResponse && (\r\n            <div><strong>API:</strong> {debugInfo.apiResponse.status} {debugInfo.apiResponse.ok ? '✅' : '❌'}</div>\r\n          )}\r\n          \r\n          {debugInfo.dataProcessing && (\r\n            <div>\r\n              <div><strong>Source:</strong> {debugInfo.dataProcessing.source}</div>\r\n              <div><strong>Points:</strong> {debugInfo.dataProcessing.points}</div>\r\n              {debugInfo.dataProcessing.peaks && (\r\n                <div><strong>Peaks:</strong> HP={debugInfo.dataProcessing.peaks.maxHP}, TQ={debugInfo.dataProcessing.peaks.maxTorque}</div>\r\n              )}\r\n              {debugInfo.dataProcessing.changes && (\r\n                <div style={{ color: '#68d391' }}>\r\n                  <strong>Changes:</strong> HP{debugInfo.dataProcessing.changes.hp >= 0 ? '+' : ''}{debugInfo.dataProcessing.changes.hp}, \r\n                  TQ{debugInfo.dataProcessing.changes.tq >= 0 ? '+' : ''}{debugInfo.dataProcessing.changes.tq}\r\n                </div>\r\n              )}\r\n              <div><strong>Time:</strong> {debugInfo.dataProcessing.processingTime}ms</div>\r\n            </div>\r\n          )}\r\n          \r\n          <div style={{ marginTop: '6px' }}>\r\n            <div><strong>State:</strong> Level={smoothingLevel}, Data={smoothedData.length}, Peaks={smoothedPeaks ? 'yes' : 'no'}</div>\r\n          </div>\r\n          \r\n          {debugInfo.errors.length > 0 && (\r\n            <div style={{ marginTop: '6px', color: '#ff6b6b' }}>\r\n              <div><strong>Last Error:</strong></div>\r\n              <div style={{ fontSize: '9px' }}>{debugInfo.errors[debugInfo.errors.length - 1]?.message}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Header */}\r\n      <div style={{\r\n        backgroundColor: '#1a2332',\r\n        color: 'white',\r\n        padding: '16px 0',\r\n        textAlign: 'center',\r\n        boxShadow: '0 2px 10px rgba(0,0,0,0.3)',\r\n        borderBottom: '1px solid #2d3748'\r\n      }}>\r\n        <h1 style={{ \r\n          margin: 0, \r\n          fontSize: '24px', \r\n          fontWeight: '700',\r\n          letterSpacing: '-0.5px',\r\n          background: 'linear-gradient(135deg, #ff4444, #44ff44, #4488ff)',\r\n          WebkitBackgroundClip: 'text',\r\n          WebkitTextFillColor: 'transparent',\r\n          backgroundClip: 'text'\r\n        }}>\r\n          Tyler's Virtual Dyno\r\n        </h1>\r\n        <p style={{ \r\n          margin: '6px 0 0 0', \r\n          fontSize: '14px', \r\n          opacity: 0.8,\r\n          fontWeight: '400',\r\n          color: '#a0aec0'\r\n        }}>\r\n          Personal Dyno Analysis & Simulation\r\n        </p>\r\n      </div>\r\n\r\n      {/* Main Content Grid */}\r\n      <div style={{\r\n        display: 'grid',\r\n        gridTemplateColumns: '260px 1fr',\r\n        height: 'calc(100vh - 100px)',\r\n        gap: '0'\r\n      }}>\r\n        \r\n        {/* Left Panel - Settings */}\r\n        <div style={{\r\n          backgroundColor: '#1a202c',\r\n          borderRight: '1px solid #2d3748',\r\n          padding: '40px 10px',\r\n          overflowY: 'auto'\r\n        }}>\r\n          \r\n          {/* File Upload */}\r\n          <div style={sectionStyle}>\r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '12px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, flex: 1 }}>Upload Datalog</label>\r\n              <button \r\n                onClick={() => fileInputRef.current?.click()}\r\n                style={{\r\n                  padding: '8px 16px',\r\n                  backgroundColor: csvFile ? '#38a169' : '#3182ce',\r\n                  color: 'white',\r\n                  border: 'none',\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '14px',\r\n                  fontWeight: '500',\r\n                  transition: 'all 0.2s ease'\r\n                }}\r\n              >\r\n                {csvFile ? '✅ Change' : '📂 Select'}\r\n              </button>\r\n              <input \r\n                type=\"file\" \r\n                accept=\".csv\"\r\n                onChange={handleFileUpload}\r\n                ref={fileInputRef}\r\n                style={{ display: 'none' }}\r\n              />\r\n            </div>\r\n            \r\n            {csvFile && (\r\n              <div style={{\r\n                fontSize: '12px',\r\n                color: '#a0aec0',\r\n                backgroundColor: '#2d3748',\r\n                padding: '8px',\r\n                borderRadius: '4px',\r\n                border: '1px solid #4a5568',\r\n                wordBreak: 'break-all'\r\n              }}>\r\n                📄 {csvFile.name} ({csvData.length} valid points)\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Vehicle Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 14px 0', fontSize: '15px', color: '#68d391' }}>Vehicle Setup</h3>\r\n            \r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, minWidth: '70px', fontSize: '13px' }}>Car:</label>\r\n              <select \r\n                value={dynoSettings.selectedCar}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, selectedCar: e.target.value }))}\r\n                style={{ ...inputStyle, flex: 1, fontSize: '13px' }}\r\n              >\r\n                {carOptions.map(car => (\r\n                  <option key={car.value} value={car.value}>{car.label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Gear Used:</label>\r\n              <div style={{ display: 'flex', gap: '6px' }}>\r\n                {[3, 4, 5].map(gear => (\r\n                  <button\r\n                    key={gear}\r\n                    onClick={() => setDynoSettings(prev => ({ ...prev, gear }))}\r\n                    style={{\r\n                      flex: 1,\r\n                      padding: '8px',\r\n                      border: dynoSettings.gear === gear ? '2px solid #3182ce' : '1px solid #4a5568',\r\n                      borderRadius: '4px',\r\n                      backgroundColor: dynoSettings.gear === gear ? '#2c5282' : '#2d3748',\r\n                      color: dynoSettings.gear === gear ? 'white' : '#a0aec0',\r\n                      cursor: 'pointer',\r\n                      fontSize: '13px',\r\n                      fontWeight: dynoSettings.gear === gear ? '600' : '400',\r\n                      transition: 'all 0.2s ease'\r\n                    }}\r\n                  >\r\n                    {gear}rd\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Vehicle Weight (lbs):</label>\r\n              <input\r\n                type=\"number\"\r\n                value={dynoSettings.weight}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, weight: parseInt(e.target.value) || 0 }))}\r\n                style={{ ...inputStyle, fontSize: '13px', padding: '6px 8px' }}\r\n                min=\"1000\"\r\n                max=\"10000\"\r\n                step=\"50\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Dyno Settings */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 14px 0', fontSize: '15px', color: '#68d391' }}>Dyno Type</h3>\r\n            \r\n            <div style={{ display: 'flex', alignItems: 'center', gap: '10px', marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, margin: 0, minWidth: '70px', fontSize: '13px' }}>Type:</label>\r\n              <select \r\n                value={dynoSettings.dynoType}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, dynoType: e.target.value }))}\r\n                style={{ ...inputStyle, flex: 1, fontSize: '13px' }}\r\n              >\r\n                {Object.entries(dynoTypes).map(([key, dyno]) => (\r\n                  <option key={key} value={key}>{dyno.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Environmental */}\r\n          <div style={sectionStyle}>\r\n            <h3 style={{ margin: '0 0 14px 0', fontSize: '15px', color: '#68d391' }}>Environment</h3>\r\n            \r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Temperature: {dynoSettings.temperature}°F</label>\r\n              <input \r\n                type=\"range\" \r\n                min=\"50\" \r\n                max=\"110\" \r\n                value={dynoSettings.temperature}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, temperature: parseInt(e.target.value) }))}\r\n                style={{ width: '100%', margin: '4px 0' }}\r\n              />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '11px', color: '#718096' }}>\r\n                <span>50°F</span><span>110°F</span>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginBottom: '14px' }}>\r\n              <label style={{ ...labelStyle, fontSize: '13px' }}>Humidity: {dynoSettings.humidity}%</label>\r\n              <input \r\n                type=\"range\" \r\n                min=\"10\" \r\n                max=\"90\" \r\n                value={dynoSettings.humidity}\r\n                onChange={(e) => setDynoSettings(prev => ({ ...prev, humidity: parseInt(e.target.value) }))}\r\n                style={{ width: '100%', margin: '4px 0' }}\r\n              />\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '11px', color: '#718096' }}>\r\n                <span>10%</span><span>90%</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Panel - Graph Area */}\r\n        <div style={{\r\n          backgroundColor: '#1a202c',\r\n          padding: '20px',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          position: 'relative'\r\n        }}>\r\n          \r\n          {(isRunning || dynoResults) ? (\r\n            <div>\r\n              {/* Stats Display */}\r\n              <div style={{\r\n                backgroundColor: '#1a1a1a',\r\n                color: 'white',\r\n                padding: '16px',\r\n                borderRadius: '8px',\r\n                marginBottom: '16px',\r\n                display: 'grid',\r\n                gridTemplateColumns: '1fr 1fr 1fr',\r\n                gap: '16px',\r\n                textAlign: 'center'\r\n              }}>\r\n                {/* HP */}\r\n                <div>\r\n                  <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#ff4444' }}>\r\n                    {(() => {\r\n                      if (isRunning) return currentPeaks.currentHP;\r\n                      if (smoothingLevel > 0 && smoothedPeaks) return smoothedPeaks.maxHP;\r\n                      return dynoResults?.peaks?.maxHP || 0;\r\n                    })()}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#ccc', marginBottom: '3px' }}>\r\n                    {isRunning ? 'CURRENT' : 'PEAK'} HP\r\n                    {!isRunning && smoothingLevel > 0 && (\r\n                      <span style={{ color: '#68d391', marginLeft: '4px' }}>(S{smoothingLevel})</span>\r\n                    )}\r\n                  </div>\r\n                  {!isRunning && (\r\n                    <div style={{ fontSize: '9px', color: '#888' }}>\r\n                      @ {smoothingLevel > 0 && smoothedPeaks ? smoothedPeaks.maxHPRpm : (dynoResults?.peaks?.maxHPRpm || 0)} RPM\r\n                      {smoothingLevel > 0 && smoothedPeaks && dynoResults?.peaks && (\r\n                        <div style={{ color: smoothedPeaks.maxHP > dynoResults.peaks.maxHP ? '#68d391' : '#ff6b6b' }}>\r\n                          {smoothedPeaks.maxHP > dynoResults.peaks.maxHP ? '+' : ''}{smoothedPeaks.maxHP - dynoResults.peaks.maxHP} HP\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Torque */}\r\n                <div>\r\n                  <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#44ff44' }}>\r\n                    {(() => {\r\n                      if (isRunning) return currentPeaks.currentTorque;\r\n                      if (smoothingLevel > 0 && smoothedPeaks) return smoothedPeaks.maxTorque;\r\n                      return dynoResults?.peaks?.maxTorque || 0;\r\n                    })()}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#ccc', marginBottom: '3px' }}>\r\n                    {isRunning ? 'CURRENT' : 'PEAK'} LB-FT\r\n                    {!isRunning && smoothingLevel > 0 && (\r\n                      <span style={{ color: '#68d391', marginLeft: '4px' }}>(S{smoothingLevel})</span>\r\n                    )}\r\n                  </div>\r\n                  {!isRunning && (\r\n                    <div style={{ fontSize: '9px', color: '#888' }}>\r\n                      @ {smoothingLevel > 0 && smoothedPeaks ? smoothedPeaks.maxTorqueRpm : (dynoResults?.peaks?.maxTorqueRpm || 0)} RPM\r\n                      {smoothingLevel > 0 && smoothedPeaks && dynoResults?.peaks && (\r\n                        <div style={{ color: smoothedPeaks.maxTorque > dynoResults.peaks.maxTorque ? '#68d391' : '#ff6b6b' }}>\r\n                          {smoothedPeaks.maxTorque > dynoResults.peaks.maxTorque ? '+' : ''}{smoothedPeaks.maxTorque - dynoResults.peaks.maxTorque} TQ\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                {/* Boost */}\r\n                <div>\r\n                  <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#4488ff' }}>\r\n                    {(() => {\r\n                      if (isRunning) return currentPeaks.maxBoost;\r\n                      // Always show original boost (never smoothed)\r\n                      const originalBoost = Math.max(...(dynoResults?.processedData?.map(d => d.boost) || [0]));\r\n                      return Math.round(originalBoost * 10) / 10;\r\n                    })()}\r\n                  </div>\r\n                  <div style={{ fontSize: '11px', color: '#ccc', marginBottom: '3px' }}>\r\n                    PEAK BOOST PSI\r\n                    {!isRunning && smoothingLevel > 0 && (\r\n                      <span style={{ color: '#a0aec0', marginLeft: '4px' }}>(Raw)</span>\r\n                    )}\r\n                  </div>\r\n                  <div style={{ fontSize: '9px', color: '#888' }}>\r\n                    {isRunning ? 'LIVE' : 'SENSOR DATA'}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Graph Area */}\r\n              <div style={{ \r\n                flex: 1, \r\n                position: 'relative',\r\n                height: 'calc(100vh - 280px)',\r\n                minHeight: '400px',\r\n                maxHeight: '600px'\r\n              }}>\r\n                {/* Smoothing Control */}\r\n                {dynoResults && !isRunning && (\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '8px',\r\n                    left: '8px',\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    gap: '8px',\r\n                    backgroundColor: 'rgba(26, 32, 44, 0.9)',\r\n                    padding: '6px 10px',\r\n                    borderRadius: '6px',\r\n                    border: '1px solid #4a5568',\r\n                    zIndex: 10\r\n                  }}>\r\n                    <label style={{ fontSize: '12px', color: '#a0aec0', fontWeight: '500' }}>\r\n                      Smoothing:\r\n                    </label>\r\n                    <select\r\n                      value={smoothingLevel}\r\n                      onChange={(e) => {\r\n                        const newLevel = parseInt(e.target.value);\r\n                        console.log(`🎚️ User selected smoothing level: ${newLevel}`);\r\n                        handleSmoothingChange(newLevel);\r\n                      }}\r\n                      style={{\r\n                        padding: '4px 8px',\r\n                        border: '1px solid #4a5568',\r\n                        borderRadius: '4px',\r\n                        fontSize: '12px',\r\n                        backgroundColor: '#1a202c',\r\n                        color: '#e2e8f0'\r\n                      }}\r\n                    >\r\n                      {smoothingOptions.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n                \r\n                <canvas\r\n                  ref={canvasRef}\r\n                  style={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    border: '1px solid #4a5568',\r\n                    borderRadius: '6px',\r\n                    backgroundColor: '#1a1a1a'\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div style={{\r\n              flex: 1,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              backgroundColor: '#2d3748',\r\n              borderRadius: '8px',\r\n              border: '2px dashed #4a5568',\r\n              minHeight: '400px'\r\n            }}>\r\n              <div style={{ textAlign: 'center', color: '#a0aec0' }}>\r\n                <div style={{ fontSize: '48px', marginBottom: '16px' }}>📊</div>\r\n                <h3 style={{ margin: '0 0 8px 0', fontSize: '18px', color: '#68d391' }}>\r\n                  Ready for Dyno Run\r\n                </h3>\r\n                <p style={{ margin: '0 0 20px 0', fontSize: '14px' }}>\r\n                  Upload a datalog file and configure your settings to begin\r\n                </p>\r\n                \r\n                <button \r\n                  onClick={runVirtualDyno}\r\n                  disabled={!csvData.length || isRunning}\r\n                  style={{\r\n                    padding: '16px 32px',\r\n                    backgroundColor: isRunning ? '#4a5568' : (!csvData.length ? '#4a5568' : '#e53e3e'),\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '8px',\r\n                    fontSize: '16px',\r\n                    fontWeight: '700',\r\n                    cursor: (!csvData.length || isRunning) ? 'not-allowed' : 'pointer',\r\n                    transition: 'all 0.2s ease',\r\n                    boxShadow: '0 4px 12px rgba(0,0,0,0.3)',\r\n                    minWidth: '200px'\r\n                  }}\r\n                >\r\n                  {isRunning ? '🏃 PROCESSING...' : (!csvData.length ? 'Upload File First' : 'START VIRTUAL DYNO')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VirtualDyno;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,iBAAA,EAAAC,mBAAA,EAAAC,mBAAA;EACxB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC;IAC/CwB,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAE,CAAC;IACXC,SAAS,EAAE,CAAC;IACZC,aAAa,EAAE,CAAC;IAChBC,YAAY,EAAE;EAChB,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC;IAC/CgC,WAAW,EAAE,aAAa;IAC1BC,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,eAAe;IACzBC,MAAM,EAAE,IAAI;IACZC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAM,CAAC4C,SAAS,EAAEC,YAAY,CAAC,GAAG7C,QAAQ,CAAC;IACzC8C,iBAAiB,EAAE,IAAI;IACvBC,WAAW,EAAE,IAAI;IACjBC,cAAc,EAAE,IAAI;IACpBC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAGjD,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMkD,SAAS,GAAGlD,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMmD,UAAU,GAAG,CACjB;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAc,CAAC,EAC9C;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAa,CAAC,EACrC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAa,CAAC,EACrC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAiB,CAAC,EACzC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAc,CAAC,EACtC;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAgB,CAAC,CAC9C;EAED,MAAMC,SAAS,GAAG;IAChBC,aAAa,EAAE;MAAEC,IAAI,EAAE,eAAe;MAAEC,UAAU,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACzEC,YAAY,EAAE;MAAEH,IAAI,EAAE,cAAc;MAAEC,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACxEE,QAAQ,EAAE;MAAEJ,IAAI,EAAE,UAAU;MAAEC,UAAU,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK;EACjE,CAAC;EAED,MAAMG,gBAAgB,GAAG,CACvB;IAAET,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAe,CAAC,EACnC;IAAED,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAY,CAAC,EAChC;IAAED,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAe,CAAC,EACnC;IAAED,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAa,CAAC,EACjC;IAAED,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAY,CAAC,EAChC;IAAED,KAAK,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAc,CAAC,CACnC;;EAED;EACA,MAAMS,sBAAsB,GAAIC,IAAI,IAAK;IACvC,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAE3C,MAAMzC,KAAK,GAAG0C,IAAI,CAACC,GAAG,CAAC,GAAGH,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAAC,CAAC;IACtD,MAAM7C,SAAS,GAAGyC,IAAI,CAACC,GAAG,CAAC,GAAGH,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACE,MAAM,CAAC,CAAC;IACtD,MAAM7C,QAAQ,GAAGwC,IAAI,CAACC,GAAG,CAAC,GAAGH,IAAI,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,KAAK,CAAC,CAAC;IACpD,MAAMC,UAAU,GAAGT,IAAI,CAACU,IAAI,CAACL,CAAC,IAAIA,CAAC,CAACC,UAAU,KAAK9C,KAAK,CAAC;IACzD,MAAMmD,cAAc,GAAGX,IAAI,CAACU,IAAI,CAACL,CAAC,IAAIA,CAAC,CAACE,MAAM,KAAK9C,SAAS,CAAC;IAE7D,OAAO;MACLD,KAAK;MACLC,SAAS;MACTC,QAAQ;MACRkD,QAAQ,EAAE,CAAAH,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEI,GAAG,KAAI,CAAC;MAC9BC,YAAY,EAAE,CAAAH,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEE,GAAG,KAAI;IACvC,CAAC;EACH,CAAC;EAED,MAAME,QAAQ,GAAIC,KAAK,IAAK;IAC1BC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CnC,YAAY,CAACqC,IAAI,KAAK;MACpB,GAAGA,IAAI;MACPjC,MAAM,EAAE,CAAC,GAAGiC,IAAI,CAACjC,MAAM,CAACkC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;QAAE;QACnCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;QAC1CC,OAAO,EAAEP,KAAK,CAACQ,QAAQ,CAAC,CAAC;QACzBC,KAAK,EAAET,KAAK,CAACS;MACf,CAAC;IACH,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAI;MACF,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAI,CAACF,IAAI,EAAE;MAEXX,OAAO,CAACc,GAAG,CAAC,mBAAmB,EAAEH,IAAI,CAACnC,IAAI,EAAE,IAAI,CAACmC,IAAI,CAACI,IAAI,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC;MAEpFtF,UAAU,CAACiF,IAAI,CAAC;MAChB7E,cAAc,CAAC,IAAI,CAAC;MACpBM,gBAAgB,CAAC,EAAE,CAAC;MACpBoB,eAAe,CAAC,EAAE,CAAC;MACnBF,iBAAiB,CAAC,CAAC,CAAC;MAEpB,MAAM2D,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,IAAI;UACF,MAAMC,GAAG,GAAGD,CAAC,CAACR,MAAM,CAACU,MAAM;UAC3B,MAAMC,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,IAAI,CAAC;UAC7B,MAAMC,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACrC,GAAG,CAACuC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;UAEtD3B,OAAO,CAACc,GAAG,CAAC,uBAAuB,EAAEW,OAAO,CAAC;UAE7C,MAAM1C,IAAI,GAAGwC,KAAK,CAACrB,KAAK,CAAC,CAAC,CAAC,CACxB0B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC3C,MAAM,GAAG,CAAC,CAAC,CACtCG,GAAG,CAAC0C,IAAI,IAAI;YACX,MAAMC,MAAM,GAAGD,IAAI,CAACL,KAAK,CAAC,GAAG,CAAC;YAC9B,MAAMO,GAAG,GAAG,CAAC,CAAC;YACdN,OAAO,CAACO,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;cAAA,IAAAC,aAAA;cACjCJ,GAAG,CAACE,MAAM,CAAC,IAAAE,aAAA,GAAGL,MAAM,CAACI,KAAK,CAAC,cAAAC,aAAA,uBAAbA,aAAA,CAAeR,IAAI,CAAC,CAAC;YACrC,CAAC,CAAC;YACF,OAAOI,GAAG;UACZ,CAAC,CAAC,CACDH,MAAM,CAACG,GAAG,IAAI;YACb,MAAMnC,GAAG,GAAGwC,QAAQ,CAACL,GAAG,CAAC,WAAW,CAAC,IAAIA,GAAG,CAAC,KAAK,CAAC,IAAIA,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAChF,MAAMM,GAAG,GAAGC,UAAU,CAACP,GAAG,CAAC,oBAAoB,CAAC,IAAIA,GAAG,CAAC,KAAK,CAAC,IAAIA,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC3F,MAAMQ,IAAI,GAAGD,UAAU,CAACP,GAAG,CAAC,wBAAwB,CAAC,IAAIA,GAAG,CAAC,MAAM,CAAC,IAAIA,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;YAEhG;YACA,OAAOnC,GAAG,GAAG,IAAI,KAAKyC,GAAG,GAAG,CAAC,IAAIE,IAAI,GAAG,IAAI,CAAC;UAC/C,CAAC,CAAC;UAEJ3G,UAAU,CAACmD,IAAI,CAAC;UAChBiB,OAAO,CAACc,GAAG,CAAC,YAAY/B,IAAI,CAACC,MAAM,6BAA6B,CAAC;QAEnE,CAAC,CAAC,OAAOe,KAAK,EAAE;UACdD,QAAQ,CAAC,IAAI0C,KAAK,CAAC,uBAAuBzC,KAAK,CAACO,OAAO,EAAE,CAAC,CAAC;UAC3DmC,KAAK,CAAC,uDAAuD,CAAC;QAChE;MACF,CAAC;MAEDxB,MAAM,CAACyB,OAAO,GAAG,MAAM;QACrB5C,QAAQ,CAAC,IAAI0C,KAAK,CAAC,qBAAqB,CAAC,CAAC;QAC1CC,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC;MAEDxB,MAAM,CAAC0B,UAAU,CAAChC,IAAI,CAAC;IAEzB,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdD,QAAQ,CAACC,KAAK,CAAC;MACf0C,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;;EAED;EACA,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACnH,OAAO,EAAE;MACZ,MAAM,IAAI+G,KAAK,CAAC,sBAAsB,CAAC;IACzC;IAEA,IAAI;MACFxC,OAAO,CAACc,GAAG,CAAC,+BAA+B,CAAC;MAE5C,MAAM+B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtH,OAAO,CAAC;MAChCoH,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAElG,YAAY,CAACE,WAAW,CAAC;MACzD8F,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAElG,YAAY,CAACK,MAAM,CAACqD,QAAQ,CAAC,CAAC,CAAC;MACzDsC,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAElG,YAAY,CAACG,IAAI,CAACuD,QAAQ,CAAC,CAAC,CAAC;MACrDsC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,GAAGlG,YAAY,CAACI,QAAQ,KAAKJ,YAAY,CAACM,WAAW,OAAON,YAAY,CAACO,QAAQ,YAAY,CAAC;MACvHyF,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC;MAEpC/C,OAAO,CAACc,GAAG,CAAC,uBAAuB,EAAE;QACnCH,IAAI,EAAElF,OAAO,CAAC+C,IAAI;QAClBwE,YAAY,EAAEnG,YAAY,CAACE,WAAW;QACtCG,MAAM,EAAEL,YAAY,CAACK,MAAM;QAC3BF,IAAI,EAAEH,YAAY,CAACG;MACrB,CAAC,CAAC;MAEF,MAAMiG,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEP;QACN;MACF,CAAC,CAAC;MAEF7C,OAAO,CAACc,GAAG,CAAC,6BAA6B,EAAEmC,QAAQ,CAACI,MAAM,EAAEJ,QAAQ,CAACK,UAAU,CAAC;MAEhF,IAAI,CAACL,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIjB,KAAK,CAAC,sBAAsBS,QAAQ,CAACI,MAAM,MAAMG,SAAS,EAAE,CAAC;MACzE;MAEA,MAAME,cAAc,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAC5C3D,OAAO,CAACc,GAAG,CAAC,6BAA6B,EAAE4C,cAAc,CAAC;MAE1D,OAAOA,cAAc;IAEvB,CAAC,CAAC,OAAO3D,KAAK,EAAE;MACd,IAAIA,KAAK,CAACvB,IAAI,KAAK,WAAW,IAAIuB,KAAK,CAACO,OAAO,CAACsD,QAAQ,CAAC,OAAO,CAAC,EAAE;QACjE,MAAM,IAAIpB,KAAK,CAAC,mFAAmF,CAAC;MACtG;MACA,MAAMzC,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAM8D,kBAAkB,GAAG,MAAOC,KAAK,IAAK;IAC1C,IAAI;MAAA,IAAAC,qBAAA;MACF/D,OAAO,CAACc,GAAG,CAAC,qCAAqCgD,KAAK,KAAK,CAAC;MAE5D,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCY,KAAK,EAAE,CAAC;MAE5E,IAAI,CAACb,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIf,KAAK,CAAC,oCAAoCS,QAAQ,CAACI,MAAM,IAAIJ,QAAQ,CAACK,UAAU,EAAE,CAAC;MAC/F;MAEA,MAAMU,UAAU,GAAG,MAAMf,QAAQ,CAACU,IAAI,CAAC,CAAC;MACxC3D,OAAO,CAACc,GAAG,CAAC,SAAS,EAAAiD,qBAAA,GAAAC,UAAU,CAACC,UAAU,cAAAF,qBAAA,uBAArBA,qBAAA,CAAuB/E,MAAM,KAAI,CAAC,uBAAuB,CAAC;MAE/E,OAAOgF,UAAU;IAEnB,CAAC,CAAC,OAAOjE,KAAK,EAAE;MACd,MAAM,IAAIyC,KAAK,CAAC,iCAAiCzC,KAAK,CAACO,OAAO,EAAE,CAAC;IACnE;EACF,CAAC;;EAED;EACA,MAAM4D,qBAAqB,GAAG,MAAOC,QAAQ,IAAK;IAChD,IAAI,CAACtI,WAAW,IAAI,CAACA,WAAW,CAACuI,aAAa,EAAE;MAC9CpE,OAAO,CAACqE,IAAI,CAAC,4CAA4C,CAAC;MAC1D;IACF;IAEA,MAAMC,UAAU,GAAGlE,IAAI,CAACmE,GAAG,CAAC,CAAC;IAC7BvE,OAAO,CAACc,GAAG,CAAC,+BAA+BqD,QAAQ,KAAK,CAAC;IAEzDvG,YAAY,CAACqC,IAAI,KAAK;MACpB,GAAGA,IAAI;MACPpC,iBAAiB,EAAE;QACjB2G,KAAK,EAAEL,QAAQ;QACfhE,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC3C;IACF,CAAC,CAAC,CAAC;IAEH/C,iBAAiB,CAAC6G,QAAQ,CAAC;IAE3B,IAAI;MACF,IAAIA,QAAQ,KAAK,CAAC,EAAE;QAClB;QACA,MAAMM,aAAa,GAAG5I,WAAW,CAACuI,aAAa,CAACjF,GAAG,CAACC,CAAC,KAAK;UACxDQ,GAAG,EAAER,CAAC,CAACQ,GAAG;UACVP,UAAU,EAAEJ,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACuF,EAAE,CAAC;UAC5BrF,MAAM,EAAEL,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACE,MAAM,CAAC;UAC5BC,KAAK,EAAEN,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACG,KAAK,GAAG,EAAE,CAAC,GAAG;QACpC,CAAC,CAAC,CAAC;QAEHS,OAAO,CAACc,GAAG,CAAC,sBAAsB2D,aAAa,CAACzF,MAAM,SAAS,CAAC;QAEhExB,eAAe,CAACiH,aAAa,CAAC;QAC9B,MAAMG,QAAQ,GAAG9F,sBAAsB,CAAC2F,aAAa,CAAC;QACtD/G,gBAAgB,CAACkH,QAAQ,CAAC;QAE1BhH,YAAY,CAACqC,IAAI,KAAK;UACpB,GAAGA,IAAI;UACPlC,cAAc,EAAE;YACd8G,MAAM,EAAE,KAAK;YACbC,MAAM,EAAEL,aAAa,CAACzF,MAAM;YAC5B+F,KAAK,EAAEH,QAAQ;YACfI,cAAc,EAAE5E,IAAI,CAACmE,GAAG,CAAC,CAAC,GAAGD;UAC/B;QACF,CAAC,CAAC,CAAC;MAEL,CAAC,MAAM;QACL;QACA,MAAMW,MAAM,GAAG,uCAAuCpJ,WAAW,CAAC6H,cAAc,CAACwB,EAAE,WAAWf,QAAQ,EAAE;QACxGnE,OAAO,CAACc,GAAG,CAAC,8BAA8BmE,MAAM,EAAE,CAAC;QAEnD,MAAMhC,QAAQ,GAAG,MAAMC,KAAK,CAAC+B,MAAM,CAAC;QAEpCrH,YAAY,CAACqC,IAAI,KAAK;UACpB,GAAGA,IAAI;UACPnC,WAAW,EAAE;YACXqH,GAAG,EAAEF,MAAM;YACX5B,MAAM,EAAEJ,QAAQ,CAACI,MAAM;YACvBE,EAAE,EAAEN,QAAQ,CAACM,EAAE;YACfpD,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;UAC3C;QACF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC4C,QAAQ,CAACM,EAAE,EAAE;UAChB,MAAMC,SAAS,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;UACvC,MAAM,IAAIjB,KAAK,CAAC,wBAAwBS,QAAQ,CAACI,MAAM,MAAMG,SAAS,EAAE,CAAC;QAC3E;QAEA,MAAM4B,QAAQ,GAAG,MAAMnC,QAAQ,CAACU,IAAI,CAAC,CAAC;QACtC3D,OAAO,CAACc,GAAG,CAAC,cAAcsE,QAAQ,CAACpG,MAAM,kBAAkB,CAAC;QAE5D,MAAMyF,aAAa,GAAGW,QAAQ,CAACjG,GAAG,CAACC,CAAC,KAAK;UACvCQ,GAAG,EAAER,CAAC,CAACQ,GAAG;UACVP,UAAU,EAAEJ,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACC,UAAU,CAAC;UACpCC,MAAM,EAAEL,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACE,MAAM,CAAC;UAC5BC,KAAK,EAAEN,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACG,KAAK,GAAG,EAAE,CAAC,GAAG;QACpC,CAAC,CAAC,CAAC;QAEH/B,eAAe,CAACiH,aAAa,CAAC;QAC9B,MAAMY,iBAAiB,GAAGvG,sBAAsB,CAAC2F,aAAa,CAAC;QAC/D/G,gBAAgB,CAAC2H,iBAAiB,CAAC;;QAEnC;QACA,MAAMC,aAAa,GAAGzJ,WAAW,CAACkJ,KAAK;QACvC,MAAMQ,OAAO,GAAG;UACdZ,EAAE,EAAEU,iBAAiB,CAAC9I,KAAK,GAAG+I,aAAa,CAAC/I,KAAK;UACjDiJ,EAAE,EAAEH,iBAAiB,CAAC7I,SAAS,GAAG8I,aAAa,CAAC9I,SAAS;UACzD+C,KAAK,EAAE8F,iBAAiB,CAAC5I,QAAQ,IAAI6I,aAAa,CAAC7I,QAAQ,IAAI,CAAC;QAClE,CAAC;QAEDmB,YAAY,CAACqC,IAAI,KAAK;UACpB,GAAGA,IAAI;UACPlC,cAAc,EAAE;YACd8G,MAAM,EAAE,UAAU;YAClBC,MAAM,EAAEL,aAAa,CAACzF,MAAM;YAC5B+F,KAAK,EAAEM,iBAAiB;YACxBL,cAAc,EAAE5E,IAAI,CAACmE,GAAG,CAAC,CAAC,GAAGD,UAAU;YACvCiB;UACF;QACF,CAAC,CAAC,CAAC;QAEHvF,OAAO,CAACc,GAAG,CAAC,kCAAkCqD,QAAQ,GAAG,CAAC;QAC1DnE,OAAO,CAACc,GAAG,CAAC,SAASwE,aAAa,CAAC/I,KAAK,MAAM8I,iBAAiB,CAAC9I,KAAK,KAAKgJ,OAAO,CAACZ,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGY,OAAO,CAACZ,EAAE,GAAG,CAAC;QACrH3E,OAAO,CAACc,GAAG,CAAC,SAASwE,aAAa,CAAC9I,SAAS,MAAM6I,iBAAiB,CAAC7I,SAAS,KAAK+I,OAAO,CAACC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,GAAGD,OAAO,CAACC,EAAE,GAAG,CAAC;QAC7HxF,OAAO,CAACc,GAAG,CAAC,YAAYwE,aAAa,CAAC7I,QAAQ,IAAI,CAAC,MAAM4I,iBAAiB,CAAC5I,QAAQ,mBAAmB,CAAC;MACzG;IAEF,CAAC,CAAC,OAAOsD,KAAK,EAAE;MACdD,QAAQ,CAACC,KAAK,CAAC;MACf0C,KAAK,CAAC,6BAA6B1C,KAAK,CAACO,OAAO,EAAE,CAAC;IACrD;EACF,CAAC;;EAED;EACA,MAAMmF,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAAC9J,OAAO,CAACqD,MAAM,EAAE;MACnByD,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IAEAzC,OAAO,CAACc,GAAG,CAAC,iCAAiC,CAAC;;IAE9C;IACA9E,YAAY,CAAC,IAAI,CAAC;IAClBE,mBAAmB,CAAC,CAAC,CAAC;IACtBE,gBAAgB,CAAC,EAAE,CAAC;IACpBoB,eAAe,CAAC,EAAE,CAAC;IACnBF,iBAAiB,CAAC,CAAC,CAAC;IACpBhB,eAAe,CAAC;MACdC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC;MACZC,aAAa,EAAE,CAAC;MAChBC,YAAY,EAAE;IAChB,CAAC,CAAC;IAEF,IAAI;MAAA,IAAA8I,mBAAA,EAAAC,oBAAA;MACF;MACA,MAAMjC,cAAc,GAAG,MAAMd,aAAa,CAAC,CAAC;;MAE5C;MACA,MAAMoB,UAAU,GAAG,MAAMH,kBAAkB,CAACH,cAAc,CAACwB,EAAE,CAAC;;MAE9D;MACA,MAAMU,IAAI,GAAGtH,SAAS,CAACzB,YAAY,CAACI,QAAQ,CAAC;MAC7C,MAAM4I,cAAc,GAAG5G,IAAI,CAAC6G,IAAI,CAAC,MAAM,IAAIjJ,YAAY,CAACM,WAAW,GAAG,MAAM,CAAC,CAAC;MAC9E,MAAM4I,kBAAkB,GAAG,CAAC,GAAIlJ,YAAY,CAACO,QAAQ,GAAG,GAAG,GAAG,KAAM;MACpE,MAAM4I,aAAa,GAAGH,cAAc,GAAGE,kBAAkB;MAEzD,MAAM3B,aAAa,GAAG,CAACJ,UAAU,CAACC,UAAU,IAAI,EAAE,EAAE9E,GAAG,CAAC8G,KAAK,IAAI;QAC/D,MAAMvH,QAAQ,GAAG,CAAC,GAAG,CAACO,IAAI,CAACiH,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAGN,IAAI,CAAClH,QAAQ;QAE9D,OAAO;UACLkB,GAAG,EAAEqG,KAAK,CAACrG,GAAG;UACd+E,EAAE,EAAEsB,KAAK,CAAC5G,UAAU,GAAG2G,aAAa,GAAGJ,IAAI,CAACnH,UAAU,GAAGC,QAAQ;UACjEY,MAAM,EAAE2G,KAAK,CAAC3G,MAAM,GAAG0G,aAAa,GAAGtH,QAAQ;UAC/Ca,KAAK,EAAE0G,KAAK,CAAC1G,KAAK;UAClB8C,GAAG,EAAE4D,KAAK,CAACE,WAAW,IAAI,CAAC;UAC3B5D,IAAI,EAAE0D,KAAK,CAAC1D,IAAI,IAAI;QACtB,CAAC;MACH,CAAC,CAAC;;MAEF;MACA6B,aAAa,CAACgC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACzG,GAAG,GAAG0G,CAAC,CAAC1G,GAAG,CAAC;MAE3CI,OAAO,CAACc,GAAG,CAAC,8BAA8BsD,aAAa,CAACpF,MAAM,SAAS,CAAC;;MAExE;MACA,KAAK,IAAIuH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnC,aAAa,CAACpF,MAAM,EAAEuH,CAAC,EAAE,EAAE;QAC7C,MAAMC,YAAY,GAAGpC,aAAa,CAACmC,CAAC,CAAC;;QAErC;QACAnK,gBAAgB,CAAC6D,IAAI,IAAI;UACvB,MAAMwG,OAAO,GAAG,CAAC,GAAGxG,IAAI,EAAE;YACxBL,GAAG,EAAE4G,YAAY,CAAC5G,GAAG;YACrBP,UAAU,EAAEJ,IAAI,CAACyF,KAAK,CAAC8B,YAAY,CAAC7B,EAAE,CAAC;YACvCrF,MAAM,EAAEL,IAAI,CAACyF,KAAK,CAAC8B,YAAY,CAAClH,MAAM,CAAC;YACvCC,KAAK,EAAEN,IAAI,CAACyF,KAAK,CAAC8B,YAAY,CAACjH,KAAK,GAAG,EAAE,CAAC,GAAG;UAC/C,CAAC,CAAC;UACF,OAAOkH,OAAO,CAACL,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACzG,GAAG,GAAG0G,CAAC,CAAC1G,GAAG,CAAC;QAC9C,CAAC,CAAC;;QAEF;QACAtD,eAAe,CAAC2D,IAAI,IAAI;UACtB,MAAM1D,KAAK,GAAG0C,IAAI,CAACC,GAAG,CAACe,IAAI,CAAC1D,KAAK,EAAEiK,YAAY,CAAC7B,EAAE,CAAC;UACnD,MAAMnI,SAAS,GAAGyC,IAAI,CAACC,GAAG,CAACe,IAAI,CAACzD,SAAS,EAAEgK,YAAY,CAAClH,MAAM,CAAC;UAC/D,MAAM7C,QAAQ,GAAGwC,IAAI,CAACC,GAAG,CAACe,IAAI,CAACxD,QAAQ,EAAE+J,YAAY,CAACjH,KAAK,CAAC;UAE5D,OAAO;YACLhD,KAAK,EAAE0C,IAAI,CAACyF,KAAK,CAACnI,KAAK,CAAC;YACxBC,SAAS,EAAEyC,IAAI,CAACyF,KAAK,CAAClI,SAAS,CAAC;YAChCC,QAAQ,EAAEwC,IAAI,CAACyF,KAAK,CAACjI,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE;YACxCC,SAAS,EAAEuC,IAAI,CAACyF,KAAK,CAAC8B,YAAY,CAAC7B,EAAE,CAAC;YACtChI,aAAa,EAAEsC,IAAI,CAACyF,KAAK,CAAC8B,YAAY,CAAClH,MAAM,CAAC;YAC9C1C,YAAY,EAAEqC,IAAI,CAACyF,KAAK,CAAC8B,YAAY,CAACjH,KAAK,GAAG,EAAE,CAAC,GAAG;UACtD,CAAC;QACH,CAAC,CAAC;QAEFrD,mBAAmB,CAACqK,CAAC,CAAC;;QAEtB;QACA,MAAMG,KAAK,GAAGF,YAAY,CAAC5G,GAAG,GAAG,IAAI,GAAG,GAAG,GAC9B4G,YAAY,CAAC5G,GAAG,GAAG,IAAI,GAAG,GAAG,GAC7B4G,YAAY,CAAC5G,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG;QAEhD,MAAM,IAAI+G,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,KAAK,CAAC,CAAC;MAC1D;;MAEA;MACA,MAAM3B,KAAK,GAAG;QACZxI,KAAK,EAAE0C,IAAI,CAACyF,KAAK,CAACzF,IAAI,CAACC,GAAG,CAAC,GAAGkF,aAAa,CAACjF,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACuF,EAAE,CAAC,CAAC,CAAC;QAC5DnI,SAAS,EAAEyC,IAAI,CAACyF,KAAK,CAACzF,IAAI,CAACC,GAAG,CAAC,GAAGkF,aAAa,CAACjF,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC;QACpE7C,QAAQ,EAAEwC,IAAI,CAACyF,KAAK,CAACzF,IAAI,CAACC,GAAG,CAAC,GAAGkF,aAAa,CAACjF,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE;QAC5EI,QAAQ,EAAE,EAAA+F,mBAAA,GAAAtB,aAAa,CAAC3E,IAAI,CAACL,CAAC,IAAIA,CAAC,CAACuF,EAAE,KAAK1F,IAAI,CAACC,GAAG,CAAC,GAAGkF,aAAa,CAACjF,GAAG,CAAC2H,CAAC,IAAIA,CAAC,CAACnC,EAAE,CAAC,CAAC,CAAC,cAAAe,mBAAA,uBAA3EA,mBAAA,CAA6E9F,GAAG,KAAI,CAAC;QAC/FC,YAAY,EAAE,EAAA8F,oBAAA,GAAAvB,aAAa,CAAC3E,IAAI,CAACL,CAAC,IAAIA,CAAC,CAACE,MAAM,KAAKL,IAAI,CAACC,GAAG,CAAC,GAAGkF,aAAa,CAACjF,GAAG,CAAC2H,CAAC,IAAIA,CAAC,CAACxH,MAAM,CAAC,CAAC,CAAC,cAAAqG,oBAAA,uBAAnFA,oBAAA,CAAqF/F,GAAG,KAAI;MAC5G,CAAC;MAED,MAAMmH,YAAY,GAAG;QACnB3C,aAAa;QACbW,KAAK;QACLiC,QAAQ,EAAEnK,YAAY;QACtBoK,QAAQ,EAAExL,OAAO,CAAC+C,IAAI;QACtBkF;MACF,CAAC;MAED5H,cAAc,CAACiL,YAAY,CAAC;;MAE5B;MACA7C,qBAAqB,CAAC,CAAC,CAAC;MAExBlE,OAAO,CAACc,GAAG,CAAC,qCAAqC,CAAC;MAClDd,OAAO,CAACc,GAAG,CAAC,eAAe,EAAEiE,KAAK,CAAC;IAErC,CAAC,CAAC,OAAOhF,KAAK,EAAE;MACdD,QAAQ,CAACC,KAAK,CAAC;MACf0C,KAAK,CAAC,oBAAoB1C,KAAK,CAACO,OAAO,EAAE,CAAC;IAC5C,CAAC,SAAS;MACRtE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,IAAI,CAACiD,SAAS,CAACgJ,OAAO,EAAE;;IAExB;IACA,IAAIC,aAAa;IACjB,IAAIC,UAAU;IAEd,IAAIrL,SAAS,IAAII,aAAa,CAAC6C,MAAM,GAAG,CAAC,EAAE;MACzCmI,aAAa,GAAGhL,aAAa;MAC7BiL,UAAU,GAAG,MAAM;IACrB,CAAC,MAAM,IAAI7J,YAAY,CAACyB,MAAM,GAAG,CAAC,EAAE;MAClCmI,aAAa,GAAG5J,YAAY;MAC5B6J,UAAU,GAAG,aAAa/J,cAAc,EAAE;IAC5C,CAAC,MAAM,IAAIxB,WAAW,aAAXA,WAAW,eAAXA,WAAW,CAAEuI,aAAa,EAAE;MACrC+C,aAAa,GAAGtL,WAAW,CAACuI,aAAa,CAACjF,GAAG,CAACC,CAAC,KAAK;QAClDQ,GAAG,EAAER,CAAC,CAACQ,GAAG;QACVP,UAAU,EAAEJ,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACuF,EAAE,CAAC;QAC5BrF,MAAM,EAAEL,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACE,MAAM,CAAC;QAC5BC,KAAK,EAAEN,IAAI,CAACyF,KAAK,CAACtF,CAAC,CAACG,KAAK,GAAG,EAAE,CAAC,GAAG;MACpC,CAAC,CAAC,CAAC;MACH6H,UAAU,GAAG,WAAW;IAC1B,CAAC,MAAM;MACL;IACF;IAEApH,OAAO,CAACc,GAAG,CAAC,cAAcqG,aAAa,CAACnI,MAAM,gBAAgBoI,UAAU,EAAE,CAAC;IAE3E,MAAMC,MAAM,GAAGnJ,SAAS,CAACgJ,OAAO;IAChC,MAAMI,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,MAAMC,IAAI,GAAGH,MAAM,CAACI,qBAAqB,CAAC,CAAC;IAC3C,MAAMC,gBAAgB,GAAGC,MAAM,CAACD,gBAAgB,IAAI,CAAC;IACrDL,MAAM,CAACO,KAAK,GAAGJ,IAAI,CAACI,KAAK,GAAGF,gBAAgB;IAC5CL,MAAM,CAACQ,MAAM,GAAGL,IAAI,CAACK,MAAM,GAAGH,gBAAgB;IAC9CJ,GAAG,CAACQ,KAAK,CAACJ,gBAAgB,EAAEA,gBAAgB,CAAC;IAE7C,MAAME,KAAK,GAAGJ,IAAI,CAACI,KAAK;IACxB,MAAMC,MAAM,GAAGL,IAAI,CAACK,MAAM;;IAE1B;IACAP,GAAG,CAACS,SAAS,GAAG,SAAS;IACzBT,GAAG,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEJ,KAAK,EAAEC,MAAM,CAAC;;IAEjC;IACA,MAAMI,WAAW,GAAG,EAAE;IACtB,MAAMC,YAAY,GAAG,EAAE;IACvB,MAAMC,UAAU,GAAG,EAAE;IACrB,MAAMC,aAAa,GAAG,EAAE;IACxB,MAAMC,UAAU,GAAGT,KAAK,GAAGK,WAAW,GAAGC,YAAY;IACrD,MAAMI,WAAW,GAAGT,MAAM,GAAGM,UAAU,GAAGC,aAAa;;IAEvD;IACA,MAAMG,MAAM,GAAGtJ,IAAI,CAACC,GAAG,CAAC,GAAGiI,aAAa,CAAChI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACQ,GAAG,CAAC,EAAE,IAAI,CAAC;IAC/D,MAAM4I,MAAM,GAAGvJ,IAAI,CAACwJ,GAAG,CAAC,GAAGtB,aAAa,CAAChI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACQ,GAAG,CAAC,EAAE,IAAI,CAAC;IAC/D,MAAMrD,KAAK,GAAG0C,IAAI,CAACC,GAAG,CAAC,GAAGiI,aAAa,CAAChI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAAC,EAAE,GAAG,CAAC;IACpE,MAAM7C,SAAS,GAAGyC,IAAI,CAACC,GAAG,CAAC,GAAGiI,aAAa,CAAChI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACE,MAAM,CAAC,EAAE,GAAG,CAAC;IACpE,MAAMoJ,QAAQ,GAAGzJ,IAAI,CAACC,GAAG,CAAC3C,KAAK,EAAEC,SAAS,CAAC;;IAE3C;IACA8K,GAAG,CAACqB,WAAW,GAAG,MAAM;IACxBrB,GAAG,CAACsB,SAAS,GAAG,CAAC;;IAEjB;IACA,KAAK,IAAIhJ,GAAG,GAAGX,IAAI,CAAC4J,IAAI,CAACL,MAAM,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE5I,GAAG,IAAI2I,MAAM,EAAE3I,GAAG,IAAI,GAAG,EAAE;MACvE,MAAMkJ,CAAC,GAAGb,WAAW,GAAI,CAACrI,GAAG,GAAG4I,MAAM,KAAKD,MAAM,GAAGC,MAAM,CAAC,GAAIH,UAAU;MACzEf,GAAG,CAACyB,SAAS,CAAC,CAAC;MACfzB,GAAG,CAAC0B,MAAM,CAACF,CAAC,EAAEX,UAAU,CAAC;MACzBb,GAAG,CAAC2B,MAAM,CAACH,CAAC,EAAEjB,MAAM,GAAGO,aAAa,CAAC;MACrCd,GAAG,CAAC4B,MAAM,CAAC,CAAC;MAEZ5B,GAAG,CAACS,SAAS,GAAG,MAAM;MACtBT,GAAG,CAAC6B,IAAI,GAAG,GAAGlK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE0I,KAAK,GAAG,KAAK,CAAC,UAAU;MAClDN,GAAG,CAAC8B,SAAS,GAAG,QAAQ;MACxB9B,GAAG,CAAC+B,QAAQ,CAACzJ,GAAG,CAACW,QAAQ,CAAC,CAAC,EAAEuI,CAAC,EAAEjB,MAAM,GAAGO,aAAa,GAAG,EAAE,CAAC;IAC9D;;IAEA;IACA,KAAK,IAAIkB,KAAK,GAAG,CAAC,EAAEA,KAAK,IAAIZ,QAAQ,EAAEY,KAAK,IAAI,EAAE,EAAE;MAClD,MAAMC,CAAC,GAAG1B,MAAM,GAAGO,aAAa,GAAIkB,KAAK,GAAGZ,QAAQ,GAAIJ,WAAW;MACnEhB,GAAG,CAACyB,SAAS,CAAC,CAAC;MACfzB,GAAG,CAAC0B,MAAM,CAACf,WAAW,EAAEsB,CAAC,CAAC;MAC1BjC,GAAG,CAAC2B,MAAM,CAACrB,KAAK,GAAGM,YAAY,EAAEqB,CAAC,CAAC;MACnCjC,GAAG,CAAC4B,MAAM,CAAC,CAAC;MAEZ5B,GAAG,CAACS,SAAS,GAAG,MAAM;MACtBT,GAAG,CAAC6B,IAAI,GAAG,GAAGlK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE0I,KAAK,GAAG,KAAK,CAAC,UAAU;MAClDN,GAAG,CAAC8B,SAAS,GAAG,OAAO;MACvB9B,GAAG,CAAC+B,QAAQ,CAACC,KAAK,CAAC/I,QAAQ,CAAC,CAAC,EAAE0H,WAAW,GAAG,EAAE,EAAEsB,CAAC,GAAG,CAAC,CAAC;IACzD;;IAEA;IACAjC,GAAG,CAACqB,WAAW,GAAG,MAAM;IACxBrB,GAAG,CAACsB,SAAS,GAAG,CAAC;IACjBtB,GAAG,CAACyB,SAAS,CAAC,CAAC;IACfzB,GAAG,CAAC0B,MAAM,CAACf,WAAW,EAAEE,UAAU,CAAC;IACnCb,GAAG,CAAC2B,MAAM,CAAChB,WAAW,EAAEJ,MAAM,GAAGO,aAAa,CAAC;IAC/Cd,GAAG,CAAC2B,MAAM,CAACrB,KAAK,GAAGM,YAAY,EAAEL,MAAM,GAAGO,aAAa,CAAC;IACxDd,GAAG,CAAC4B,MAAM,CAAC,CAAC;;IAEZ;IACA,IAAI/B,aAAa,CAACnI,MAAM,GAAG,CAAC,EAAE;MAC5BsI,GAAG,CAACqB,WAAW,GAAG,SAAS;MAC3BrB,GAAG,CAACsB,SAAS,GAAGxB,UAAU,CAACxD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;MACvD0D,GAAG,CAACyB,SAAS,CAAC,CAAC;MAEf5B,aAAa,CAACnF,OAAO,CAAC,CAACiE,KAAK,EAAE/D,KAAK,KAAK;QACtC,MAAM4G,CAAC,GAAGb,WAAW,GAAI,CAAChC,KAAK,CAACrG,GAAG,GAAG4I,MAAM,KAAKD,MAAM,GAAGC,MAAM,CAAC,GAAIH,UAAU;QAC/E,MAAMkB,CAAC,GAAG1B,MAAM,GAAGO,aAAa,GAAInC,KAAK,CAAC5G,UAAU,GAAGqJ,QAAQ,GAAIJ,WAAW;QAE9E,IAAIpG,KAAK,KAAK,CAAC,EAAE;UACfoF,GAAG,CAAC0B,MAAM,CAACF,CAAC,EAAES,CAAC,CAAC;QAClB,CAAC,MAAM;UACLjC,GAAG,CAAC2B,MAAM,CAACH,CAAC,EAAES,CAAC,CAAC;QAClB;MACF,CAAC,CAAC;MACFjC,GAAG,CAAC4B,MAAM,CAAC,CAAC;IACd;;IAEA;IACA,IAAI/B,aAAa,CAACnI,MAAM,GAAG,CAAC,EAAE;MAC5BsI,GAAG,CAACqB,WAAW,GAAG,SAAS;MAC3BrB,GAAG,CAACsB,SAAS,GAAGxB,UAAU,CAACxD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;MACvD0D,GAAG,CAACyB,SAAS,CAAC,CAAC;MAEf5B,aAAa,CAACnF,OAAO,CAAC,CAACiE,KAAK,EAAE/D,KAAK,KAAK;QACtC,MAAM4G,CAAC,GAAGb,WAAW,GAAI,CAAChC,KAAK,CAACrG,GAAG,GAAG4I,MAAM,KAAKD,MAAM,GAAGC,MAAM,CAAC,GAAIH,UAAU;QAC/E,MAAMkB,CAAC,GAAG1B,MAAM,GAAGO,aAAa,GAAInC,KAAK,CAAC3G,MAAM,GAAGoJ,QAAQ,GAAIJ,WAAW;QAE1E,IAAIpG,KAAK,KAAK,CAAC,EAAE;UACfoF,GAAG,CAAC0B,MAAM,CAACF,CAAC,EAAES,CAAC,CAAC;QAClB,CAAC,MAAM;UACLjC,GAAG,CAAC2B,MAAM,CAACH,CAAC,EAAES,CAAC,CAAC;QAClB;MACF,CAAC,CAAC;MACFjC,GAAG,CAAC4B,MAAM,CAAC,CAAC;IACd;;IAEA;IACA,IAAInN,SAAS,IAAII,aAAa,CAAC6C,MAAM,GAAG,CAAC,EAAE;MACzC,MAAMwH,YAAY,GAAGrK,aAAa,CAACA,aAAa,CAAC6C,MAAM,GAAG,CAAC,CAAC;MAC5D,MAAM8J,CAAC,GAAGb,WAAW,GAAI,CAACzB,YAAY,CAAC5G,GAAG,GAAG4I,MAAM,KAAKD,MAAM,GAAGC,MAAM,CAAC,GAAIH,UAAU;MACtF,MAAMmB,GAAG,GAAG3B,MAAM,GAAGO,aAAa,GAAI5B,YAAY,CAACnH,UAAU,GAAGqJ,QAAQ,GAAIJ,WAAW;MACvF,MAAMmB,GAAG,GAAG5B,MAAM,GAAGO,aAAa,GAAI5B,YAAY,CAAClH,MAAM,GAAGoJ,QAAQ,GAAIJ,WAAW;MAEnF,MAAMoB,aAAa,GAAG,CAAC;MAEvBpC,GAAG,CAACS,SAAS,GAAG,SAAS;MACzBT,GAAG,CAACyB,SAAS,CAAC,CAAC;MACfzB,GAAG,CAACqC,GAAG,CAACb,CAAC,EAAEU,GAAG,EAAEE,aAAa,EAAE,CAAC,EAAE,CAAC,GAAGzK,IAAI,CAAC2K,EAAE,CAAC;MAC9CtC,GAAG,CAACuC,IAAI,CAAC,CAAC;MAEVvC,GAAG,CAACS,SAAS,GAAG,SAAS;MACzBT,GAAG,CAACyB,SAAS,CAAC,CAAC;MACfzB,GAAG,CAACqC,GAAG,CAACb,CAAC,EAAEW,GAAG,EAAEC,aAAa,EAAE,CAAC,EAAE,CAAC,GAAGzK,IAAI,CAAC2K,EAAE,CAAC;MAC9CtC,GAAG,CAACuC,IAAI,CAAC,CAAC;IACZ;;IAEA;IACA,MAAMC,cAAc,GAAG7K,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE0I,KAAK,GAAG,KAAK,CAAC;IACjDN,GAAG,CAACS,SAAS,GAAG,SAAS;IACzBT,GAAG,CAAC6B,IAAI,GAAG,QAAQW,cAAc,UAAU;IAC3CxC,GAAG,CAAC8B,SAAS,GAAG,MAAM;IACtB9B,GAAG,CAAC+B,QAAQ,CAAC,cAAc,EAAEzB,KAAK,GAAG,GAAG,EAAE,EAAE,CAAC;IAE7CN,GAAG,CAACS,SAAS,GAAG,SAAS;IACzBT,GAAG,CAAC+B,QAAQ,CAAC,UAAU,EAAEzB,KAAK,GAAG,GAAG,EAAE,EAAE,GAAGkC,cAAc,GAAG,CAAC,CAAC;IAE9DxC,GAAG,CAACS,SAAS,GAAG,SAAS;IACzBT,GAAG,CAAC6B,IAAI,GAAG,GAAGlK,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE0I,KAAK,GAAG,KAAK,CAAC,UAAU;IAClDN,GAAG,CAAC+B,QAAQ,CAAC,SAASjC,UAAU,EAAE,EAAEQ,KAAK,GAAG,GAAG,EAAE,EAAE,GAAG,CAACkC,cAAc,GAAG,CAAC,IAAI,CAAC,CAAC;;IAE/E;IACA,MAAMC,aAAa,GAAG9K,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE0I,KAAK,GAAG,KAAK,CAAC;IAChDN,GAAG,CAACS,SAAS,GAAG,MAAM;IACtBT,GAAG,CAAC6B,IAAI,GAAG,QAAQY,aAAa,UAAU;IAC1CzC,GAAG,CAAC8B,SAAS,GAAG,QAAQ;IACxB9B,GAAG,CAAC+B,QAAQ,CAAC,KAAK,EAAEzB,KAAK,GAAG,CAAC,EAAEC,MAAM,GAAG,EAAE,CAAC;IAE3CP,GAAG,CAAC0C,IAAI,CAAC,CAAC;IACV1C,GAAG,CAAC2C,SAAS,CAAC,EAAE,EAAEpC,MAAM,GAAG,CAAC,CAAC;IAC7BP,GAAG,CAAC4C,MAAM,CAAC,CAACjL,IAAI,CAAC2K,EAAE,GAAG,CAAC,CAAC;IACxBtC,GAAG,CAAC8B,SAAS,GAAG,QAAQ;IACxB9B,GAAG,CAAC+B,QAAQ,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7B/B,GAAG,CAAC6C,OAAO,CAAC,CAAC;EAEf,CAAC,EAAE,CAAChO,aAAa,EAAEoB,YAAY,EAAEF,cAAc,EAAEtB,SAAS,EAAEF,WAAW,CAAC,CAAC;;EAEzE;EACA,MAAMuO,UAAU,GAAG;IACjBxC,KAAK,EAAE,KAAK;IACZyC,OAAO,EAAE,UAAU;IACnBC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,KAAK;IACnBC,QAAQ,EAAE,MAAM;IAChBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE;EACT,CAAC;EAED,MAAMC,UAAU,GAAG;IACjBC,OAAO,EAAE,OAAO;IAChBJ,QAAQ,EAAE,MAAM;IAChBK,UAAU,EAAE,KAAK;IACjBH,KAAK,EAAE,SAAS;IAChBI,YAAY,EAAE;EAChB,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBD,YAAY,EAAE,MAAM;IACpBT,OAAO,EAAE,MAAM;IACfI,eAAe,EAAE,SAAS;IAC1BF,YAAY,EAAE,KAAK;IACnBD,MAAM,EAAE;EACV,CAAC;EAED,oBACEnP,OAAA;IAAK6P,KAAK,EAAE;MACVC,SAAS,EAAE,OAAO;MAClBR,eAAe,EAAE,SAAS;MAC1BS,UAAU,EAAE;IACd,CAAE;IAAAC,QAAA,GAGCxN,SAAS,CAACE,iBAAiB,iBAC1B1C,OAAA;MAAK6P,KAAK,EAAE;QACVI,QAAQ,EAAE,OAAO;QACjBC,GAAG,EAAE,MAAM;QACXC,KAAK,EAAE,MAAM;QACbC,UAAU,EAAE,iBAAiB;QAC7Bb,KAAK,EAAE,OAAO;QACdL,OAAO,EAAE,MAAM;QACfE,YAAY,EAAE,KAAK;QACnBC,QAAQ,EAAE,MAAM;QAChBU,UAAU,EAAE,WAAW;QACvBM,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,OAAO;QACjBnB,MAAM,EAAE;MACV,CAAE;MAAAa,QAAA,gBACAhQ,OAAA;QAAK6P,KAAK,EAAE;UAAEN,KAAK,EAAE,SAAS;UAAEG,UAAU,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAM,CAAE;QAAAK,QAAA,EAAC;MAE3E;QAAAlE,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENzQ,OAAA;QAAAgQ,QAAA,gBAAKhQ,OAAA;UAAAgQ,QAAA,EAAQ;QAAU;UAAAlE,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,MAAE,EAACjO,SAAS,CAACE,iBAAiB,CAAC2G,KAAK,EAAC,MAAI,EAAC7G,SAAS,CAACE,iBAAiB,CAACsC,SAAS;MAAA;QAAA8G,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAErHjO,SAAS,CAACG,WAAW,iBACpB3C,OAAA;QAAAgQ,QAAA,gBAAKhQ,OAAA;UAAAgQ,QAAA,EAAQ;QAAI;UAAAlE,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACjO,SAAS,CAACG,WAAW,CAACuF,MAAM,EAAC,GAAC,EAAC1F,SAAS,CAACG,WAAW,CAACyF,EAAE,GAAG,GAAG,GAAG,GAAG;MAAA;QAAA0D,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACtG,EAEAjO,SAAS,CAACI,cAAc,iBACvB5C,OAAA;QAAAgQ,QAAA,gBACEhQ,OAAA;UAAAgQ,QAAA,gBAAKhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAO;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACjO,SAAS,CAACI,cAAc,CAAC8G,MAAM;QAAA;UAAAoC,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACrEzQ,OAAA;UAAAgQ,QAAA,gBAAKhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAO;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACjO,SAAS,CAACI,cAAc,CAAC+G,MAAM;QAAA;UAAAmC,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACpEjO,SAAS,CAACI,cAAc,CAACgH,KAAK,iBAC7B5J,OAAA;UAAAgQ,QAAA,gBAAKhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAM;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,QAAI,EAACjO,SAAS,CAACI,cAAc,CAACgH,KAAK,CAACxI,KAAK,EAAC,OAAK,EAACoB,SAAS,CAACI,cAAc,CAACgH,KAAK,CAACvI,SAAS;QAAA;UAAAyK,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC3H,EACAjO,SAAS,CAACI,cAAc,CAACwH,OAAO,iBAC/BpK,OAAA;UAAK6P,KAAK,EAAE;YAAEN,KAAK,EAAE;UAAU,CAAE;UAAAS,QAAA,gBAC/BhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAQ;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,OAAG,EAACjO,SAAS,CAACI,cAAc,CAACwH,OAAO,CAACZ,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEhH,SAAS,CAACI,cAAc,CAACwH,OAAO,CAACZ,EAAE,EAAC,MACpH,EAAChH,SAAS,CAACI,cAAc,CAACwH,OAAO,CAACC,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAE7H,SAAS,CAACI,cAAc,CAACwH,OAAO,CAACC,EAAE;QAAA;UAAAyB,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CACN,eACDzQ,OAAA;UAAAgQ,QAAA,gBAAKhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAK;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACjO,SAAS,CAACI,cAAc,CAACiH,cAAc,EAAC,IAAE;QAAA;UAAAiC,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAA3E,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CACN,eAEDzQ,OAAA;QAAK6P,KAAK,EAAE;UAAEa,SAAS,EAAE;QAAM,CAAE;QAAAV,QAAA,eAC/BhQ,OAAA;UAAAgQ,QAAA,gBAAKhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAM;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,WAAO,EAACvO,cAAc,EAAC,SAAO,EAACE,YAAY,CAACyB,MAAM,EAAC,UAAQ,EAACvB,aAAa,GAAG,KAAK,GAAG,IAAI;QAAA;UAAAwJ,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAA3E,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxH,CAAC,EAELjO,SAAS,CAACK,MAAM,CAACgB,MAAM,GAAG,CAAC,iBAC1B7D,OAAA;QAAK6P,KAAK,EAAE;UAAEa,SAAS,EAAE,KAAK;UAAEnB,KAAK,EAAE;QAAU,CAAE;QAAAS,QAAA,gBACjDhQ,OAAA;UAAAgQ,QAAA,eAAKhQ,OAAA;YAAAgQ,QAAA,EAAQ;UAAW;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvCzQ,OAAA;UAAK6P,KAAK,EAAE;YAAER,QAAQ,EAAE;UAAM,CAAE;UAAAW,QAAA,GAAA7P,iBAAA,GAAEqC,SAAS,CAACK,MAAM,CAACL,SAAS,CAACK,MAAM,CAACgB,MAAM,GAAG,CAAC,CAAC,cAAA1D,iBAAA,uBAA7CA,iBAAA,CAA+CgF;QAAO;UAAA2G,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAA3E,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5F,CACN;IAAA;MAAA3E,QAAA,EAAAyE,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,eAGDzQ,OAAA;MAAK6P,KAAK,EAAE;QACVP,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdL,OAAO,EAAE,QAAQ;QACjBjB,SAAS,EAAE,QAAQ;QACnB0C,SAAS,EAAE,4BAA4B;QACvCC,YAAY,EAAE;MAChB,CAAE;MAAAZ,QAAA,gBACAhQ,OAAA;QAAI6P,KAAK,EAAE;UACTgB,MAAM,EAAE,CAAC;UACTxB,QAAQ,EAAE,MAAM;UAChBK,UAAU,EAAE,KAAK;UACjBoB,aAAa,EAAE,QAAQ;UACvBV,UAAU,EAAE,oDAAoD;UAChEW,oBAAoB,EAAE,MAAM;UAC5BC,mBAAmB,EAAE,aAAa;UAClCC,cAAc,EAAE;QAClB,CAAE;QAAAjB,QAAA,EAAC;MAEH;QAAAlE,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLzQ,OAAA;QAAG6P,KAAK,EAAE;UACRgB,MAAM,EAAE,WAAW;UACnBxB,QAAQ,EAAE,MAAM;UAChB6B,OAAO,EAAE,GAAG;UACZxB,UAAU,EAAE,KAAK;UACjBH,KAAK,EAAE;QACT,CAAE;QAAAS,QAAA,EAAC;MAEH;QAAAlE,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAA3E,QAAA,EAAAyE,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNzQ,OAAA;MAAK6P,KAAK,EAAE;QACVJ,OAAO,EAAE,MAAM;QACf0B,mBAAmB,EAAE,WAAW;QAChCzE,MAAM,EAAE,qBAAqB;QAC7B0E,GAAG,EAAE;MACP,CAAE;MAAApB,QAAA,gBAGAhQ,OAAA;QAAK6P,KAAK,EAAE;UACVP,eAAe,EAAE,SAAS;UAC1B+B,WAAW,EAAE,mBAAmB;UAChCnC,OAAO,EAAE,WAAW;UACpBoC,SAAS,EAAE;QACb,CAAE;QAAAtB,QAAA,gBAGAhQ,OAAA;UAAK6P,KAAK,EAAED,YAAa;UAAAI,QAAA,gBACvBhQ,OAAA;YAAK6P,KAAK,EAAE;cAAEJ,OAAO,EAAE,MAAM;cAAE8B,UAAU,EAAE,QAAQ;cAAEH,GAAG,EAAE,MAAM;cAAEzB,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACvFhQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEqB,MAAM,EAAE,CAAC;gBAAEW,IAAI,EAAE;cAAE,CAAE;cAAAxB,QAAA,EAAC;YAAc;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3EzQ,OAAA;cACEyR,OAAO,EAAEA,CAAA;gBAAA,IAAAC,qBAAA;gBAAA,QAAAA,qBAAA,GAAM5O,YAAY,CAACiJ,OAAO,cAAA2F,qBAAA,uBAApBA,qBAAA,CAAsBC,KAAK,CAAC,CAAC;cAAA,CAAC;cAC7C9B,KAAK,EAAE;gBACLX,OAAO,EAAE,UAAU;gBACnBI,eAAe,EAAEhP,OAAO,GAAG,SAAS,GAAG,SAAS;gBAChDiP,KAAK,EAAE,OAAO;gBACdJ,MAAM,EAAE,MAAM;gBACdC,YAAY,EAAE,KAAK;gBACnBwC,MAAM,EAAE,SAAS;gBACjBvC,QAAQ,EAAE,MAAM;gBAChBK,UAAU,EAAE,KAAK;gBACjBmC,UAAU,EAAE;cACd,CAAE;cAAA7B,QAAA,EAED1P,OAAO,GAAG,UAAU,GAAG;YAAW;cAAAwL,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACTzQ,OAAA;cACE8R,IAAI,EAAC,MAAM;cACXC,MAAM,EAAC,MAAM;cACbC,QAAQ,EAAE1M,gBAAiB;cAC3B2M,GAAG,EAAEnP,YAAa;cAClB+M,KAAK,EAAE;gBAAEJ,OAAO,EAAE;cAAO;YAAE;cAAA3D,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAELnQ,OAAO,iBACNN,OAAA;YAAK6P,KAAK,EAAE;cACVR,QAAQ,EAAE,MAAM;cAChBE,KAAK,EAAE,SAAS;cAChBD,eAAe,EAAE,SAAS;cAC1BJ,OAAO,EAAE,KAAK;cACdE,YAAY,EAAE,KAAK;cACnBD,MAAM,EAAE,mBAAmB;cAC3B+C,SAAS,EAAE;YACb,CAAE;YAAAlC,QAAA,GAAC,eACE,EAAC1P,OAAO,CAAC+C,IAAI,EAAC,IAAE,EAAC7C,OAAO,CAACqD,MAAM,EAAC,gBACrC;UAAA;YAAAiI,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACN;QAAA;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNzQ,OAAA;UAAK6P,KAAK,EAAED,YAAa;UAAAI,QAAA,gBACvBhQ,OAAA;YAAI6P,KAAK,EAAE;cAAEgB,MAAM,EAAE,YAAY;cAAExB,QAAQ,EAAE,MAAM;cAAEE,KAAK,EAAE;YAAU,CAAE;YAAAS,QAAA,EAAC;UAAa;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAE3FzQ,OAAA;YAAK6P,KAAK,EAAE;cAAEJ,OAAO,EAAE,MAAM;cAAE8B,UAAU,EAAE,QAAQ;cAAEH,GAAG,EAAE,MAAM;cAAEzB,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACvFhQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEqB,MAAM,EAAE,CAAC;gBAAEsB,QAAQ,EAAE,MAAM;gBAAE9C,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAAC;YAAI;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5FzQ,OAAA;cACEiD,KAAK,EAAEvB,YAAY,CAACE,WAAY;cAChCoQ,QAAQ,EAAG/L,CAAC,IAAKtE,eAAe,CAACmD,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAElD,WAAW,EAAEqE,CAAC,CAACR,MAAM,CAACxC;cAAM,CAAC,CAAC,CAAE;cACrF4M,KAAK,EAAE;gBAAE,GAAGZ,UAAU;gBAAEuC,IAAI,EAAE,CAAC;gBAAEnC,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAEnDhN,UAAU,CAACgB,GAAG,CAACoO,GAAG,iBACjBpS,OAAA;gBAAwBiD,KAAK,EAAEmP,GAAG,CAACnP,KAAM;gBAAA+M,QAAA,EAAEoC,GAAG,CAAClP;cAAK,GAAvCkP,GAAG,CAACnP,KAAK;gBAAA6I,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAuC,CAC9D;YAAC;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAENzQ,OAAA;YAAK6P,KAAK,EAAE;cAAEF,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACnChQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEH,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAAC;YAAU;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrEzQ,OAAA;cAAK6P,KAAK,EAAE;gBAAEJ,OAAO,EAAE,MAAM;gBAAE2B,GAAG,EAAE;cAAM,CAAE;cAAApB,QAAA,EACzC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAChM,GAAG,CAACnC,IAAI,iBACjB7B,OAAA;gBAEEyR,OAAO,EAAEA,CAAA,KAAM9P,eAAe,CAACmD,IAAI,KAAK;kBAAE,GAAGA,IAAI;kBAAEjD;gBAAK,CAAC,CAAC,CAAE;gBAC5DgO,KAAK,EAAE;kBACL2B,IAAI,EAAE,CAAC;kBACPtC,OAAO,EAAE,KAAK;kBACdC,MAAM,EAAEzN,YAAY,CAACG,IAAI,KAAKA,IAAI,GAAG,mBAAmB,GAAG,mBAAmB;kBAC9EuN,YAAY,EAAE,KAAK;kBACnBE,eAAe,EAAE5N,YAAY,CAACG,IAAI,KAAKA,IAAI,GAAG,SAAS,GAAG,SAAS;kBACnE0N,KAAK,EAAE7N,YAAY,CAACG,IAAI,KAAKA,IAAI,GAAG,OAAO,GAAG,SAAS;kBACvD+P,MAAM,EAAE,SAAS;kBACjBvC,QAAQ,EAAE,MAAM;kBAChBK,UAAU,EAAEhO,YAAY,CAACG,IAAI,KAAKA,IAAI,GAAG,KAAK,GAAG,KAAK;kBACtDgQ,UAAU,EAAE;gBACd,CAAE;gBAAA7B,QAAA,GAEDnO,IAAI,EAAC,IACR;cAAA,GAhBOA,IAAI;gBAAAiK,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAgBH,CACT;YAAC;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzQ,OAAA;YAAK6P,KAAK,EAAE;cAAEF,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACnChQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEH,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAAC;YAAqB;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChFzQ,OAAA;cACE8R,IAAI,EAAC,QAAQ;cACb7O,KAAK,EAAEvB,YAAY,CAACK,MAAO;cAC3BiQ,QAAQ,EAAG/L,CAAC,IAAKtE,eAAe,CAACmD,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE/C,MAAM,EAAEkF,QAAQ,CAAChB,CAAC,CAACR,MAAM,CAACxC,KAAK,CAAC,IAAI;cAAE,CAAC,CAAC,CAAE;cAC/F4M,KAAK,EAAE;gBAAE,GAAGZ,UAAU;gBAAEI,QAAQ,EAAE,MAAM;gBAAEH,OAAO,EAAE;cAAU,CAAE;cAC/D5B,GAAG,EAAC,MAAM;cACVvJ,GAAG,EAAC,OAAO;cACXsO,IAAI,EAAC;YAAI;cAAAvG,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNzQ,OAAA;UAAK6P,KAAK,EAAED,YAAa;UAAAI,QAAA,gBACvBhQ,OAAA;YAAI6P,KAAK,EAAE;cAAEgB,MAAM,EAAE,YAAY;cAAExB,QAAQ,EAAE,MAAM;cAAEE,KAAK,EAAE;YAAU,CAAE;YAAAS,QAAA,EAAC;UAAS;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEvFzQ,OAAA;YAAK6P,KAAK,EAAE;cAAEJ,OAAO,EAAE,MAAM;cAAE8B,UAAU,EAAE,QAAQ;cAAEH,GAAG,EAAE,MAAM;cAAEzB,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACvFhQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEqB,MAAM,EAAE,CAAC;gBAAEsB,QAAQ,EAAE,MAAM;gBAAE9C,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAAC;YAAK;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7FzQ,OAAA;cACEiD,KAAK,EAAEvB,YAAY,CAACI,QAAS;cAC7BkQ,QAAQ,EAAG/L,CAAC,IAAKtE,eAAe,CAACmD,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEhD,QAAQ,EAAEmE,CAAC,CAACR,MAAM,CAACxC;cAAM,CAAC,CAAC,CAAE;cAClF4M,KAAK,EAAE;gBAAE,GAAGZ,UAAU;gBAAEuC,IAAI,EAAE,CAAC;gBAAEnC,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAEnDsC,MAAM,CAACC,OAAO,CAACpP,SAAS,CAAC,CAACa,GAAG,CAAC,CAAC,CAACwO,GAAG,EAAE/H,IAAI,CAAC,kBACzCzK,OAAA;gBAAkBiD,KAAK,EAAEuP,GAAI;gBAAAxC,QAAA,EAAEvF,IAAI,CAACpH;cAAI,GAA3BmP,GAAG;gBAAA1G,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiC,CAClD;YAAC;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNzQ,OAAA;UAAK6P,KAAK,EAAED,YAAa;UAAAI,QAAA,gBACvBhQ,OAAA;YAAI6P,KAAK,EAAE;cAAEgB,MAAM,EAAE,YAAY;cAAExB,QAAQ,EAAE,MAAM;cAAEE,KAAK,EAAE;YAAU,CAAE;YAAAS,QAAA,EAAC;UAAW;YAAAlE,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEzFzQ,OAAA;YAAK6P,KAAK,EAAE;cAAEF,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACnChQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEH,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,GAAC,eAAa,EAACtO,YAAY,CAACM,WAAW,EAAC,OAAE;YAAA;cAAA8J,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACpGzQ,OAAA;cACE8R,IAAI,EAAC,OAAO;cACZxE,GAAG,EAAC,IAAI;cACRvJ,GAAG,EAAC,KAAK;cACTd,KAAK,EAAEvB,YAAY,CAACM,WAAY;cAChCgQ,QAAQ,EAAG/L,CAAC,IAAKtE,eAAe,CAACmD,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE9C,WAAW,EAAEiF,QAAQ,CAAChB,CAAC,CAACR,MAAM,CAACxC,KAAK;cAAE,CAAC,CAAC,CAAE;cAC/F4M,KAAK,EAAE;gBAAEpD,KAAK,EAAE,MAAM;gBAAEoE,MAAM,EAAE;cAAQ;YAAE;cAAA/E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC,eACFzQ,OAAA;cAAK6P,KAAK,EAAE;gBAAEJ,OAAO,EAAE,MAAM;gBAAEgD,cAAc,EAAE,eAAe;gBAAEpD,QAAQ,EAAE,MAAM;gBAAEE,KAAK,EAAE;cAAU,CAAE;cAAAS,QAAA,gBACnGhQ,OAAA;gBAAAgQ,QAAA,EAAM;cAAI;gBAAAlE,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAAAzQ,OAAA;gBAAAgQ,QAAA,EAAM;cAAK;gBAAAlE,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChC,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzQ,OAAA;YAAK6P,KAAK,EAAE;cAAEF,YAAY,EAAE;YAAO,CAAE;YAAAK,QAAA,gBACnChQ,OAAA;cAAO6P,KAAK,EAAE;gBAAE,GAAGL,UAAU;gBAAEH,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,GAAC,YAAU,EAACtO,YAAY,CAACO,QAAQ,EAAC,GAAC;YAAA;cAAA6J,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7FzQ,OAAA;cACE8R,IAAI,EAAC,OAAO;cACZxE,GAAG,EAAC,IAAI;cACRvJ,GAAG,EAAC,IAAI;cACRd,KAAK,EAAEvB,YAAY,CAACO,QAAS;cAC7B+P,QAAQ,EAAG/L,CAAC,IAAKtE,eAAe,CAACmD,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE7C,QAAQ,EAAEgF,QAAQ,CAAChB,CAAC,CAACR,MAAM,CAACxC,KAAK;cAAE,CAAC,CAAC,CAAE;cAC5F4M,KAAK,EAAE;gBAAEpD,KAAK,EAAE,MAAM;gBAAEoE,MAAM,EAAE;cAAQ;YAAE;cAAA/E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC,eACFzQ,OAAA;cAAK6P,KAAK,EAAE;gBAAEJ,OAAO,EAAE,MAAM;gBAAEgD,cAAc,EAAE,eAAe;gBAAEpD,QAAQ,EAAE,MAAM;gBAAEE,KAAK,EAAE;cAAU,CAAE;cAAAS,QAAA,gBACnGhQ,OAAA;gBAAAgQ,QAAA,EAAM;cAAG;gBAAAlE,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAAAzQ,OAAA;gBAAAgQ,QAAA,EAAM;cAAG;gBAAAlE,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAA3E,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNzQ,OAAA;QAAK6P,KAAK,EAAE;UACVP,eAAe,EAAE,SAAS;UAC1BJ,OAAO,EAAE,MAAM;UACfO,OAAO,EAAE,MAAM;UACfiD,aAAa,EAAE,QAAQ;UACvBzC,QAAQ,EAAE;QACZ,CAAE;QAAAD,QAAA,EAEEpP,SAAS,IAAIF,WAAW,gBACxBV,OAAA;UAAAgQ,QAAA,gBAEEhQ,OAAA;YAAK6P,KAAK,EAAE;cACVP,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE,OAAO;cACdL,OAAO,EAAE,MAAM;cACfE,YAAY,EAAE,KAAK;cACnBO,YAAY,EAAE,MAAM;cACpBF,OAAO,EAAE,MAAM;cACf0B,mBAAmB,EAAE,aAAa;cAClCC,GAAG,EAAE,MAAM;cACXnD,SAAS,EAAE;YACb,CAAE;YAAA+B,QAAA,gBAEAhQ,OAAA;cAAAgQ,QAAA,gBACEhQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEK,UAAU,EAAE,MAAM;kBAAEH,KAAK,EAAE;gBAAU,CAAE;gBAAAS,QAAA,EACpE,CAAC2C,kBAAA,IAAM;kBACN,IAAI/R,SAAS,EAAE,OAAOM,YAAY,CAACK,SAAS;kBAC5C,IAAIW,cAAc,GAAG,CAAC,IAAII,aAAa,EAAE,OAAOA,aAAa,CAAClB,KAAK;kBACnE,OAAO,CAAAV,WAAW,aAAXA,WAAW,wBAAAiS,kBAAA,GAAXjS,WAAW,CAAEkJ,KAAK,cAAA+I,kBAAA,uBAAlBA,kBAAA,CAAoBvR,KAAK,KAAI,CAAC;gBACvC,CAAC,EAAE;cAAC;gBAAA0K,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACNzQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEE,KAAK,EAAE,MAAM;kBAAEI,YAAY,EAAE;gBAAM,CAAE;gBAAAK,QAAA,GAClEpP,SAAS,GAAG,SAAS,GAAG,MAAM,EAAC,KAChC,EAAC,CAACA,SAAS,IAAIsB,cAAc,GAAG,CAAC,iBAC/BlC,OAAA;kBAAM6P,KAAK,EAAE;oBAAEN,KAAK,EAAE,SAAS;oBAAEqD,UAAU,EAAE;kBAAM,CAAE;kBAAA5C,QAAA,GAAC,IAAE,EAAC9N,cAAc,EAAC,GAAC;gBAAA;kBAAA4J,QAAA,EAAAyE,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAChF;cAAA;gBAAA3E,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,EACL,CAAC7P,SAAS,iBACTZ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,KAAK;kBAAEE,KAAK,EAAE;gBAAO,CAAE;gBAAAS,QAAA,GAAC,IAC5C,EAAC9N,cAAc,GAAG,CAAC,IAAII,aAAa,GAAGA,aAAa,CAACkC,QAAQ,GAAI,CAAA9D,WAAW,aAAXA,WAAW,wBAAAN,mBAAA,GAAXM,WAAW,CAAEkJ,KAAK,cAAAxJ,mBAAA,uBAAlBA,mBAAA,CAAoBoE,QAAQ,KAAI,CAAE,EAAC,MACtG,EAACtC,cAAc,GAAG,CAAC,IAAII,aAAa,KAAI5B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkJ,KAAK,kBACxD5J,OAAA;kBAAK6P,KAAK,EAAE;oBAAEN,KAAK,EAAEjN,aAAa,CAAClB,KAAK,GAAGV,WAAW,CAACkJ,KAAK,CAACxI,KAAK,GAAG,SAAS,GAAG;kBAAU,CAAE;kBAAA4O,QAAA,GAC1F1N,aAAa,CAAClB,KAAK,GAAGV,WAAW,CAACkJ,KAAK,CAACxI,KAAK,GAAG,GAAG,GAAG,EAAE,EAAEkB,aAAa,CAAClB,KAAK,GAAGV,WAAW,CAACkJ,KAAK,CAACxI,KAAK,EAAC,KAC3G;gBAAA;kBAAA0K,QAAA,EAAAyE,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CACN;cAAA;gBAAA3E,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CACN;YAAA;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAGNzQ,OAAA;cAAAgQ,QAAA,gBACEhQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEK,UAAU,EAAE,MAAM;kBAAEH,KAAK,EAAE;gBAAU,CAAE;gBAAAS,QAAA,EACpE,CAAC6C,mBAAA,IAAM;kBACN,IAAIjS,SAAS,EAAE,OAAOM,YAAY,CAACM,aAAa;kBAChD,IAAIU,cAAc,GAAG,CAAC,IAAII,aAAa,EAAE,OAAOA,aAAa,CAACjB,SAAS;kBACvE,OAAO,CAAAX,WAAW,aAAXA,WAAW,wBAAAmS,mBAAA,GAAXnS,WAAW,CAAEkJ,KAAK,cAAAiJ,mBAAA,uBAAlBA,mBAAA,CAAoBxR,SAAS,KAAI,CAAC;gBAC3C,CAAC,EAAE;cAAC;gBAAAyK,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACNzQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEE,KAAK,EAAE,MAAM;kBAAEI,YAAY,EAAE;gBAAM,CAAE;gBAAAK,QAAA,GAClEpP,SAAS,GAAG,SAAS,GAAG,MAAM,EAAC,QAChC,EAAC,CAACA,SAAS,IAAIsB,cAAc,GAAG,CAAC,iBAC/BlC,OAAA;kBAAM6P,KAAK,EAAE;oBAAEN,KAAK,EAAE,SAAS;oBAAEqD,UAAU,EAAE;kBAAM,CAAE;kBAAA5C,QAAA,GAAC,IAAE,EAAC9N,cAAc,EAAC,GAAC;gBAAA;kBAAA4J,QAAA,EAAAyE,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAChF;cAAA;gBAAA3E,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,EACL,CAAC7P,SAAS,iBACTZ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,KAAK;kBAAEE,KAAK,EAAE;gBAAO,CAAE;gBAAAS,QAAA,GAAC,IAC5C,EAAC9N,cAAc,GAAG,CAAC,IAAII,aAAa,GAAGA,aAAa,CAACoC,YAAY,GAAI,CAAAhE,WAAW,aAAXA,WAAW,wBAAAL,mBAAA,GAAXK,WAAW,CAAEkJ,KAAK,cAAAvJ,mBAAA,uBAAlBA,mBAAA,CAAoBqE,YAAY,KAAI,CAAE,EAAC,MAC9G,EAACxC,cAAc,GAAG,CAAC,IAAII,aAAa,KAAI5B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEkJ,KAAK,kBACxD5J,OAAA;kBAAK6P,KAAK,EAAE;oBAAEN,KAAK,EAAEjN,aAAa,CAACjB,SAAS,GAAGX,WAAW,CAACkJ,KAAK,CAACvI,SAAS,GAAG,SAAS,GAAG;kBAAU,CAAE;kBAAA2O,QAAA,GAClG1N,aAAa,CAACjB,SAAS,GAAGX,WAAW,CAACkJ,KAAK,CAACvI,SAAS,GAAG,GAAG,GAAG,EAAE,EAAEiB,aAAa,CAACjB,SAAS,GAAGX,WAAW,CAACkJ,KAAK,CAACvI,SAAS,EAAC,KAC3H;gBAAA;kBAAAyK,QAAA,EAAAyE,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CACN;cAAA;gBAAA3E,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CACN;YAAA;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eAGNzQ,OAAA;cAAAgQ,QAAA,gBACEhQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEK,UAAU,EAAE,MAAM;kBAAEH,KAAK,EAAE;gBAAU,CAAE;gBAAAS,QAAA,EACpE,CAAC8C,qBAAA,IAAM;kBACN,IAAIlS,SAAS,EAAE,OAAOM,YAAY,CAACI,QAAQ;kBAC3C;kBACA,MAAMyR,aAAa,GAAGjP,IAAI,CAACC,GAAG,CAAC,IAAI,CAAArD,WAAW,aAAXA,WAAW,wBAAAoS,qBAAA,GAAXpS,WAAW,CAAEuI,aAAa,cAAA6J,qBAAA,uBAA1BA,qBAAA,CAA4B9O,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACG,KAAK,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC;kBACzF,OAAON,IAAI,CAACyF,KAAK,CAACwJ,aAAa,GAAG,EAAE,CAAC,GAAG,EAAE;gBAC5C,CAAC,EAAE;cAAC;gBAAAjH,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,eACNzQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEE,KAAK,EAAE,MAAM;kBAAEI,YAAY,EAAE;gBAAM,CAAE;gBAAAK,QAAA,GAAC,gBAEpE,EAAC,CAACpP,SAAS,IAAIsB,cAAc,GAAG,CAAC,iBAC/BlC,OAAA;kBAAM6P,KAAK,EAAE;oBAAEN,KAAK,EAAE,SAAS;oBAAEqD,UAAU,EAAE;kBAAM,CAAE;kBAAA5C,QAAA,EAAC;gBAAK;kBAAAlE,QAAA,EAAAyE,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAClE;cAAA;gBAAA3E,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACNzQ,OAAA;gBAAK6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,KAAK;kBAAEE,KAAK,EAAE;gBAAO,CAAE;gBAAAS,QAAA,EAC5CpP,SAAS,GAAG,MAAM,GAAG;cAAa;gBAAAkL,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNzQ,OAAA;YAAK6P,KAAK,EAAE;cACV2B,IAAI,EAAE,CAAC;cACPvB,QAAQ,EAAE,UAAU;cACpBvD,MAAM,EAAE,qBAAqB;cAC7BoD,SAAS,EAAE,OAAO;cAClBkD,SAAS,EAAE;YACb,CAAE;YAAAhD,QAAA,GAECtP,WAAW,IAAI,CAACE,SAAS,iBACxBZ,OAAA;cAAK6P,KAAK,EAAE;gBACVI,QAAQ,EAAE,UAAU;gBACpBC,GAAG,EAAE,KAAK;gBACV+C,IAAI,EAAE,KAAK;gBACXxD,OAAO,EAAE,MAAM;gBACf8B,UAAU,EAAE,QAAQ;gBACpBH,GAAG,EAAE,KAAK;gBACV9B,eAAe,EAAE,uBAAuB;gBACxCJ,OAAO,EAAE,UAAU;gBACnBE,YAAY,EAAE,KAAK;gBACnBD,MAAM,EAAE,mBAAmB;gBAC3BkB,MAAM,EAAE;cACV,CAAE;cAAAL,QAAA,gBACAhQ,OAAA;gBAAO6P,KAAK,EAAE;kBAAER,QAAQ,EAAE,MAAM;kBAAEE,KAAK,EAAE,SAAS;kBAAEG,UAAU,EAAE;gBAAM,CAAE;gBAAAM,QAAA,EAAC;cAEzE;gBAAAlE,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACRzQ,OAAA;gBACEiD,KAAK,EAAEf,cAAe;gBACtB8P,QAAQ,EAAG/L,CAAC,IAAK;kBACf,MAAM+C,QAAQ,GAAG/B,QAAQ,CAAChB,CAAC,CAACR,MAAM,CAACxC,KAAK,CAAC;kBACzC4B,OAAO,CAACc,GAAG,CAAC,sCAAsCqD,QAAQ,EAAE,CAAC;kBAC7DD,qBAAqB,CAACC,QAAQ,CAAC;gBACjC,CAAE;gBACF6G,KAAK,EAAE;kBACLX,OAAO,EAAE,SAAS;kBAClBC,MAAM,EAAE,mBAAmB;kBAC3BC,YAAY,EAAE,KAAK;kBACnBC,QAAQ,EAAE,MAAM;kBAChBC,eAAe,EAAE,SAAS;kBAC1BC,KAAK,EAAE;gBACT,CAAE;gBAAAS,QAAA,EAEDtM,gBAAgB,CAACM,GAAG,CAACkP,MAAM,iBAC1BlT,OAAA;kBAA2BiD,KAAK,EAAEiQ,MAAM,CAACjQ,KAAM;kBAAA+M,QAAA,EAC5CkD,MAAM,CAAChQ;gBAAK,GADFgQ,MAAM,CAACjQ,KAAK;kBAAA6I,QAAA,EAAAyE,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEjB,CACT;cAAC;gBAAA3E,QAAA,EAAAyE,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAA3E,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACN,eAEDzQ,OAAA;cACEiS,GAAG,EAAElP,SAAU;cACf8M,KAAK,EAAE;gBACLpD,KAAK,EAAE,MAAM;gBACbC,MAAM,EAAE,MAAM;gBACdyC,MAAM,EAAE,mBAAmB;gBAC3BC,YAAY,EAAE,KAAK;gBACnBE,eAAe,EAAE;cACnB;YAAE;cAAAxD,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAENzQ,OAAA;UAAK6P,KAAK,EAAE;YACV2B,IAAI,EAAE,CAAC;YACP/B,OAAO,EAAE,MAAM;YACf8B,UAAU,EAAE,QAAQ;YACpBkB,cAAc,EAAE,QAAQ;YACxBnD,eAAe,EAAE,SAAS;YAC1BF,YAAY,EAAE,KAAK;YACnBD,MAAM,EAAE,oBAAoB;YAC5BW,SAAS,EAAE;UACb,CAAE;UAAAE,QAAA,eACAhQ,OAAA;YAAK6P,KAAK,EAAE;cAAE5B,SAAS,EAAE,QAAQ;cAAEsB,KAAK,EAAE;YAAU,CAAE;YAAAS,QAAA,gBACpDhQ,OAAA;cAAK6P,KAAK,EAAE;gBAAER,QAAQ,EAAE,MAAM;gBAAEM,YAAY,EAAE;cAAO,CAAE;cAAAK,QAAA,EAAC;YAAE;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChEzQ,OAAA;cAAI6P,KAAK,EAAE;gBAAEgB,MAAM,EAAE,WAAW;gBAAExB,QAAQ,EAAE,MAAM;gBAAEE,KAAK,EAAE;cAAU,CAAE;cAAAS,QAAA,EAAC;YAExE;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACLzQ,OAAA;cAAG6P,KAAK,EAAE;gBAAEgB,MAAM,EAAE,YAAY;gBAAExB,QAAQ,EAAE;cAAO,CAAE;cAAAW,QAAA,EAAC;YAEtD;cAAAlE,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAEJzQ,OAAA;cACEyR,OAAO,EAAEnH,cAAe;cACxB6I,QAAQ,EAAE,CAAC3S,OAAO,CAACqD,MAAM,IAAIjD,SAAU;cACvCiP,KAAK,EAAE;gBACLX,OAAO,EAAE,WAAW;gBACpBI,eAAe,EAAE1O,SAAS,GAAG,SAAS,GAAI,CAACJ,OAAO,CAACqD,MAAM,GAAG,SAAS,GAAG,SAAU;gBAClF0L,KAAK,EAAE,OAAO;gBACdJ,MAAM,EAAE,MAAM;gBACdC,YAAY,EAAE,KAAK;gBACnBC,QAAQ,EAAE,MAAM;gBAChBK,UAAU,EAAE,KAAK;gBACjBkC,MAAM,EAAG,CAACpR,OAAO,CAACqD,MAAM,IAAIjD,SAAS,GAAI,aAAa,GAAG,SAAS;gBAClEiR,UAAU,EAAE,eAAe;gBAC3BlB,SAAS,EAAE,4BAA4B;gBACvCwB,QAAQ,EAAE;cACZ,CAAE;cAAAnC,QAAA,EAEDpP,SAAS,GAAG,kBAAkB,GAAI,CAACJ,OAAO,CAACqD,MAAM,GAAG,mBAAmB,GAAG;YAAqB;cAAAiI,QAAA,EAAAyE,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1F,CAAC;UAAA;YAAA3E,QAAA,EAAAyE,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN;QAAC;UAAA3E,QAAA,EAAAyE,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MACN;QAAA3E,QAAA,EAAAyE,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAA3E,QAAA,EAAAyE,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAA3E,QAAA,EAAAyE,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvQ,EAAA,CAjpCID,WAAW;AAAAmT,EAAA,GAAXnT,WAAW;AAmpCjB,eAAeA,WAAW;AAAC,IAAAmT,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}